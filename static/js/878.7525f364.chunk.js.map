{"version":3,"file":"static/js/878.7525f364.chunk.js","mappings":"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","sources":["../node_modules/@tsparticles/engine/browser/Core/Utils/Constants.js","../node_modules/@tsparticles/engine/browser/Enums/Directions/MoveDirection.js","../node_modules/@tsparticles/engine/browser/Utils/TypeUtils.js","../node_modules/@tsparticles/engine/browser/Core/Utils/Vectors.js","../node_modules/@tsparticles/engine/browser/Utils/NumberUtils.js","../node_modules/@tsparticles/engine/browser/Enums/Modes/AnimationMode.js","../node_modules/@tsparticles/engine/browser/Enums/AnimationStatus.js","../node_modules/@tsparticles/engine/browser/Enums/Types/DestroyType.js","../node_modules/@tsparticles/engine/browser/Enums/Directions/OutModeDirection.js","../node_modules/@tsparticles/engine/browser/Enums/Modes/PixelMode.js","../node_modules/@tsparticles/engine/browser/Enums/Types/StartValueType.js","../node_modules/@tsparticles/engine/browser/Utils/Utils.js","../node_modules/@tsparticles/engine/browser/Enums/Types/AlterType.js","../node_modules/@tsparticles/engine/browser/Utils/ColorUtils.js","../node_modules/@tsparticles/engine/browser/Utils/CanvasUtils.js","../node_modules/@tsparticles/engine/browser/Core/Canvas.js","../node_modules/@tsparticles/engine/browser/Enums/InteractivityDetect.js","../node_modules/@tsparticles/engine/browser/Core/Utils/EventListeners.js","../node_modules/@tsparticles/engine/browser/Enums/Types/EventType.js","../node_modules/@tsparticles/engine/browser/Enums/Types/DivType.js","../node_modules/@tsparticles/engine/browser/Options/Classes/OptionsColor.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Background/Background.js","../node_modules/@tsparticles/engine/browser/Options/Classes/BackgroundMask/BackgroundMaskCover.js","../node_modules/@tsparticles/engine/browser/Options/Classes/BackgroundMask/BackgroundMask.js","../node_modules/@tsparticles/engine/browser/Options/Classes/FullScreen/FullScreen.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/ClickEvent.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/DivEvent.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/Parallax.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/HoverEvent.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/ResizeEvent.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/Events.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Modes/Modes.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Interactivity.js","../node_modules/@tsparticles/engine/browser/Options/Classes/ManualParticle.js","../node_modules/@tsparticles/engine/browser/Enums/Modes/ResponsiveMode.js","../node_modules/@tsparticles/engine/browser/Enums/Modes/ThemeMode.js","../node_modules/@tsparticles/engine/browser/Enums/Modes/CollisionMode.js","../node_modules/@tsparticles/engine/browser/Enums/Modes/OutMode.js","../node_modules/@tsparticles/engine/browser/Enums/Modes/LimitMode.js","../node_modules/@tsparticles/engine/browser/Enums/Types/InteractorType.js","../node_modules/@tsparticles/engine/browser/Enums/Types/ParticleOutType.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Responsive.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Theme/ThemeDefault.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Theme/Theme.js","../node_modules/@tsparticles/engine/browser/Options/Classes/AnimationOptions.js","../node_modules/@tsparticles/engine/browser/Options/Classes/ColorAnimation.js","../node_modules/@tsparticles/engine/browser/Options/Classes/HslAnimation.js","../node_modules/@tsparticles/engine/browser/Options/Classes/AnimatableColor.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Collisions/CollisionsAbsorb.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Collisions/CollisionsOverlap.js","../node_modules/@tsparticles/engine/browser/Options/Classes/ValueWithRandom.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Bounce/ParticlesBounce.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Collisions/Collisions.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Effect/Effect.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveAngle.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveAttract.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveCenter.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveGravity.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/Path/MovePath.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveTrailFill.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveTrail.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/OutModes.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/Spin.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/Move.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Opacity/OpacityAnimation.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Opacity/Opacity.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesDensity.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesNumberLimit.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesNumber.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Shadow.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Shape/Shape.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Size/SizeAnimation.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Size/Size.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Stroke.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/ZIndex/ZIndex.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/ParticlesOptions.js","../node_modules/@tsparticles/engine/browser/Utils/OptionsUtils.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Options.js","../node_modules/@tsparticles/engine/browser/Core/Utils/InteractionManager.js","../node_modules/@tsparticles/engine/browser/Core/Particle.js","../node_modules/@tsparticles/engine/browser/Core/Utils/Point.js","../node_modules/@tsparticles/engine/browser/Types/RangeType.js","../node_modules/@tsparticles/engine/browser/Core/Utils/Ranges.js","../node_modules/@tsparticles/engine/browser/Core/Utils/QuadTree.js","../node_modules/@tsparticles/engine/browser/Core/Particles.js","../node_modules/@tsparticles/engine/browser/Core/Retina.js","../node_modules/@tsparticles/engine/browser/Core/Container.js","../node_modules/@tsparticles/engine/browser/Utils/EventDispatcher.js","../node_modules/@tsparticles/engine/browser/Core/Engine.js","../node_modules/@tsparticles/engine/browser/Core/Utils/ExternalInteractorBase.js","../node_modules/@tsparticles/engine/browser/Core/Utils/ParticlesInteractorBase.js","../node_modules/@tsparticles/engine/browser/Enums/Directions/RotateDirection.js","../node_modules/@tsparticles/engine/browser/Enums/Types/GradientType.js","../node_modules/@tsparticles/engine/browser/Enums/Types/EasingType.js","../node_modules/@tsparticles/engine/browser/index.js","../node_modules/@tsparticles/engine/browser/init.js","../node_modules/@tsparticles/react/dist/Particles.js","../node_modules/@tsparticles/react/dist/index.js","../node_modules/@tsparticles/move-base/browser/Utils.js","../node_modules/@tsparticles/move-base/browser/BaseMover.js","../node_modules/@tsparticles/shape-circle/browser/Utils.js","../node_modules/@tsparticles/shape-circle/browser/CircleDrawer.js","../node_modules/@tsparticles/updater-color/browser/ColorUpdater.js","../node_modules/@tsparticles/plugin-hex-color/browser/HexColorManager.js","../node_modules/@tsparticles/plugin-hsl-color/browser/HslColorManager.js","../node_modules/@tsparticles/updater-opacity/browser/OpacityUpdater.js","../node_modules/@tsparticles/updater-out-modes/browser/BounceOutMode.js","../node_modules/@tsparticles/updater-out-modes/browser/Utils.js","../node_modules/@tsparticles/updater-out-modes/browser/DestroyOutMode.js","../node_modules/@tsparticles/updater-out-modes/browser/NoneOutMode.js","../node_modules/@tsparticles/updater-out-modes/browser/OutOutMode.js","../node_modules/@tsparticles/updater-out-modes/browser/OutOfCanvasUpdater.js","../node_modules/@tsparticles/plugin-rgb-color/browser/RgbColorManager.js","../node_modules/@tsparticles/updater-size/browser/SizeUpdater.js","../node_modules/@tsparticles/basic/browser/index.js","../node_modules/@tsparticles/plugin-hex-color/browser/index.js","../node_modules/@tsparticles/plugin-hsl-color/browser/index.js","../node_modules/@tsparticles/plugin-rgb-color/browser/index.js","../node_modules/@tsparticles/move-base/browser/index.js","../node_modules/@tsparticles/shape-circle/browser/index.js","../node_modules/@tsparticles/updater-color/browser/index.js","../node_modules/@tsparticles/updater-opacity/browser/index.js","../node_modules/@tsparticles/updater-out-modes/browser/index.js","../node_modules/@tsparticles/updater-size/browser/index.js","../node_modules/@tsparticles/shape-emoji/browser/EmojiDrawer.js","../node_modules/@tsparticles/shape-emoji/browser/Utils.js","../node_modules/@tsparticles/interaction-external-attract/browser/Utils.js","../node_modules/@tsparticles/interaction-external-attract/browser/Options/Classes/Attract.js","../node_modules/@tsparticles/interaction-external-attract/browser/Attractor.js","../node_modules/@tsparticles/interaction-external-bounce/browser/Utils.js","../node_modules/@tsparticles/interaction-external-bounce/browser/Options/Classes/Bounce.js","../node_modules/@tsparticles/interaction-external-bounce/browser/Bouncer.js","../node_modules/@tsparticles/interaction-external-bubble/browser/Options/Classes/BubbleBase.js","../node_modules/@tsparticles/interaction-external-bubble/browser/Options/Classes/BubbleDiv.js","../node_modules/@tsparticles/interaction-external-bubble/browser/Options/Classes/Bubble.js","../node_modules/@tsparticles/interaction-external-bubble/browser/Enums.js","../node_modules/@tsparticles/interaction-external-bubble/browser/Utils.js","../node_modules/@tsparticles/interaction-external-bubble/browser/Bubbler.js","../node_modules/@tsparticles/interaction-external-connect/browser/Options/Classes/ConnectLinks.js","../node_modules/@tsparticles/interaction-external-connect/browser/Options/Classes/Connect.js","../node_modules/@tsparticles/interaction-external-connect/browser/Utils.js","../node_modules/@tsparticles/interaction-external-connect/browser/Connector.js","../node_modules/@tsparticles/interaction-external-grab/browser/Options/Classes/GrabLinks.js","../node_modules/@tsparticles/interaction-external-grab/browser/Options/Classes/Grab.js","../node_modules/@tsparticles/interaction-external-grab/browser/Utils.js","../node_modules/@tsparticles/interaction-external-grab/browser/Grabber.js","../node_modules/@tsparticles/interaction-external-pause/browser/Pauser.js","../node_modules/@tsparticles/interaction-external-push/browser/Options/Classes/Push.js","../node_modules/@tsparticles/interaction-external-push/browser/Pusher.js","../node_modules/@tsparticles/interaction-external-remove/browser/Options/Classes/Remove.js","../node_modules/@tsparticles/interaction-external-remove/browser/Remover.js","../node_modules/@tsparticles/interaction-external-repulse/browser/Options/Classes/RepulseBase.js","../node_modules/@tsparticles/interaction-external-repulse/browser/Options/Classes/RepulseDiv.js","../node_modules/@tsparticles/interaction-external-repulse/browser/Options/Classes/Repulse.js","../node_modules/@tsparticles/interaction-external-repulse/browser/Repulser.js","../node_modules/@tsparticles/interaction-external-slow/browser/Options/Classes/Slow.js","../node_modules/@tsparticles/interaction-external-slow/browser/Slower.js","../node_modules/@tsparticles/shape-image/browser/Utils.js","../node_modules/@tsparticles/shape-image/browser/GifUtils/Constants.js","../node_modules/@tsparticles/shape-image/browser/GifUtils/ByteStream.js","../node_modules/@tsparticles/shape-image/browser/GifUtils/Enums/DisposalMethod.js","../node_modules/@tsparticles/shape-image/browser/GifUtils/Types/GIFDataHeaders.js","../node_modules/@tsparticles/shape-image/browser/GifUtils/Utils.js","../node_modules/@tsparticles/shape-image/browser/ImageDrawer.js","../node_modules/@tsparticles/shape-image/browser/Options/Classes/Preload.js","../node_modules/@tsparticles/shape-image/browser/ImagePreloader.js","../node_modules/@tsparticles/shape-image/browser/index.js","../node_modules/@tsparticles/updater-life/browser/Options/Classes/LifeDelay.js","../node_modules/@tsparticles/updater-life/browser/Options/Classes/LifeDuration.js","../node_modules/@tsparticles/updater-life/browser/Options/Classes/Life.js","../node_modules/@tsparticles/updater-life/browser/LifeUpdater.js","../node_modules/@tsparticles/updater-life/browser/Utils.js","../node_modules/@tsparticles/shape-line/browser/LineDrawer.js","../node_modules/@tsparticles/shape-line/browser/Utils.js","../node_modules/@tsparticles/move-parallax/browser/ParallaxMover.js","../node_modules/@tsparticles/interaction-particles-attract/browser/Attractor.js","../node_modules/@tsparticles/interaction-particles-collisions/browser/Absorb.js","../node_modules/@tsparticles/interaction-particles-collisions/browser/Bounce.js","../node_modules/@tsparticles/interaction-particles-collisions/browser/ResolveCollision.js","../node_modules/@tsparticles/interaction-particles-collisions/browser/Destroy.js","../node_modules/@tsparticles/interaction-particles-collisions/browser/Collider.js","../node_modules/@tsparticles/interaction-particles-links/browser/CircleWarp.js","../node_modules/@tsparticles/interaction-particles-links/browser/Options/Classes/LinksShadow.js","../node_modules/@tsparticles/interaction-particles-links/browser/Options/Classes/LinksTriangle.js","../node_modules/@tsparticles/interaction-particles-links/browser/Options/Classes/Links.js","../node_modules/@tsparticles/interaction-particles-links/browser/Linker.js","../node_modules/@tsparticles/interaction-particles-links/browser/Utils.js","../node_modules/@tsparticles/interaction-particles-links/browser/LinkInstance.js","../node_modules/@tsparticles/interaction-particles-links/browser/LinksPlugin.js","../node_modules/@tsparticles/interaction-particles-links/browser/index.js","../node_modules/@tsparticles/interaction-particles-links/browser/interaction.js","../node_modules/@tsparticles/interaction-particles-links/browser/plugin.js","../node_modules/@tsparticles/shape-polygon/browser/Utils.js","../node_modules/@tsparticles/shape-polygon/browser/PolygonDrawerBase.js","../node_modules/@tsparticles/shape-polygon/browser/PolygonDrawer.js","../node_modules/@tsparticles/shape-polygon/browser/TriangleDrawer.js","../node_modules/@tsparticles/shape-polygon/browser/index.js","../node_modules/@tsparticles/updater-rotate/browser/Options/Classes/RotateAnimation.js","../node_modules/@tsparticles/updater-rotate/browser/Options/Classes/Rotate.js","../node_modules/@tsparticles/updater-rotate/browser/RotateUpdater.js","../node_modules/@tsparticles/shape-square/browser/Utils.js","../node_modules/@tsparticles/shape-square/browser/SquareDrawer.js","../node_modules/@tsparticles/shape-star/browser/Utils.js","../node_modules/@tsparticles/shape-star/browser/StarDrawer.js","../node_modules/@tsparticles/updater-stroke-color/browser/StrokeColorUpdater.js","../node_modules/@tsparticles/slim/browser/index.js","../node_modules/@tsparticles/move-parallax/browser/index.js","../node_modules/@tsparticles/interaction-external-attract/browser/index.js","../node_modules/@tsparticles/interaction-external-bounce/browser/index.js","../node_modules/@tsparticles/interaction-external-bubble/browser/index.js","../node_modules/@tsparticles/interaction-external-connect/browser/index.js","../node_modules/@tsparticles/interaction-external-grab/browser/index.js","../node_modules/@tsparticles/interaction-external-pause/browser/index.js","../node_modules/@tsparticles/interaction-external-push/browser/index.js","../node_modules/@tsparticles/interaction-external-remove/browser/index.js","../node_modules/@tsparticles/interaction-external-repulse/browser/index.js","../node_modules/@tsparticles/interaction-external-slow/browser/index.js","../node_modules/@tsparticles/interaction-particles-attract/browser/index.js","../node_modules/@tsparticles/interaction-particles-collisions/browser/index.js","../node_modules/@tsparticles/plugin-easing-quad/browser/index.js","../node_modules/@tsparticles/shape-emoji/browser/index.js","../node_modules/@tsparticles/shape-line/browser/index.js","../node_modules/@tsparticles/shape-square/browser/index.js","../node_modules/@tsparticles/shape-star/browser/index.js","../node_modules/@tsparticles/updater-life/browser/index.js","../node_modules/@tsparticles/updater-rotate/browser/index.js","../node_modules/@tsparticles/updater-stroke-color/browser/index.js"],"sourcesContent":["export const generatedAttribute = \"generated\";\nexport const mouseDownEvent = \"pointerdown\";\nexport const mouseUpEvent = \"pointerup\";\nexport const mouseLeaveEvent = \"pointerleave\";\nexport const mouseOutEvent = \"pointerout\";\nexport const mouseMoveEvent = \"pointermove\";\nexport const touchStartEvent = \"touchstart\";\nexport const touchEndEvent = \"touchend\";\nexport const touchMoveEvent = \"touchmove\";\nexport const touchCancelEvent = \"touchcancel\";\nexport const resizeEvent = \"resize\";\nexport const visibilityChangeEvent = \"visibilitychange\";\nexport const errorPrefix = \"tsParticles - Error\";\nexport const percentDenominator = 100;\nexport const halfRandom = 0.5;\nexport const millisecondsToSeconds = 1000;\n","export var MoveDirection;\n(function (MoveDirection) {\n    MoveDirection[\"bottom\"] = \"bottom\";\n    MoveDirection[\"bottomLeft\"] = \"bottom-left\";\n    MoveDirection[\"bottomRight\"] = \"bottom-right\";\n    MoveDirection[\"left\"] = \"left\";\n    MoveDirection[\"none\"] = \"none\";\n    MoveDirection[\"right\"] = \"right\";\n    MoveDirection[\"top\"] = \"top\";\n    MoveDirection[\"topLeft\"] = \"top-left\";\n    MoveDirection[\"topRight\"] = \"top-right\";\n    MoveDirection[\"outside\"] = \"outside\";\n    MoveDirection[\"inside\"] = \"inside\";\n})(MoveDirection || (MoveDirection = {}));\n","export function isBoolean(arg) {\n    return typeof arg === \"boolean\";\n}\nexport function isString(arg) {\n    return typeof arg === \"string\";\n}\nexport function isNumber(arg) {\n    return typeof arg === \"number\";\n}\nexport function isFunction(arg) {\n    return typeof arg === \"function\";\n}\nexport function isObject(arg) {\n    return typeof arg === \"object\" && arg !== null;\n}\nexport function isArray(arg) {\n    return Array.isArray(arg);\n}\nexport function isNull(arg) {\n    return arg === null || arg === undefined;\n}\n","import { errorPrefix } from \"./Constants.js\";\nimport { isNumber } from \"../../Utils/TypeUtils.js\";\nconst origin = {\n    x: 0,\n    y: 0,\n    z: 0,\n}, squareExp = 2, inverseFactorNumerator = 1.0;\nexport class Vector3d {\n    constructor(xOrCoords, y, z) {\n        this._updateFromAngle = (angle, length) => {\n            this.x = Math.cos(angle) * length;\n            this.y = Math.sin(angle) * length;\n        };\n        if (!isNumber(xOrCoords) && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : origin.z;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z ?? origin.z;\n        }\n        else {\n            throw new Error(`${errorPrefix} Vector3d not initialized correctly`);\n        }\n    }\n    static get origin() {\n        return Vector3d.create(origin.x, origin.y, origin.z);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this._updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this._updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** squareExp + this.y ** squareExp;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    normalize() {\n        const length = this.length, noLength = 0;\n        if (length != noLength) {\n            this.multTo(inverseFactorNumerator / length);\n        }\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), origin.z);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : origin.z;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n}\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, origin.z);\n    }\n    static get origin() {\n        return Vector.create(origin.x, origin.y);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n","import { MoveDirection } from \"../Enums/Directions/MoveDirection.js\";\nimport { Vector } from \"../Core/Utils/Vectors.js\";\nimport { isNumber } from \"./TypeUtils.js\";\nimport { percentDenominator } from \"../Core/Utils/Constants.js\";\nlet _random = Math.random;\nconst _animationLoop = {\n    nextFrame: (cb) => requestAnimationFrame(cb),\n    cancel: (idx) => cancelAnimationFrame(idx),\n}, double = 2, doublePI = Math.PI * double;\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    const min = 0, max = 1;\n    return clamp(_random(), min, max - Number.EPSILON);\n}\nexport function setAnimationFunctions(nextFrame, cancel) {\n    _animationLoop.nextFrame = (callback) => nextFrame(callback);\n    _animationLoop.cancel = (handle) => cancel(handle);\n}\nexport function animate(fn) {\n    return _animationLoop.nextFrame(fn);\n}\nexport function cancelAnimation(handle) {\n    _animationLoop.cancel(handle);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r), minOffset = 0;\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = minOffset;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return isNumber(value) ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return isNumber(value) ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return isNumber(value) ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && isNumber(source))) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y, squareExp = 2;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** squareExp + dy ** squareExp) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function degToRad(degrees) {\n    const PIDeg = 180;\n    return (degrees * Math.PI) / PIDeg;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (isNumber(direction)) {\n        return degToRad(direction);\n    }\n    const empty = 0, half = 0.5, quarter = 0.25, threeQuarter = half + quarter;\n    switch (direction) {\n        case MoveDirection.top:\n            return -Math.PI * half;\n        case MoveDirection.topRight:\n            return -Math.PI * quarter;\n        case MoveDirection.right:\n            return empty;\n        case MoveDirection.bottomRight:\n            return Math.PI * quarter;\n        case MoveDirection.bottom:\n            return Math.PI * half;\n        case MoveDirection.bottomLeft:\n            return Math.PI * threeQuarter;\n        case MoveDirection.left:\n            return Math.PI;\n        case MoveDirection.topLeft:\n            return -Math.PI * threeQuarter;\n        case MoveDirection.inside:\n            return Math.atan2(center.y - position.y, center.x - position.x);\n        case MoveDirection.outside:\n            return Math.atan2(position.y - center.y, position.x - center.x);\n        default:\n            return getRandom() * doublePI;\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    const double = 2;\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * double * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position?.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / percentDenominator,\n            y: (data.position.y * data.size.height) / percentDenominator,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    return {\n        x: ((data.position?.x ?? getRandom() * percentDenominator) * data.size.width) / percentDenominator,\n        y: ((data.position?.y ?? getRandom() * percentDenominator) * data.size.height) / percentDenominator,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    return {\n        x: data.position?.x ?? getRandom() * data.size.width,\n        y: data.position?.y ?? getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    const defaultAlpha = 1;\n    if (!input) {\n        return defaultAlpha;\n    }\n    return input.endsWith(\"%\") ? parseFloat(input) / percentDenominator : parseFloat(input);\n}\n","export var AnimationMode;\n(function (AnimationMode) {\n    AnimationMode[\"auto\"] = \"auto\";\n    AnimationMode[\"increase\"] = \"increase\";\n    AnimationMode[\"decrease\"] = \"decrease\";\n    AnimationMode[\"random\"] = \"random\";\n})(AnimationMode || (AnimationMode = {}));\n","export var AnimationStatus;\n(function (AnimationStatus) {\n    AnimationStatus[\"increasing\"] = \"increasing\";\n    AnimationStatus[\"decreasing\"] = \"decreasing\";\n})(AnimationStatus || (AnimationStatus = {}));\n","export var DestroyType;\n(function (DestroyType) {\n    DestroyType[\"none\"] = \"none\";\n    DestroyType[\"max\"] = \"max\";\n    DestroyType[\"min\"] = \"min\";\n})(DestroyType || (DestroyType = {}));\n","export var OutModeDirection;\n(function (OutModeDirection) {\n    OutModeDirection[\"bottom\"] = \"bottom\";\n    OutModeDirection[\"left\"] = \"left\";\n    OutModeDirection[\"right\"] = \"right\";\n    OutModeDirection[\"top\"] = \"top\";\n})(OutModeDirection || (OutModeDirection = {}));\n","export var PixelMode;\n(function (PixelMode) {\n    PixelMode[\"precise\"] = \"precise\";\n    PixelMode[\"percent\"] = \"percent\";\n})(PixelMode || (PixelMode = {}));\n","export var StartValueType;\n(function (StartValueType) {\n    StartValueType[\"max\"] = \"max\";\n    StartValueType[\"min\"] = \"min\";\n    StartValueType[\"random\"] = \"random\";\n})(StartValueType || (StartValueType = {}));\n","import { clamp, collisionVelocity, getDistances, getRandom, getRangeMax, getRangeMin, getRangeValue, randomInRange, } from \"./NumberUtils.js\";\nimport { halfRandom, millisecondsToSeconds, percentDenominator } from \"../Core/Utils/Constants.js\";\nimport { isArray, isObject } from \"./TypeUtils.js\";\nimport { AnimationMode } from \"../Enums/Modes/AnimationMode.js\";\nimport { AnimationStatus } from \"../Enums/AnimationStatus.js\";\nimport { DestroyType } from \"../Enums/Types/DestroyType.js\";\nimport { OutModeDirection } from \"../Enums/Directions/OutModeDirection.js\";\nimport { PixelMode } from \"../Enums/Modes/PixelMode.js\";\nimport { StartValueType } from \"../Enums/Types/StartValueType.js\";\nimport { Vector } from \"../Core/Utils/Vectors.js\";\nconst _logger = {\n    debug: console.debug,\n    error: console.error,\n    info: console.info,\n    log: console.log,\n    verbose: console.log,\n    warning: console.warn,\n};\nexport function setLogger(logger) {\n    _logger.debug = logger.debug || _logger.debug;\n    _logger.error = logger.error || _logger.error;\n    _logger.info = logger.info || _logger.info;\n    _logger.log = logger.log || _logger.log;\n    _logger.verbose = logger.verbose || _logger.verbose;\n    _logger.warning = logger.warning || _logger.warning;\n}\nexport function getLogger() {\n    return _logger;\n}\nfunction rectSideBounce(data) {\n    const res = { bounced: false }, { pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor } = data, half = 0.5, minVelocity = 0;\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) * half && velocity > minVelocity) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) * half && velocity < minVelocity)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, selector => {\n        return element.matches(selector);\n    });\n    return isArray(res) ? res.some(t => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function safeIntersectionObserver(callback) {\n    if (isSsr() || typeof IntersectionObserver === \"undefined\") {\n        return;\n    }\n    return new IntersectionObserver(callback);\n}\nexport function safeMutationObserver(callback) {\n    if (isSsr() || typeof MutationObserver === \"undefined\") {\n        return;\n    }\n    return new MutationObserver(callback);\n}\nexport function isInArray(value, array) {\n    const invalidIndex = -1;\n    return value === array || (isArray(array) && array.indexOf(value) > invalidIndex);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight ?? \"400\"} 36px '${font ?? \"Verdana\"}'`);\n    }\n    catch {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    const minRadius = 0;\n    return areBoundsInside(calculateBounds(point, radius ?? minRadius), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === OutModeDirection.bottom) {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === OutModeDirection.left)) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === OutModeDirection.right)) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === OutModeDirection.top)) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (!isObject(source)) {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (isObject(destination) || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (isObject(destination) || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], destDict = destination;\n            destDict[key] =\n                isObject(value) && Array.isArray(value)\n                    ? value.map(v => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, t => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, div => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, selector => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, div => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getRangeValue(p.options.bounce.horizontal.value), getRangeValue(p.options.bounce.vertical.value)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1), minimumDistance = 0;\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < minimumDistance) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), bounceOptions = particle.options.bounce, resH = rectSideBounce({\n        pSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        pOtherSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        rectSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        rectOtherSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        velocity: particle.velocity.x,\n        factor: getRangeValue(bounceOptions.horizontal.value),\n    });\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        pSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        pOtherSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        rectSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        rectOtherSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        velocity: particle.velocity.y,\n        factor: getRangeValue(bounceOptions.vertical.value),\n    });\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    const defaultIndex = 0;\n    return isArray(obj) ? obj.map((item, index) => callback(item, index)) : callback(obj, defaultIndex);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return isArray(obj) ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    if (isArray(obj)) {\n        return obj.find((t, index) => callback(t, index));\n    }\n    const defaultIndex = 0;\n    return callback(obj, defaultIndex) ? obj : undefined;\n}\nexport function initParticleNumericAnimationValue(options, pxRatio) {\n    const valueRange = options.value, animationOptions = options.animation, res = {\n        delayTime: getRangeValue(animationOptions.delay) * millisecondsToSeconds,\n        enable: animationOptions.enable,\n        value: getRangeValue(options.value) * pxRatio,\n        max: getRangeMax(valueRange) * pxRatio,\n        min: getRangeMin(valueRange) * pxRatio,\n        loops: 0,\n        maxLoops: getRangeValue(animationOptions.count),\n        time: 0,\n    }, decayOffset = 1;\n    if (animationOptions.enable) {\n        res.decay = decayOffset - getRangeValue(animationOptions.decay);\n        switch (animationOptions.mode) {\n            case AnimationMode.increase:\n                res.status = AnimationStatus.increasing;\n                break;\n            case AnimationMode.decrease:\n                res.status = AnimationStatus.decreasing;\n                break;\n            case AnimationMode.random:\n                res.status = getRandom() >= halfRandom ? AnimationStatus.increasing : AnimationStatus.decreasing;\n                break;\n        }\n        const autoStatus = animationOptions.mode === AnimationMode.auto;\n        switch (animationOptions.startValue) {\n            case StartValueType.min:\n                res.value = res.min;\n                if (autoStatus) {\n                    res.status = AnimationStatus.increasing;\n                }\n                break;\n            case StartValueType.max:\n                res.value = res.max;\n                if (autoStatus) {\n                    res.status = AnimationStatus.decreasing;\n                }\n                break;\n            case StartValueType.random:\n            default:\n                res.value = randomInRange(res);\n                if (autoStatus) {\n                    res.status = getRandom() >= halfRandom ? AnimationStatus.increasing : AnimationStatus.decreasing;\n                }\n                break;\n        }\n    }\n    res.initialValue = res.value;\n    return res;\n}\nfunction getPositionOrSize(positionOrSize, canvasSize) {\n    const isPercent = positionOrSize.mode === PixelMode.percent;\n    if (!isPercent) {\n        const { mode: _, ...rest } = positionOrSize;\n        return rest;\n    }\n    const isPosition = \"x\" in positionOrSize;\n    if (isPosition) {\n        return {\n            x: (positionOrSize.x / percentDenominator) * canvasSize.width,\n            y: (positionOrSize.y / percentDenominator) * canvasSize.height,\n        };\n    }\n    else {\n        return {\n            width: (positionOrSize.width / percentDenominator) * canvasSize.width,\n            height: (positionOrSize.height / percentDenominator) * canvasSize.height,\n        };\n    }\n}\nexport function getPosition(position, canvasSize) {\n    return getPositionOrSize(position, canvasSize);\n}\nexport function getSize(size, canvasSize) {\n    return getPositionOrSize(size, canvasSize);\n}\nfunction checkDestroy(particle, destroyType, value, minValue, maxValue) {\n    switch (destroyType) {\n        case DestroyType.max:\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case DestroyType.min:\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateAnimation(particle, data, changeDirection, destroyType, delta) {\n    const minLoops = 0, minDelay = 0, identity = 1, minVelocity = 0, minDecay = 1;\n    if (particle.destroyed ||\n        !data ||\n        !data.enable ||\n        ((data.maxLoops ?? minLoops) > minLoops && (data.loops ?? minLoops) > (data.maxLoops ?? minLoops))) {\n        return;\n    }\n    const velocity = (data.velocity ?? minVelocity) * delta.factor, minValue = data.min, maxValue = data.max, decay = data.decay ?? minDecay;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        return;\n    }\n    switch (data.status) {\n        case AnimationStatus.increasing:\n            if (data.value >= maxValue) {\n                if (changeDirection) {\n                    data.status = AnimationStatus.decreasing;\n                }\n                else {\n                    data.value -= maxValue;\n                }\n                if (!data.loops) {\n                    data.loops = minLoops;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += velocity;\n            }\n            break;\n        case AnimationStatus.decreasing:\n            if (data.value <= minValue) {\n                if (changeDirection) {\n                    data.status = AnimationStatus.increasing;\n                }\n                else {\n                    data.value += maxValue;\n                }\n                if (!data.loops) {\n                    data.loops = minLoops;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= velocity;\n            }\n    }\n    if (data.velocity && decay !== identity) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, destroyType, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\nexport function assertValidVersion(engine, pluginVersion) {\n    if (engine.version === pluginVersion) {\n        return;\n    }\n    throw new Error(`The tsParticles version is different from the loaded plugins version. Engine version: ${engine.version}. Plugins version: ${pluginVersion}`);\n}\n","export var AlterType;\n(function (AlterType) {\n    AlterType[\"darken\"] = \"darken\";\n    AlterType[\"enlighten\"] = \"enlighten\";\n})(AlterType || (AlterType = {}));\n","import { clamp, getRandom, getRangeMax, getRangeMin, getRangeValue, mix, randomInRange, setRangeValue, } from \"./NumberUtils.js\";\nimport { isArray, isString } from \"./TypeUtils.js\";\nimport { millisecondsToSeconds, percentDenominator } from \"../Core/Utils/Constants.js\";\nimport { AnimationStatus } from \"../Enums/AnimationStatus.js\";\nimport { itemFromArray } from \"./Utils.js\";\nconst randomColorValue = \"random\", midColorValue = \"mid\";\nfunction stringToRgba(engine, input) {\n    if (!input) {\n        return;\n    }\n    for (const manager of engine.colorManagers.values()) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n}\nexport function rangeColorToRgb(engine, input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return colorToRgb(engine, color.value, index, useIndex);\n    }\n    if (isArray(color.value)) {\n        return rangeColorToRgb(engine, {\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const manager of engine.colorManagers.values()) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(engine, input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(engine, color.value);\n    }\n    if (isArray(color.value)) {\n        return colorToRgb(engine, {\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const manager of engine.colorManagers.values()) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(engine, color, index, useIndex = true) {\n    const rgb = colorToRgb(engine, color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(engine, color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(engine, color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const rgbMax = 255, hMax = 360, sMax = 100, lMax = 100, hMin = 0, sMin = 0, hPhase = 60, half = 0.5, double = 2, r1 = color.r / rgbMax, g1 = color.g / rgbMax, b1 = color.b / rgbMax, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: hMin,\n        l: (max + min) * half,\n        s: sMin,\n    };\n    if (max !== min) {\n        res.s = res.l < half ? (max - min) / (max + min) : (max - min) / (double - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? double + (b1 - r1) / (max - min) : double * double + (r1 - g1) / (max - min));\n    }\n    res.l *= lMax;\n    res.s *= sMax;\n    res.h *= hPhase;\n    if (res.h < hMin) {\n        res.h += hMax;\n    }\n    if (res.h >= hMax) {\n        res.h -= hMax;\n    }\n    return res;\n}\nexport function stringToAlpha(engine, input) {\n    return stringToRgba(engine, input)?.a;\n}\nexport function stringToRgb(engine, input) {\n    return stringToRgba(engine, input);\n}\nexport function hslToRgb(hsl) {\n    const hMax = 360, sMax = 100, lMax = 100, sMin = 0, lMin = 0, h = ((hsl.h % hMax) + hMax) % hMax, s = Math.max(sMin, Math.min(sMax, hsl.s)), l = Math.max(lMin, Math.min(lMax, hsl.l)), hNormalized = h / hMax, sNormalized = s / sMax, lNormalized = l / lMax, rgbFactor = 255, triple = 3;\n    if (s === sMin) {\n        const grayscaleValue = Math.round(lNormalized * rgbFactor);\n        return { r: grayscaleValue, g: grayscaleValue, b: grayscaleValue };\n    }\n    const half = 0.5, double = 2, channel = (temp1, temp2, temp3) => {\n        const temp3Min = 0, temp3Max = 1, sextuple = 6;\n        if (temp3 < temp3Min) {\n            temp3++;\n        }\n        if (temp3 > temp3Max) {\n            temp3--;\n        }\n        if (temp3 * sextuple < temp3Max) {\n            return temp1 + (temp2 - temp1) * sextuple * temp3;\n        }\n        if (temp3 * double < temp3Max) {\n            return temp2;\n        }\n        if (temp3 * triple < temp3Max * double) {\n            const temp3Offset = double / triple;\n            return temp1 + (temp2 - temp1) * (temp3Offset - temp3) * sextuple;\n        }\n        return temp1;\n    }, sNormalizedOffset = 1, temp1 = lNormalized < half\n        ? lNormalized * (sNormalizedOffset + sNormalized)\n        : lNormalized + sNormalized - lNormalized * sNormalized, temp2 = double * lNormalized - temp1, phaseNumerator = 1, phaseThird = phaseNumerator / triple, red = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized + phaseThird)), green = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized)), blue = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized - phaseThird));\n    return { r: Math.round(red), g: Math.round(green), b: Math.round(blue) };\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const defaultMin = 0, fixedMin = min ?? defaultMin, rgbMax = 256;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, rgbMax))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, rgbMax))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, rgbMax))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    const defaultOpacity = 1;\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity ?? defaultOpacity})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    const defaultOpacity = 1;\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity ?? defaultOpacity})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = p1.getFillColor() ?? p1.getStrokeColor(), destColor = p2?.getFillColor() ?? p2?.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor ?? destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(engine, optColor, blink, consent) {\n    const color = isString(optColor) ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb(engine, {\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb(engine, {\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    const defaultVelocity = 0, decayOffset = 1, defaultLoops = 0, defaultTime = 0;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / percentDenominator) * reduceFactor;\n        colorValue.decay = decayOffset - getRangeValue(colorAnimation.decay);\n        colorValue.status = AnimationStatus.increasing;\n        colorValue.loops = defaultLoops;\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\n        colorValue.time = defaultTime;\n        colorValue.delayTime = getRangeValue(colorAnimation.delay) * millisecondsToSeconds;\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n        colorValue.initialValue = colorValue.value;\n        colorValue.offset = setRangeValue(colorAnimation.offset);\n    }\n    else {\n        colorValue.velocity = defaultVelocity;\n    }\n}\nexport function updateColorValue(data, range, decrease, delta) {\n    const minLoops = 0, minDelay = 0, identity = 1, minVelocity = 0, minOffset = 0, velocityFactor = 3.6;\n    if (!data ||\n        !data.enable ||\n        ((data.maxLoops ?? minLoops) > minLoops && (data.loops ?? minLoops) > (data.maxLoops ?? minLoops))) {\n        return;\n    }\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        return;\n    }\n    const offset = data.offset ? randomInRange(data.offset) : minOffset, velocity = (data.velocity ?? minVelocity) * delta.factor + offset * velocityFactor, decay = data.decay ?? identity, max = getRangeMax(range), min = getRangeMin(range);\n    if (!decrease || data.status === AnimationStatus.increasing) {\n        data.value += velocity;\n        if (data.value > max) {\n            if (!data.loops) {\n                data.loops = 0;\n            }\n            data.loops++;\n            if (decrease) {\n                data.status = AnimationStatus.decreasing;\n            }\n            else {\n                data.value -= max;\n            }\n        }\n    }\n    else {\n        data.value -= velocity;\n        const minValue = 0;\n        if (data.value < minValue) {\n            if (!data.loops) {\n                data.loops = 0;\n            }\n            data.loops++;\n            data.status = AnimationStatus.increasing;\n        }\n    }\n    if (data.velocity && decay !== identity) {\n        data.velocity *= decay;\n    }\n    data.value = clamp(data.value, min, max);\n}\nexport function updateColor(color, delta) {\n    if (!color) {\n        return;\n    }\n    const { h, s, l } = color;\n    const ranges = {\n        h: { min: 0, max: 360 },\n        s: { min: 0, max: 100 },\n        l: { min: 0, max: 100 },\n    };\n    if (h) {\n        updateColorValue(h, ranges.h, false, delta);\n    }\n    if (s) {\n        updateColorValue(s, ranges.s, true, delta);\n    }\n    if (l) {\n        updateColorValue(l, ranges.l, true, delta);\n    }\n}\n","import { AlterType } from \"../Enums/Types/AlterType.js\";\nimport { getStyleFromRgb } from \"./ColorUtils.js\";\nconst origin = { x: 0, y: 0 }, defaultTransform = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n};\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\n    context.fillRect(origin.x, origin.y, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n    if (!image) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(image, origin.x, origin.y, dimension.width, dimension.height);\n    context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n    context.clearRect(origin.x, origin.y, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data, pos = particle.getPosition(), defaultAngle = 0, angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : defaultAngle), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, rotating = !!angle, identity = 1, transformData = {\n        a: rotateData.cos * (transform.a ?? defaultTransform.a),\n        b: rotating ? rotateData.sin * (transform.b ?? identity) : (transform.b ?? defaultTransform.b),\n        c: rotating ? -rotateData.sin * (transform.c ?? identity) : (transform.c ?? defaultTransform.c),\n        d: rotateData.cos * (transform.d ?? defaultTransform.d),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const minStrokeWidth = 0, strokeWidth = particle.strokeWidth ?? minStrokeWidth;\n    context.lineWidth = strokeWidth;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    const drawData = {\n        container,\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        transformData,\n        strokeWidth,\n    };\n    drawShape(drawData);\n    drawShapeAfterDraw(drawData);\n    drawEffect(drawData);\n    context.globalCompositeOperation = \"source-over\";\n    context.resetTransform();\n}\nexport function drawEffect(data) {\n    const { container, context, particle, radius, opacity, delta, transformData } = data;\n    if (!particle.effect) {\n        return;\n    }\n    const drawer = container.effectDrawers.get(particle.effect);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n}\nexport function drawShape(data) {\n    const { container, context, particle, radius, opacity, delta, strokeWidth, transformData } = data, minStrokeWidth = 0;\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.shapeDrawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    context.beginPath();\n    drawer.draw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n    if (particle.shapeClose) {\n        context.closePath();\n    }\n    if (strokeWidth > minStrokeWidth) {\n        context.stroke();\n    }\n    if (particle.shapeFill) {\n        context.fill();\n    }\n}\nexport function drawShapeAfterDraw(data) {\n    const { container, context, particle, radius, opacity, delta, transformData } = data;\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.shapeDrawers.get(particle.shape);\n    if (!drawer?.afterDraw) {\n        return;\n    }\n    drawer.afterDraw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    const lFactor = 1;\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === AlterType.darken ? -lFactor : lFactor) * value,\n    };\n}\n","import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils.js\";\nimport { deepExtend, getLogger, safeMutationObserver } from \"../Utils/Utils.js\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nimport { generatedAttribute } from \"./Utils/Constants.js\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key], defaultValue = 1;\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? defaultValue) * newValue;\n    }\n}\nfunction setStyle(canvas, style, important = false) {\n    if (!style) {\n        return;\n    }\n    const element = canvas;\n    if (!element) {\n        return;\n    }\n    const elementStyle = element.style;\n    if (!elementStyle) {\n        return;\n    }\n    for (const key in style) {\n        const value = style[key];\n        elementStyle.setProperty(key, value, important ? \"important\" : \"\");\n    }\n}\nexport class Canvas {\n    constructor(container, engine) {\n        this.container = container;\n        this._applyPostDrawUpdaters = particle => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw?.(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw?.(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize?.();\n            }\n        };\n        this._getPluginParticleColors = particle => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(this._engine, plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(this._engine, plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = async () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color;\n            if (color) {\n                const coverRgb = rangeColorToRgb(this._engine, color);\n                if (coverRgb) {\n                    const coverColor = {\n                        ...coverRgb,\n                        a: cover.opacity,\n                    };\n                    this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n                }\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!cover.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._coverImage = {\n                            image: img,\n                            opacity: cover.opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", evt => {\n                        reject(evt.error);\n                    });\n                    img.src = cover.image;\n                });\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._originalStyle = deepExtend({}, element.style);\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            const factorNumerator = 1, opacity = factorNumerator / trail.length;\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(this._engine, trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", evt => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = baseColor => {\n            this.draw(ctx => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw(ctx => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver(observer => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver(observer => {\n                if (!element || !(element instanceof Node)) {\n                    return;\n                }\n                observer.observe(element, { attributes: true });\n            });\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!(element && originalStyle)) {\n                return;\n            }\n            setStyle(element, originalStyle);\n        };\n        this._safeMutationObserver = callback => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            const radix = 10, zIndex = this.container.actualOptions.fullScreen.zIndex.toString(radix);\n            setStyle(element, {\n                position: \"fixed\",\n                \"z-index\": zIndex,\n                zIndex: zIndex,\n                top: \"0\",\n                left: \"0\",\n                width: \"100%\",\n                height: \"100%\",\n            }, true);\n        };\n        this._engine = engine;\n        this._standardSize = {\n            height: 0,\n            width: 0,\n        };\n        const pxRatio = container.retina.pixelRatio, stdSize = this._standardSize;\n        this.size = {\n            height: stdSize.height * pxRatio,\n            width: stdSize.width * pxRatio,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill, minimumLength = 0;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > minimumLength && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else if (options.clear) {\n            this.draw(ctx => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element?.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawAsync(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return undefined;\n        }\n        return cb(ctx);\n    }\n    drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius(), minimumSize = 0;\n        if (radius <= minimumSize) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zIndexFactorOffset = 1, zIndexFactor = zIndexFactorOffset - particle.zIndexFactor, zOpacityFactor = zIndexFactor ** zIndexOptions.opacityRate, defaultOpacity = 1, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? defaultOpacity, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * zIndexFactor ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw(ctx => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    drawPlugin(plugin, delta) {\n        this.draw(ctx => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver(obs => obs.disconnect());\n        this._mutationObserver = safeMutationObserver(records => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        await this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver(obs => {\n            if (!this.element || !(this.element instanceof Node)) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(this._engine, background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const plugin of this.container.plugins.values()) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor ?? plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles ?? updater.getTransformValues ?? updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        const standardSize = this._standardSize;\n        standardSize.height = canvas.offsetHeight;\n        standardSize.width = canvas.offsetWidth;\n        const pxRatio = this.container.retina.pixelRatio, retinaSize = this.size;\n        canvas.height = retinaSize.height = standardSize.height * pxRatio;\n        canvas.width = retinaSize.width = standardSize.width * pxRatio;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver(obs => {\n            if (!this.element || !(this.element instanceof Node)) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw(ctx => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                if (this._coverImage) {\n                    this._paintImage(this._coverImage.image, this._coverImage.opacity);\n                }\n                else if (this._coverColorStyle) {\n                    this._paintBase(this._coverColorStyle);\n                }\n                else {\n                    this._paintBase();\n                }\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, currentSize = container.canvas._standardSize, newSize = {\n            width: this.element.offsetWidth,\n            height: this.element.offsetHeight,\n        }, pxRatio = container.retina.pixelRatio, retinaSize = {\n            width: newSize.width * pxRatio,\n            height: newSize.height * pxRatio,\n        };\n        if (newSize.height === currentSize.height &&\n            newSize.width === currentSize.width &&\n            retinaSize.height === this.element.height &&\n            retinaSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...currentSize };\n        currentSize.height = newSize.height;\n        currentSize.width = newSize.width;\n        const canvasSize = this.size;\n        this.element.width = canvasSize.width = retinaSize.width;\n        this.element.height = canvasSize.height = retinaSize.height;\n        if (this.container.started) {\n            container.particles.setResizeFactor({\n                width: currentSize.width / oldSize.width,\n                height: currentSize.height / oldSize.height,\n            });\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver(obs => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw(ctx => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n","export var InteractivityDetect;\n(function (InteractivityDetect) {\n    InteractivityDetect[\"canvas\"] = \"canvas\";\n    InteractivityDetect[\"parent\"] = \"parent\";\n    InteractivityDetect[\"window\"] = \"window\";\n})(InteractivityDetect || (InteractivityDetect = {}));\n","import { executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils.js\";\nimport { millisecondsToSeconds, mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants.js\";\nimport { InteractivityDetect } from \"../../Enums/InteractivityDetect.js\";\nimport { isBoolean } from \"../../Utils/TypeUtils.js\";\nconst double = 2;\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = e => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, mode => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                const touchDelay = 500;\n                setTimeout(() => this._mouseTouchFinish(), touchDelay);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find(theme => theme.name === themeName);\n            if (theme?.default.auto) {\n                void container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document?.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.animationStatus) {\n                    void container.play(true);\n                }\n                else {\n                    void container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            const handleResize = async () => {\n                const canvas = this.container.canvas;\n                await canvas?.windowResize();\n            };\n            this._resizeTimeout = setTimeout(() => void handleResize(), this.container.actualOptions.interactivity.events.resize.delay * millisecondsToSeconds);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            const interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = add => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === InteractivityDetect.window) {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === InteractivityDetect.parent && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = add => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = add => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver((entries) => {\n                    const entry = entries.find(e => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = e => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const plugin of container.plugins.values()) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = e => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity?.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === InteractivityDetect.parent) {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + double * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + double * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lengthOffset = 1, lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset], canvasRect = canvasEl.getBoundingClientRect(), defaultCoordinate = 0;\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? defaultCoordinate),\n                        y: lastTouch.clientY - (canvasRect.top ?? defaultCoordinate),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n","export var EventType;\n(function (EventType) {\n    EventType[\"configAdded\"] = \"configAdded\";\n    EventType[\"containerInit\"] = \"containerInit\";\n    EventType[\"particlesSetup\"] = \"particlesSetup\";\n    EventType[\"containerStarted\"] = \"containerStarted\";\n    EventType[\"containerStopped\"] = \"containerStopped\";\n    EventType[\"containerDestroyed\"] = \"containerDestroyed\";\n    EventType[\"containerPaused\"] = \"containerPaused\";\n    EventType[\"containerPlay\"] = \"containerPlay\";\n    EventType[\"containerBuilt\"] = \"containerBuilt\";\n    EventType[\"particleAdded\"] = \"particleAdded\";\n    EventType[\"particleDestroyed\"] = \"particleDestroyed\";\n    EventType[\"particleRemoved\"] = \"particleRemoved\";\n})(EventType || (EventType = {}));\n","export var DivType;\n(function (DivType) {\n    DivType[\"circle\"] = \"circle\";\n    DivType[\"rectangle\"] = \"rectangle\";\n})(DivType || (DivType = {}));\n","import { isArray, isNull, isString } from \"../../Utils/TypeUtils.js\";\nexport class OptionsColor {\n    constructor() {\n        this.value = \"\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (!isNull(data.value)) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.opacity = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { isNull, isString } from \"../../../Utils/TypeUtils.js\";\nimport { BackgroundMaskCover } from \"./BackgroundMaskCover.js\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover, color = (isString(data.cover) ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined || cover.image !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n","import { DivType } from \"../../../../Enums/Types/DivType.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = DivType.circle;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n","import { Parallax } from \"./Parallax.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ResizeEvent {\n    constructor() {\n        this.delay = 0.5;\n        this.enable = true;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { ClickEvent } from \"./ClickEvent.js\";\nimport { DivEvent } from \"./DivEvent.js\";\nimport { HoverEvent } from \"./HoverEvent.js\";\nimport { ResizeEvent } from \"./ResizeEvent.js\";\nimport { executeOnSingleOrMultiple } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = new ResizeEvent();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.onClick.load(data.onClick);\n        const onDiv = data.onDiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, t => {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load(data.onHover);\n        this.resize.load(data.resize);\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (!this._container) {\n            return;\n        }\n        const interactors = this._engine.interactors.get(this._container);\n        if (!interactors) {\n            return;\n        }\n        for (const interactor of interactors) {\n            if (!interactor.loadModeOptions) {\n                continue;\n            }\n            interactor.loadModeOptions(this, data);\n        }\n    }\n}\n","import { Events } from \"./Events/Events.js\";\nimport { InteractivityDetect } from \"../../../Enums/InteractivityDetect.js\";\nimport { Modes } from \"./Modes/Modes.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = InteractivityDetect.window;\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        const detectsOn = data.detectsOn;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n","import { PixelMode } from \"../../Enums/Modes/PixelMode.js\";\nimport { deepExtend } from \"../../Utils/Utils.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nconst defaultPosition = 50;\nexport class ManualParticle {\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.position) {\n            this.position = {\n                x: data.position.x ?? defaultPosition,\n                y: data.position.y ?? defaultPosition,\n                mode: data.position.mode ?? PixelMode.percent,\n            };\n        }\n        if (data.options) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","export var ResponsiveMode;\n(function (ResponsiveMode) {\n    ResponsiveMode[\"screen\"] = \"screen\";\n    ResponsiveMode[\"canvas\"] = \"canvas\";\n})(ResponsiveMode || (ResponsiveMode = {}));\n","export var ThemeMode;\n(function (ThemeMode) {\n    ThemeMode[\"any\"] = \"any\";\n    ThemeMode[\"dark\"] = \"dark\";\n    ThemeMode[\"light\"] = \"light\";\n})(ThemeMode || (ThemeMode = {}));\n","export var CollisionMode;\n(function (CollisionMode) {\n    CollisionMode[\"absorb\"] = \"absorb\";\n    CollisionMode[\"bounce\"] = \"bounce\";\n    CollisionMode[\"destroy\"] = \"destroy\";\n})(CollisionMode || (CollisionMode = {}));\n","export var OutMode;\n(function (OutMode) {\n    OutMode[\"bounce\"] = \"bounce\";\n    OutMode[\"none\"] = \"none\";\n    OutMode[\"out\"] = \"out\";\n    OutMode[\"destroy\"] = \"destroy\";\n    OutMode[\"split\"] = \"split\";\n})(OutMode || (OutMode = {}));\n","export var LimitMode;\n(function (LimitMode) {\n    LimitMode[\"delete\"] = \"delete\";\n    LimitMode[\"wait\"] = \"wait\";\n})(LimitMode || (LimitMode = {}));\n","export var InteractorType;\n(function (InteractorType) {\n    InteractorType[\"external\"] = \"external\";\n    InteractorType[\"particles\"] = \"particles\";\n})(InteractorType || (InteractorType = {}));\n","export var ParticleOutType;\n(function (ParticleOutType) {\n    ParticleOutType[\"normal\"] = \"normal\";\n    ParticleOutType[\"inside\"] = \"inside\";\n    ParticleOutType[\"outside\"] = \"outside\";\n})(ParticleOutType || (ParticleOutType = {}));\n","import { ResponsiveMode } from \"../../Enums/Modes/ResponsiveMode.js\";\nimport { deepExtend } from \"../../Utils/Utils.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = ResponsiveMode.canvas;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (!isNull(data.maxWidth)) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (!isNull(data.mode)) {\n            if (data.mode === ResponsiveMode.screen) {\n                this.mode = ResponsiveMode.screen;\n            }\n            else {\n                this.mode = ResponsiveMode.canvas;\n            }\n        }\n        if (!isNull(data.options)) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { ThemeMode } from \"../../../Enums/Modes/ThemeMode.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = ThemeMode.any;\n        this.value = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ThemeDefault } from \"./ThemeDefault.js\";\nimport { deepExtend } from \"../../../Utils/Utils.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { AnimationMode } from \"../../Enums/Modes/AnimationMode.js\";\nimport { StartValueType } from \"../../Enums/Types/StartValueType.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.decay = 0;\n        this.delay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexport class RangedAnimationOptions extends AnimationOptions {\n    constructor() {\n        super();\n        this.mode = AnimationMode.auto;\n        this.startValue = StartValueType.random;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n    }\n}\n","import { AnimationOptions } from \"./AnimationOptions.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class ColorAnimation extends AnimationOptions {\n    constructor() {\n        super();\n        this.offset = 0;\n        this.sync = true;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n    }\n}\n","import { ColorAnimation } from \"./ColorAnimation.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n","import { isArray, isNull, isString } from \"../../Utils/TypeUtils.js\";\nimport { HslAnimation } from \"./HslAnimation.js\";\nimport { OptionsColor } from \"./OptionsColor.js\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class CollisionsAbsorb {\n    constructor() {\n        this.speed = 2;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n","import { AnimationOptions, RangedAnimationOptions } from \"./AnimationOptions.js\";\nimport { isNull } from \"../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class ValueWithRandom {\n    constructor() {\n        this.value = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (!isNull(data.value)) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\nexport class AnimationValueWithRandom extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new AnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        const animation = data.animation;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\nexport class RangedAnimationValueWithRandom extends AnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RangedAnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom.js\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = 1;\n    }\n}\n","import { ParticlesBounceFactor } from \"./ParticlesBounceFactor.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesBounce {\n    constructor() {\n        this.horizontal = new ParticlesBounceFactor();\n        this.vertical = new ParticlesBounceFactor();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n","import { CollisionMode } from \"../../../../Enums/Modes/CollisionMode.js\";\nimport { CollisionsAbsorb } from \"./CollisionsAbsorb.js\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap.js\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Collisions {\n    constructor() {\n        this.absorb = new CollisionsAbsorb();\n        this.bounce = new ParticlesBounce();\n        this.enable = false;\n        this.maxSpeed = 50;\n        this.mode = CollisionMode.bounce;\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.absorb.load(data.absorb);\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Effect {\n    constructor() {\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = [];\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        const options = data.options;\n        if (options !== undefined) {\n            for (const effect in options) {\n                const item = options[effect];\n                if (item) {\n                    this.options[effect] = deepExtend(this.options[effect] ?? {}, item);\n                }\n            }\n        }\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveAttract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.rotate) {\n            const rotateX = data.rotate.x;\n            if (rotateX !== undefined) {\n                this.rotate.x = rotateX;\n            }\n            const rotateY = data.rotate.y;\n            if (rotateY !== undefined) {\n                this.rotate.y = rotateY;\n            }\n        }\n    }\n}\n","import { PixelMode } from \"../../../../Enums/Modes/PixelMode.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class MoveCenter {\n    constructor() {\n        this.x = 50;\n        this.y = 50;\n        this.mode = PixelMode.percent;\n        this.radius = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.x !== undefined) {\n            this.x = data.x;\n        }\n        if (data.y !== undefined) {\n            this.y = data.y;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../../ValueWithRandom.js\";\nimport { deepExtend } from \"../../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../../Utils/TypeUtils.js\";\nexport class MovePath {\n    constructor() {\n        this.clamp = true;\n        this.delay = new ValueWithRandom();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n","import { OptionsColor } from \"../../OptionsColor.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class MoveTrailFill {\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n    }\n}\n","import { MoveTrailFill } from \"./MoveTrailFill.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fill = new MoveTrailFill();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.fill !== undefined) {\n            this.fill.load(data.fill);\n        }\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n","import { OutMode } from \"../../../../Enums/Modes/OutMode.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class OutModes {\n    constructor() {\n        this.default = OutMode.out;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = data.bottom ?? data.default;\n        this.left = data.left ?? data.default;\n        this.right = data.right ?? data.default;\n        this.top = data.top ?? data.default;\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.position) {\n            this.position = deepExtend({}, data.position);\n        }\n    }\n}\n","import { MoveDirection } from \"../../../../Enums/Directions/MoveDirection.js\";\nimport { isNull, isNumber, isObject } from \"../../../../Utils/TypeUtils.js\";\nimport { MoveAngle } from \"./MoveAngle.js\";\nimport { MoveAttract } from \"./MoveAttract.js\";\nimport { MoveCenter } from \"./MoveCenter.js\";\nimport { MoveGravity } from \"./MoveGravity.js\";\nimport { MovePath } from \"./Path/MovePath.js\";\nimport { MoveTrail } from \"./MoveTrail.js\";\nimport { OutModes } from \"./OutModes.js\";\nimport { Spin } from \"./Spin.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = MoveDirection.none;\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.angle.load(isNumber(data.angle) ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance = isNumber(data.distance)\n                ? {\n                    horizontal: data.distance,\n                    vertical: data.distance,\n                }\n                : { ...data.distance };\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = data.outModes;\n        if (outModes !== undefined) {\n            if (isObject(outModes)) {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load(data.path);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { DestroyType } from \"../../../../Enums/Types/DestroyType.js\";\nimport { RangedAnimationOptions } from \"../../AnimationOptions.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class OpacityAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = DestroyType.none;\n        this.speed = 2;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { OpacityAnimation } from \"./OpacityAnimation.js\";\nimport { RangedAnimationValueWithRandom } from \"../../ValueWithRandom.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Opacity extends RangedAnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.value = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        super.load(data);\n        const animation = data.animation;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\n","import { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesDensity {\n    constructor() {\n        this.enable = false;\n        this.width = 1920;\n        this.height = 1080;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const width = data.width;\n        if (width !== undefined) {\n            this.width = width;\n        }\n        const height = data.height;\n        if (height !== undefined) {\n            this.height = height;\n        }\n    }\n}\n","import { LimitMode } from \"../../../../Enums/Modes/LimitMode.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesNumberLimit {\n    constructor() {\n        this.mode = LimitMode.delete;\n        this.value = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ParticlesDensity } from \"./ParticlesDensity.js\";\nimport { ParticlesNumberLimit } from \"./ParticlesNumberLimit.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new ParticlesDensity();\n        this.limit = new ParticlesNumberLimit();\n        this.value = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        this.density.load(data.density);\n        this.limit.load(data.limit);\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000\";\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Shape {\n    constructor() {\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = \"circle\";\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        const options = data.options;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend(this.options[shape] ?? {}, item);\n                }\n            }\n        }\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { DestroyType } from \"../../../../Enums/Types/DestroyType.js\";\nimport { RangedAnimationOptions } from \"../../AnimationOptions.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class SizeAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = DestroyType.none;\n        this.speed = 5;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { RangedAnimationValueWithRandom } from \"../../ValueWithRandom.js\";\nimport { SizeAnimation } from \"./SizeAnimation.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class Size extends RangedAnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.value = 3;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        const animation = data.animation;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\n","import { AnimatableColor } from \"../AnimatableColor.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nimport { setRangeValue } from \"../../../Utils/NumberUtils.js\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = setRangeValue(data.width);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom.js\";\nimport { isNull } from \"../../../../Utils/TypeUtils.js\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils.js\";\nimport { AnimatableColor } from \"../AnimatableColor.js\";\nimport { Collisions } from \"./Collisions/Collisions.js\";\nimport { Effect } from \"./Effect/Effect.js\";\nimport { Move } from \"./Move/Move.js\";\nimport { Opacity } from \"./Opacity/Opacity.js\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce.js\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber.js\";\nimport { Shadow } from \"./Shadow.js\";\nimport { Shape } from \"./Shape/Shape.js\";\nimport { Size } from \"./Size/Size.js\";\nimport { Stroke } from \"./Stroke.js\";\nimport { ZIndex } from \"./ZIndex/ZIndex.js\";\nimport { isNull } from \"../../../Utils/TypeUtils.js\";\nexport class ParticlesOptions {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.bounce = new ParticlesBounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.color.value = \"#fff\";\n        this.effect = new Effect();\n        this.groups = {};\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.reduceDuplicates = false;\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.zIndex = new ZIndex();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.groups !== undefined) {\n            for (const group of Object.keys(data.groups)) {\n                if (!Object.hasOwn(data.groups, group)) {\n                    continue;\n                }\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend(this.groups[group] ?? {}, item);\n                }\n            }\n        }\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        this.effect.load(data.effect);\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.zIndex.load(data.zIndex);\n        this.collisions.load(data.collisions);\n        if (data.interactivity !== undefined) {\n            this.interactivity = deepExtend({}, data.interactivity);\n        }\n        const strokeToLoad = data.stroke;\n        if (strokeToLoad) {\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, t => {\n                const tmp = new Stroke();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (this._container) {\n            const updaters = this._engine.updaters.get(this._container);\n            if (updaters) {\n                for (const updater of updaters) {\n                    if (updater.loadOptions) {\n                        updater.loadOptions(this, data);\n                    }\n                }\n            }\n            const interactors = this._engine.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadParticlesOptions) {\n                        interactor.loadParticlesOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions.js\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n","import { deepExtend, executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils.js\";\nimport { isBoolean, isNull } from \"../../Utils/TypeUtils.js\";\nimport { Background } from \"./Background/Background.js\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask.js\";\nimport { FullScreen } from \"./FullScreen/FullScreen.js\";\nimport { Interactivity } from \"./Interactivity/Interactivity.js\";\nimport { ManualParticle } from \"./ManualParticle.js\";\nimport { Responsive } from \"./Responsive.js\";\nimport { ResponsiveMode } from \"../../Enums/Modes/ResponsiveMode.js\";\nimport { Theme } from \"./Theme/Theme.js\";\nimport { ThemeMode } from \"../../Enums/Modes/ThemeMode.js\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class Options {\n    constructor(engine, container) {\n        this._findDefaultTheme = mode => {\n            return (this.themes.find(theme => theme.default.value && theme.default.mode === mode) ??\n                this.themes.find(theme => theme.default.value && theme.default.mode === ThemeMode.any));\n        };\n        this._importPreset = preset => {\n            this.load(this._engine.getPreset(preset));\n        };\n        this._engine = engine;\n        this._container = container;\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.clear = true;\n        this.defaultThemes = {};\n        this.delay = 0;\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity(engine, container);\n        this.manualParticles = [];\n        this.particles = loadParticlesOptions(this._engine, this._container);\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.smooth = false;\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            executeOnSingleOrMultiple(data.preset, preset => this._importPreset(preset));\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.clear !== undefined) {\n            this.clear = data.clear;\n        }\n        if (data.key !== undefined) {\n            this.key = data.key;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        const detectRetina = data.detectRetina;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        const fpsLimit = data.fpsLimit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = data.fullScreen;\n        if (isBoolean(fullScreen)) {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles) {\n            this.manualParticles = data.manualParticles.map(t => {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        this._engine.loadOptions(this, data);\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n        const interactors = this._engine.interactors.get(this._container);\n        if (interactors) {\n            for (const interactor of interactors) {\n                if (interactor.loadOptions) {\n                    interactor.loadOptions(this, data);\n                }\n            }\n        }\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const existingTheme = this.themes.find(t => t.name === theme.name);\n                if (!existingTheme) {\n                    const optTheme = new Theme();\n                    optTheme.load(theme);\n                    this.themes.push(optTheme);\n                }\n                else {\n                    existingTheme.load(theme);\n                }\n            }\n        }\n        this.defaultThemes.dark = this._findDefaultTheme(ThemeMode.dark)?.name;\n        this.defaultThemes.light = this._findDefaultTheme(ThemeMode.light)?.name;\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find(t => t.mode === ResponsiveMode.screen && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n        this.load(responsiveOptions?.options);\n        return responsiveOptions?.maxWidth;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find(theme => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch?.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? ThemeMode.dark : ThemeMode.light);\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n}\n","import { InteractorType } from \"../../Enums/Types/InteractorType.js\";\nexport class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = [];\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.interact(delta);\n            }\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        this._interactors = await this._engine.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case InteractorType.external:\n                    this._externalInteractors.push(interactor);\n                    break;\n                case InteractorType.particles:\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.interact(particle, delta);\n            }\n        }\n    }\n    reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.reset(particle);\n            }\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.reset(particle);\n            }\n        }\n    }\n}\n","import { Vector, Vector3d } from \"./Utils/Vectors.js\";\nimport { calcExactPositionOrRandomFromSize, clamp, degToRad, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils.js\";\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple, } from \"../Utils/Utils.js\";\nimport { errorPrefix, millisecondsToSeconds } from \"./Utils/Constants.js\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity.js\";\nimport { MoveDirection } from \"../Enums/Directions/MoveDirection.js\";\nimport { OutMode } from \"../Enums/Modes/OutMode.js\";\nimport { ParticleOutType } from \"../Enums/Types/ParticleOutType.js\";\nimport { PixelMode } from \"../Enums/Modes/PixelMode.js\";\nimport { alterHsl } from \"../Utils/CanvasUtils.js\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils.js\";\nconst defaultRetryCount = 0, double = 2, half = 0.5, squareExp = 2, randomString = \"random\";\nfunction loadEffectData(effect, effectOptions, id, reduceDuplicates) {\n    const effectData = effectOptions.options[effect];\n    if (!effectData) {\n        return;\n    }\n    return deepExtend({\n        close: effectOptions.close,\n        fill: effectOptions.fill,\n    }, itemFromSingleOrMultiple(effectData, id, reduceDuplicates));\n}\nfunction loadShapeData(shape, shapeOptions, id, reduceDuplicates) {\n    const shapeData = shapeOptions.options[shape];\n    if (!shapeData) {\n        return;\n    }\n    return deepExtend({\n        close: shapeOptions.close,\n        fill: shapeOptions.fill,\n    }, itemFromSingleOrMultiple(shapeData, id, reduceDuplicates));\n}\nfunction fixOutMode(data) {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    const diameter = data.radius * double;\n    if (data.coord > data.maxCoord - diameter) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < diameter) {\n        data.setCb(data.radius);\n    }\n}\nexport class Particle {\n    constructor(engine, container) {\n        this.container = container;\n        this._calcPosition = (container, position, zIndex, tryCount = defaultRetryCount) => {\n            for (const plugin of container.plugins.values()) {\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n                if (pluginPos) {\n                    return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n                }\n            }\n            const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n                size: canvasSize,\n                position: position,\n            }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [OutMode.bounce],\n                    coord: pos.x,\n                    maxCoord: container.canvas.size.width,\n                    setCb: (value) => (pos.x += value),\n                    radius,\n                });\n            }, fixVertical = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [OutMode.bounce],\n                    coord: pos.y,\n                    maxCoord: container.canvas.size.height,\n                    setCb: (value) => (pos.y += value),\n                    radius,\n                });\n            };\n            fixHorizontal(outModes.left ?? outModes.default);\n            fixHorizontal(outModes.right ?? outModes.default);\n            fixVertical(outModes.top ?? outModes.default);\n            fixVertical(outModes.bottom ?? outModes.default);\n            if (this._checkOverlap(pos, tryCount)) {\n                const increment = 1;\n                return this._calcPosition(container, undefined, zIndex, tryCount + increment);\n            }\n            return pos;\n        };\n        this._calculateVelocity = () => {\n            const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n            if (moveOptions.direction === MoveDirection.inside || moveOptions.direction === MoveDirection.outside) {\n                return res;\n            }\n            const rad = degToRad(getRangeValue(moveOptions.angle.value)), radOffset = degToRad(getRangeValue(moveOptions.angle.offset)), range = {\n                left: radOffset - rad * half,\n                right: radOffset + rad * half,\n            };\n            if (!moveOptions.straight) {\n                res.angle += randomInRange(setRangeValue(range.left, range.right));\n            }\n            if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n                res.length *= getRandom();\n            }\n            return res;\n        };\n        this._checkOverlap = (pos, tryCount = defaultRetryCount) => {\n            const collisionsOptions = this.options.collisions, radius = this.getRadius();\n            if (!collisionsOptions.enable) {\n                return false;\n            }\n            const overlapOptions = collisionsOptions.overlap;\n            if (overlapOptions.enable) {\n                return false;\n            }\n            const retries = overlapOptions.retries, minRetries = 0;\n            if (retries >= minRetries && tryCount > retries) {\n                throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\n            }\n            return !!this.container.particles.find(particle => getDistance(pos, particle.position) < radius + particle.getRadius());\n        };\n        this._getRollColor = color => {\n            if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n                return color;\n            }\n            const rollFactor = 1, none = 0, backFactor = this.roll.horizontal && this.roll.vertical ? double * rollFactor : rollFactor, backSum = this.roll.horizontal ? Math.PI * half : none, rolled = Math.floor(((this.roll.angle ?? none) + backSum) / (Math.PI / backFactor)) % double;\n            if (!rolled) {\n                return color;\n            }\n            if (this.backColor) {\n                return this.backColor;\n            }\n            if (this.roll.alter) {\n                return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n            }\n            return color;\n        };\n        this._initPosition = position => {\n            const container = this.container, zIndexValue = getRangeValue(this.options.zIndex.value), minZ = 0;\n            this.position = this._calcPosition(container, position, clamp(zIndexValue, minZ, container.zLayers));\n            this.initialPosition = this.position.copy();\n            const canvasSize = container.canvas.size, defaultRadius = 0;\n            this.moveCenter = {\n                ...getPosition(this.options.move.center, canvasSize),\n                radius: this.options.move.center.radius ?? defaultRadius,\n                mode: this.options.move.center.mode ?? PixelMode.percent,\n            };\n            this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n            switch (this.options.move.direction) {\n                case MoveDirection.inside:\n                    this.outType = ParticleOutType.inside;\n                    break;\n                case MoveDirection.outside:\n                    this.outType = ParticleOutType.outside;\n                    break;\n            }\n            this.offset = Vector.origin;\n        };\n        this._engine = engine;\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        const container = this.container, pathGenerator = this.pathGenerator, shapeDrawer = container.shapeDrawers.get(this.shape);\n        shapeDrawer?.particleDestroy?.(this);\n        for (const plugin of container.plugins.values()) {\n            plugin.particleDestroyed?.(this, override);\n        }\n        for (const updater of container.particles.updaters) {\n            updater.particleDestroyed?.(this, override);\n        }\n        pathGenerator?.reset(this);\n        this._engine.dispatchEvent(EventType.particleDestroyed, {\n            container: this.container,\n            data: {\n                particle: this,\n            },\n        });\n    }\n    draw(delta) {\n        const container = this.container, canvas = container.canvas;\n        for (const plugin of container.plugins.values()) {\n            canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return this.getRadius() ** squareExp * Math.PI * half;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        return this.bubble.radius ?? this.size.value;\n    }\n    getStrokeColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.effectClose = true;\n        this.effectFill = true;\n        this.shapeClose = true;\n        this.shapeFill = true;\n        this.pathRotation = false;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.isRotating = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = ParticleOutType.normal;\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), { reduceDuplicates } = particlesOptions, effectType = particlesOptions.effect.type, shapeType = particlesOptions.shape.type;\n        this.effect = itemFromSingleOrMultiple(effectType, this.id, reduceDuplicates);\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const effectOptions = particlesOptions.effect, shapeOptions = particlesOptions.shape;\n        if (overrideOptions) {\n            if (overrideOptions.effect?.type) {\n                const overrideEffectType = overrideOptions.effect.type, effect = itemFromSingleOrMultiple(overrideEffectType, this.id, reduceDuplicates);\n                if (effect) {\n                    this.effect = effect;\n                    effectOptions.load(overrideOptions.effect);\n                }\n            }\n            if (overrideOptions.shape?.type) {\n                const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n                if (shape) {\n                    this.shape = shape;\n                    shapeOptions.load(overrideOptions.shape);\n                }\n            }\n        }\n        if (this.effect === randomString) {\n            const availableEffects = [...this.container.effectDrawers.keys()];\n            this.effect = availableEffects[Math.floor(Math.random() * availableEffects.length)];\n        }\n        if (this.shape === randomString) {\n            const availableShapes = [...this.container.shapeDrawers.keys()];\n            this.shape = availableShapes[Math.floor(Math.random() * availableShapes.length)];\n        }\n        this.effectData = loadEffectData(this.effect, effectOptions, this.id, reduceDuplicates);\n        this.shapeData = loadShapeData(this.shape, shapeOptions, this.id, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        const effectData = this.effectData;\n        if (effectData) {\n            particlesOptions.load(effectData.particles);\n        }\n        const shapeData = this.shapeData;\n        if (shapeData) {\n            particlesOptions.load(shapeData.particles);\n        }\n        const interactivity = new Interactivity(engine, container);\n        interactivity.load(container.actualOptions.interactivity);\n        interactivity.load(particlesOptions.interactivity);\n        this.interactivity = interactivity;\n        this.effectFill = effectData?.fill ?? particlesOptions.effect.fill;\n        this.effectClose = effectData?.close ?? particlesOptions.effect.close;\n        this.shapeFill = shapeData?.fill ?? particlesOptions.shape.fill;\n        this.shapeClose = shapeData?.close ?? particlesOptions.shape.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getRangeValue(pathOptions.delay.value) * millisecondsToSeconds;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        container.retina.initParticle(this);\n        this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this._initPosition(position);\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        const decayOffset = 1;\n        this.moveDecay = decayOffset - getRangeValue(this.options.move.decay);\n        const particles = container.particles;\n        particles.setLastZIndex(this.position.z);\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let effectDrawer = container.effectDrawers.get(this.effect);\n        if (!effectDrawer) {\n            effectDrawer = this._engine.getEffectDrawer(this.effect);\n            if (effectDrawer) {\n                container.effectDrawers.set(this.effect, effectDrawer);\n            }\n        }\n        if (effectDrawer?.loadEffect) {\n            effectDrawer.loadEffect(this);\n        }\n        let shapeDrawer = container.shapeDrawers.get(this.shape);\n        if (!shapeDrawer) {\n            shapeDrawer = this._engine.getShapeDrawer(this.shape);\n            if (shapeDrawer) {\n                container.shapeDrawers.set(this.shape, shapeDrawer);\n            }\n        }\n        if (shapeDrawer?.loadShape) {\n            shapeDrawer.loadShape(this);\n        }\n        const sideCountFunc = shapeDrawer?.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this._engine, this.options.shadow.color);\n        for (const updater of particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of particles.movers) {\n            mover.init?.(this);\n        }\n        effectDrawer?.particleInit?.(container, this);\n        shapeDrawer?.particleInit?.(container, this);\n        for (const plugin of container.plugins.values()) {\n            plugin.particleCreated?.(this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\n        return (position.x >= -radius &&\n            position.y >= -radius &&\n            position.y <= canvasSize.height + radius &&\n            position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        for (const updater of this.container.particles.updaters) {\n            updater.reset?.(this);\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","export var RangeType;\n(function (RangeType) {\n    RangeType[\"circle\"] = \"circle\";\n    RangeType[\"rectangle\"] = \"rectangle\";\n})(RangeType || (RangeType = {}));\n","import { RangeType } from \"../../Types/RangeType.js\";\nimport { getDistance } from \"../../Utils/NumberUtils.js\";\nconst squareExp = 2;\nexport class BaseRange {\n    constructor(x, y, type) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n        this.type = type;\n    }\n}\nexport class Circle extends BaseRange {\n    constructor(x, y, radius) {\n        super(x, y, RangeType.circle);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (range instanceof Circle || range.type === RangeType.circle) {\n            const circleRange = range, rSum = r + circleRange.radius, dist = Math.sqrt(distPos.x ** squareExp + distPos.y ** squareExp);\n            return rSum > dist;\n        }\n        else if (range instanceof Rectangle || range.type === RangeType.rectangle) {\n            const rectRange = range, { width, height } = rectRange.size, edges = Math.pow(distPos.x - width, squareExp) + Math.pow(distPos.y - height, squareExp);\n            return (edges <= r ** squareExp ||\n                (distPos.x <= r + width && distPos.y <= r + height) ||\n                distPos.x <= width ||\n                distPos.y <= height);\n        }\n        return false;\n    }\n}\nexport class Rectangle extends BaseRange {\n    constructor(x, y, width, height) {\n        super(x, y, RangeType.rectangle);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            return range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n","import { Circle, Rectangle } from \"./Ranges.js\";\nimport { getDistance } from \"../../Utils/NumberUtils.js\";\nconst half = 0.5, double = 2, subdivideCount = 4;\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < subdivideCount; i++) {\n                const fixedIndex = i % double;\n                this._subs.push(new QuadTree(new Rectangle(x + width * half * fixedIndex, y + height * half * (Math.round(i * half) - fixedIndex), width * half, height * half), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some(sub => sub.insert(point));\n    }\n    query(range, check) {\n        const res = [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                res.push(...sub.query(range, check));\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n","import { getLogger, getPosition } from \"../Utils/Utils.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { InteractionManager } from \"./Utils/InteractionManager.js\";\nimport { LimitMode } from \"../Enums/Modes/LimitMode.js\";\nimport { Particle } from \"./Particle.js\";\nimport { Point } from \"./Utils/Point.js\";\nimport { QuadTree } from \"./Utils/QuadTree.js\";\nimport { Rectangle } from \"./Utils/Ranges.js\";\nimport { errorPrefix } from \"./Utils/Constants.js\";\nconst qTreeCapacity = 4, squareExp = 2, defaultRemoveQuantity = 1;\nconst qTreeRectangle = (canvasSize) => {\n    const { height, width } = canvasSize, posOffset = -0.25, sizeFactor = 1.5;\n    return new Rectangle(posOffset * width, posOffset * height, sizeFactor * width, sizeFactor * height);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._addToPool = (...particles) => {\n            this._pool.push(...particles);\n        };\n        this._applyDensity = (options, manualCount, group) => {\n            const numberOptions = options.number;\n            if (!options.number.density?.enable) {\n                if (group === undefined) {\n                    this._limit = numberOptions.limit.value;\n                }\n                else if (numberOptions.limit) {\n                    this._groupLimits.set(group, numberOptions.limit.value);\n                }\n                return;\n            }\n            const densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, minLimit = 0, optParticlesLimit = numberOptions.limit.value > minLimit ? numberOptions.limit.value : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter(t => t.group === group).length);\n            if (group === undefined) {\n                this._limit = numberOptions.limit.value * densityFactor;\n            }\n            else {\n                this._groupLimits.set(group, numberOptions.limit.value * densityFactor);\n            }\n            if (particlesCount < particlesNumber) {\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = densityOptions => {\n            const container = this._container, defaultFactor = 1;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return defaultFactor;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.height * densityOptions.width * pxRatio ** squareExp);\n        };\n        this._pushParticle = (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this._pool.pop();\n                if (!particle) {\n                    particle = new Particle(this._engine, this._container);\n                }\n                particle.init(this._nextId, position, overrideOptions, group);\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(EventType.particleAdded, {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            const zIdx = this._zArray.indexOf(particle), deleteCount = 1;\n            this._array.splice(index, deleteCount);\n            this._zArray.splice(zIdx, deleteCount);\n            particle.destroy(override);\n            this._engine.dispatchEvent(EventType.particleRemoved, {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            this._addToPool(particle);\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this._pool = [];\n        this._limit = 0;\n        this._groupLimits = new Map();\n        this._needsSort = false;\n        this._lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        this._pluginsInitialized = false;\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = [];\n        this.updaters = [];\n    }\n    get count() {\n        return this._array.length;\n    }\n    addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        options.manualParticles.forEach(p => this.addParticle(p.position ? getPosition(p.position, container.canvas.size) : undefined, p.options));\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const limitMode = this._container.actualOptions.particles.number.limit.mode, limit = group === undefined ? this._limit : (this._groupLimits.get(group) ?? this._limit), currentCount = this.count, minLimit = 0;\n        if (limit > minLimit) {\n            switch (limitMode) {\n                case LimitMode.delete: {\n                    const countOffset = 1, minCount = 0, countToRemove = currentCount + countOffset - limit;\n                    if (countToRemove > minCount) {\n                        this.removeQuantity(countToRemove);\n                    }\n                    break;\n                }\n                case LimitMode.wait:\n                    if (currentCount >= limit) {\n                        return;\n                    }\n                    break;\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n        this._pluginsInitialized = false;\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    draw(delta) {\n        const container = this._container, canvas = container.canvas;\n        canvas.clear();\n        this.update(delta);\n        for (const plugin of container.plugins.values()) {\n            canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    get(index) {\n        return this._array[index];\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    async init() {\n        const container = this._container, options = container.actualOptions;\n        this._lastZIndex = 0;\n        this._needsSort = false;\n        await this.initPlugins();\n        let handled = false;\n        for (const plugin of container.plugins.values()) {\n            handled = plugin.particlesInitialization?.() ?? handled;\n            if (handled) {\n                break;\n            }\n        }\n        this.addManualParticles();\n        if (!handled) {\n            const particlesOptions = options.particles, groups = particlesOptions.groups;\n            for (const group in groups) {\n                const groupOptions = groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < particlesOptions.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < particlesOptions.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    async initPlugins() {\n        if (this._pluginsInitialized) {\n            return;\n        }\n        const container = this._container;\n        this.movers = await this._engine.getMovers(container, true);\n        this.updaters = await this._engine.getUpdaters(container, true);\n        await this._interactionManager.init();\n        for (const pathGenerator of container.pathGenerators.values()) {\n            pathGenerator.init(container);\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse?.position, overrideOptions, group);\n        }\n    }\n    async redraw() {\n        this.clear();\n        await this.init();\n        this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = defaultRemoveQuantity, group, override) {\n        const minIndex = 0;\n        if (index < minIndex || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            if (this._removeParticle(i, group, override)) {\n                i--;\n                deleted++;\n            }\n        }\n    }\n    removeQuantity(quantity, group) {\n        const defaultIndex = 0;\n        this.removeAt(defaultIndex, quantity, group);\n    }\n    setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups, manualCount = 0;\n        for (const group in groups) {\n            this._applyDensity(groups[group], manualCount, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    setLastZIndex(zIndex) {\n        this._lastZIndex = zIndex;\n        this._needsSort = this._needsSort || this._lastZIndex < zIndex;\n    }\n    setResizeFactor(factor) {\n        this._resizeFactor = factor;\n    }\n    update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const pathGenerator of container.pathGenerators.values()) {\n            pathGenerator.update();\n        }\n        for (const plugin of container.plugins.values()) {\n            plugin.update?.(delta);\n        }\n        const resizeFactor = this._resizeFactor;\n        for (const particle of this._array) {\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            this._interactionManager.reset(particle);\n            for (const plugin of this._container.plugins.values()) {\n                if (particle.destroyed) {\n                    break;\n                }\n                plugin.particleUpdate?.(particle, delta);\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            for (const particle of particlesToDelete) {\n                this._engine.dispatchEvent(EventType.particleRemoved, {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n            }\n            this._addToPool(...particlesToDelete);\n        }\n        this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete this._resizeFactor;\n        if (this._needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            const lengthOffset = 1;\n            this._lastZIndex = zArray[zArray.length - lengthOffset].position.z;\n            this._needsSort = false;\n        }\n    }\n}\n","import { getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { isSsr } from \"../Utils/Utils.js\";\nconst defaultRatio = 1, defaultReduceFactor = 1;\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = defaultRatio;\n        this.reduceFactor = defaultReduceFactor;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? defaultRatio : window.devicePixelRatio;\n        this.reduceFactor = defaultReduceFactor;\n        const ratio = this.pixelRatio, canvas = container.canvas;\n        if (canvas.element) {\n            const element = canvas.element;\n            canvas.size.width = element.offsetWidth * ratio;\n            canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n","import { animate, cancelAnimation, getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { errorPrefix, millisecondsToSeconds } from \"./Utils/Constants.js\";\nimport { getLogger, safeIntersectionObserver } from \"../Utils/Utils.js\";\nimport { Canvas } from \"./Canvas.js\";\nimport { EventListeners } from \"./Utils/EventListeners.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { Options } from \"../Options/Classes/Options.js\";\nimport { Particles } from \"./Particles.js\";\nimport { Retina } from \"./Retina.js\";\nimport { loadOptions } from \"../Utils/OptionsUtils.js\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nconst defaultFps = 60;\nfunction initDelta(value, fpsLimit = defaultFps, smooth = false) {\n    return {\n        value,\n        factor: smooth ? defaultFps / fpsLimit : (defaultFps * value) / millisecondsToSeconds,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this._intersectionManager = entries => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                if (entry.isIntersecting) {\n                    void this.play();\n                }\n                else {\n                    this.pause();\n                }\n            }\n        };\n        this._nextFrame = (timestamp) => {\n            try {\n                if (!this._smooth &&\n                    this._lastFrameTime !== undefined &&\n                    timestamp < this._lastFrameTime + millisecondsToSeconds / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this._lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this._lastFrameTime, this.fpsLimit, this._smooth);\n                this.addLifeTime(delta.value);\n                this._lastFrameTime = timestamp;\n                if (delta.value > millisecondsToSeconds) {\n                    this.draw(false);\n                    return;\n                }\n                this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.animationStatus) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.id = Symbol(id);\n        this.fpsLimit = 120;\n        this._smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this._lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._clickHandlers = new Map();\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this, this._engine);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.effectDrawers = new Map();\n        this.shapeDrawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        this._intersectionObserver = safeIntersectionObserver(entries => this._intersectionManager(entries));\n        this._engine.dispatchEvent(EventType.containerBuilt, { container: this });\n    }\n    get animationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        }, clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            }, radius = 1;\n            clickOrTouchHandler(e, pos, radius);\n        }, touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        }, touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        }, touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e, lengthOffset = 1;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - lengthOffset];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, minCoordinate = 0, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : minCoordinate),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : minCoordinate),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        }, touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        this._clickHandlers.set(\"click\", clickHandler);\n        this._clickHandlers.set(\"touchstart\", touchStartHandler);\n        this._clickHandlers.set(\"touchmove\", touchMoveHandler);\n        this._clickHandlers.set(\"touchend\", touchEndHandler);\n        this._clickHandlers.set(\"touchcancel\", touchCancelHandler);\n        for (const [key, handler] of this._clickHandlers) {\n            el.addEventListener(key, handler);\n        }\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    clearClickHandlers() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        for (const [key, handler] of this._clickHandlers) {\n            this.interactivity.element?.removeEventListener(key, handler);\n        }\n        this._clickHandlers.clear();\n    }\n    destroy(remove = true) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.clearClickHandlers();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const effectDrawer of this.effectDrawers.values()) {\n            effectDrawer.destroy?.(this);\n        }\n        for (const shapeDrawer of this.shapeDrawers.values()) {\n            shapeDrawer.destroy?.(this);\n        }\n        for (const key of this.effectDrawers.keys()) {\n            this.effectDrawers.delete(key);\n        }\n        for (const key of this.shapeDrawers.keys()) {\n            this.shapeDrawers.delete(key);\n        }\n        this._engine.clearPlugins(this);\n        this.destroyed = true;\n        if (remove) {\n            const mainArr = this._engine.items, idx = mainArr.findIndex(t => t === this), minIndex = 0;\n            if (idx >= minIndex) {\n                const deleteCount = 1;\n                mainArr.splice(idx, deleteCount);\n            }\n        }\n        this._engine.dispatchEvent(EventType.containerDestroyed, { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        const frame = (timestamp) => {\n            if (refreshTime) {\n                this._lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            this._nextFrame(timestamp);\n        };\n        this._drawAnimationFrame = animate(timestamp => frame(timestamp));\n    }\n    async export(type, options = {}) {\n        for (const plugin of this.plugins.values()) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const plugin of this.plugins.values()) {\n            plugin.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const effects = this._engine.getSupportedEffects();\n        for (const type of effects) {\n            const drawer = this._engine.getEffectDrawer(type);\n            if (drawer) {\n                this.effectDrawers.set(type, drawer);\n            }\n        }\n        const shapes = this._engine.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.getShapeDrawer(type);\n            if (drawer) {\n                this.shapeDrawers.set(type, drawer);\n            }\n        }\n        await this.particles.initPlugins();\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = await this._engine.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        const { zLayers, duration, delay, fpsLimit, smooth } = this.actualOptions;\n        this.zLayers = zLayers;\n        this._duration = getRangeValue(duration) * millisecondsToSeconds;\n        this._delay = getRangeValue(delay) * millisecondsToSeconds;\n        this._lifeTime = 0;\n        const defaultFpsLimit = 120, minFpsLimit = 0;\n        this.fpsLimit = fpsLimit > minFpsLimit ? fpsLimit : defaultFpsLimit;\n        this._smooth = smooth;\n        for (const drawer of this.effectDrawers.values()) {\n            await drawer.init?.(this);\n        }\n        for (const drawer of this.shapeDrawers.values()) {\n            await drawer.init?.(this);\n        }\n        for (const plugin of this.plugins.values()) {\n            await plugin.init?.();\n        }\n        this._engine.dispatchEvent(EventType.containerInit, { container: this });\n        await this.particles.init();\n        this.particles.setDensity();\n        for (const plugin of this.plugins.values()) {\n            plugin.particlesSetup?.();\n        }\n        this._engine.dispatchEvent(EventType.particlesSetup, { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimation(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const plugin of this.plugins.values()) {\n            plugin.pause?.();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(EventType.containerPaused, { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const plugin of this.plugins.values()) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(EventType.containerPlay, { container: this });\n        this.draw(needsUpdate ?? false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset(sourceOptions) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = sourceOptions;\n        this._sourceOptions = sourceOptions;\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise(resolve => {\n            const start = async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const plugin of this.plugins.values()) {\n                    await plugin.start?.();\n                }\n                this._engine.dispatchEvent(EventType.containerStarted, { container: this });\n                this.play();\n                resolve();\n            };\n            this._delayTimeout = setTimeout(() => void start(), this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const plugin of this.plugins.values()) {\n            plugin.stop?.();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(EventType.containerStopped, { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this._responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this._responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n","export class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        this.removeEventListener(type, listener);\n        let arr = this._listeners.get(type);\n        if (!arr) {\n            arr = [];\n            this._listeners.set(type, arr);\n        }\n        arr.push(listener);\n    }\n    dispatchEvent(type, args) {\n        const listeners = this._listeners.get(type);\n        listeners?.forEach(handler => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener), minIndex = 0;\n        if (idx < minIndex) {\n            return;\n        }\n        const deleteCount = 1;\n        if (length === deleteCount) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, deleteCount);\n        }\n    }\n}\n","import { errorPrefix, generatedAttribute } from \"./Utils/Constants.js\";\nimport { executeOnSingleOrMultiple, getLogger, itemFromSingleOrMultiple } from \"../Utils/Utils.js\";\nimport { Container } from \"./Container.js\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { getRandom } from \"../Utils/NumberUtils.js\";\nasync function getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = await Promise.all([...initializers.values()].map(t => t(container)));\n        map.set(container, res);\n    }\n    return res;\n}\nasync function getDataFromUrl(data) {\n    const url = itemFromSingleOrMultiple(data.url, data.index);\n    if (!url) {\n        return data.fallback;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return (await response.json());\n    }\n    getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n    return data.fallback;\n}\nconst generatedTrue = \"true\", generatedFalse = \"false\", canvasTag = \"canvas\", getCanvasFromContainer = (domContainer) => {\n    let canvasEl;\n    if (domContainer instanceof HTMLCanvasElement || domContainer.tagName.toLowerCase() === canvasTag) {\n        canvasEl = domContainer;\n        if (!canvasEl.dataset[generatedAttribute]) {\n            canvasEl.dataset[generatedAttribute] = generatedFalse;\n        }\n    }\n    else {\n        const existingCanvases = domContainer.getElementsByTagName(canvasTag);\n        if (existingCanvases.length) {\n            const firstIndex = 0;\n            canvasEl = existingCanvases[firstIndex];\n            canvasEl.dataset[generatedAttribute] = generatedFalse;\n        }\n        else {\n            canvasEl = document.createElement(canvasTag);\n            canvasEl.dataset[generatedAttribute] = generatedTrue;\n            domContainer.appendChild(canvasEl);\n        }\n    }\n    const fullPercent = \"100%\";\n    if (!canvasEl.style.width) {\n        canvasEl.style.width = fullPercent;\n    }\n    if (!canvasEl.style.height) {\n        canvasEl.style.height = fullPercent;\n    }\n    return canvasEl;\n}, getDomContainer = (id, source) => {\n    let domContainer = source ?? document.getElementById(id);\n    if (domContainer) {\n        return domContainer;\n    }\n    domContainer = document.createElement(\"div\");\n    domContainer.id = id;\n    domContainer.dataset[generatedAttribute] = generatedTrue;\n    document.body.append(domContainer);\n    return domContainer;\n};\nexport class Engine {\n    constructor() {\n        this._configs = new Map();\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this.plugins = [];\n        this.colorManagers = new Map();\n        this.easingFunctions = new Map();\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.effectDrawers = new Map();\n        this.shapeDrawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    get configs() {\n        const res = {};\n        for (const [name, config] of this._configs) {\n            res[name] = config;\n        }\n        return res;\n    }\n    get items() {\n        return this._domArray;\n    }\n    get version() {\n        return \"3.7.1\";\n    }\n    async addColorManager(manager, refresh = true) {\n        this.colorManagers.set(manager.key, manager);\n        await this.refresh(refresh);\n    }\n    addConfig(config) {\n        const key = config.key ?? config.name ?? \"default\";\n        this._configs.set(key, config);\n        this._eventDispatcher.dispatchEvent(EventType.configAdded, { data: { name: key, config } });\n    }\n    async addEasing(name, easing, refresh = true) {\n        if (this.getEasing(name)) {\n            return;\n        }\n        this.easingFunctions.set(name, easing);\n        await this.refresh(refresh);\n    }\n    async addEffect(effect, drawer, refresh = true) {\n        executeOnSingleOrMultiple(effect, type => {\n            if (!this.getEffectDrawer(type)) {\n                this.effectDrawers.set(type, drawer);\n            }\n        });\n        await this.refresh(refresh);\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer, refresh = true) {\n        this._initializers.interactors.set(name, interactorInitializer);\n        await this.refresh(refresh);\n    }\n    async addMover(name, moverInitializer, refresh = true) {\n        this._initializers.movers.set(name, moverInitializer);\n        await this.refresh(refresh);\n    }\n    async addParticleUpdater(name, updaterInitializer, refresh = true) {\n        this._initializers.updaters.set(name, updaterInitializer);\n        await this.refresh(refresh);\n    }\n    async addPathGenerator(name, generator, refresh = true) {\n        if (!this.getPathGenerator(name)) {\n            this.pathGenerators.set(name, generator);\n        }\n        await this.refresh(refresh);\n    }\n    async addPlugin(plugin, refresh = true) {\n        if (!this.getPlugin(plugin.id)) {\n            this.plugins.push(plugin);\n        }\n        await this.refresh(refresh);\n    }\n    async addPreset(preset, options, override = false, refresh = true) {\n        if (override || !this.getPreset(preset)) {\n            this.presets.set(preset, options);\n        }\n        await this.refresh(refresh);\n    }\n    async addShape(drawer, refresh = true) {\n        for (const validType of drawer.validTypes) {\n            if (this.getShapeDrawer(validType)) {\n                continue;\n            }\n            this.shapeDrawers.set(validType, drawer);\n        }\n        await this.refresh(refresh);\n    }\n    clearPlugins(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this.items;\n    }\n    domItem(index) {\n        return this.item(index);\n    }\n    async getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            if (plugin.needsPlugin(container.actualOptions)) {\n                res.set(plugin.id, await plugin.getPlugin(container));\n            }\n        }\n        return res;\n    }\n    getEasing(name) {\n        return this.easingFunctions.get(name) ?? ((value) => value);\n    }\n    getEffectDrawer(type) {\n        return this.effectDrawers.get(type);\n    }\n    async getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    async getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find(t => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.shapeDrawers.get(type);\n    }\n    getSupportedEffects() {\n        return this.effectDrawers.keys();\n    }\n    getSupportedShapes() {\n        return this.shapeDrawers.keys();\n    }\n    async getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    init() {\n        if (this._initialized) {\n            return;\n        }\n        this._initialized = true;\n    }\n    item(index) {\n        const { items } = this, item = items[index];\n        if (!item || item.destroyed) {\n            const deleteCount = 1;\n            items.splice(index, deleteCount);\n            return;\n        }\n        return item;\n    }\n    async load(params) {\n        const randomFactor = 10000, id = params.id ?? params.element?.id ?? `tsparticles${Math.floor(getRandom() * randomFactor)}`, { index, url } = params, options = url ? await getDataFromUrl({ fallback: params.options, url, index }) : params.options;\n        const currentOptions = itemFromSingleOrMultiple(options, index), { items } = this, oldIndex = items.findIndex(v => v.id.description === id), minIndex = 0, newItem = new Container(this, id, currentOptions);\n        if (oldIndex >= minIndex) {\n            const old = this.item(oldIndex), one = 1, none = 0, deleteCount = old ? one : none;\n            if (old && !old.destroyed) {\n                old.destroy(false);\n            }\n            items.splice(oldIndex, deleteCount, newItem);\n        }\n        else {\n            items.push(newItem);\n        }\n        const domContainer = getDomContainer(id, params.element), canvasEl = getCanvasFromContainer(domContainer);\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n    loadOptions(options, sourceOptions) {\n        this.plugins.forEach(plugin => plugin.loadOptions?.(options, sourceOptions));\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        updaters.forEach(updater => updater.loadOptions?.(options, ...sourceOptions));\n    }\n    async refresh(refresh = true) {\n        if (!refresh) {\n            return;\n        }\n        await Promise.all(this.items.map(t => t.refresh()));\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    setOnClickHandler(callback) {\n        const { items } = this;\n        if (!items.length) {\n            throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n        }\n        items.forEach(item => item.addClickHandler(callback));\n    }\n}\n","import { InteractorType } from \"../../Enums/Types/InteractorType.js\";\nexport class ExternalInteractorBase {\n    constructor(container) {\n        this.type = InteractorType.external;\n        this.container = container;\n    }\n}\n","import { InteractorType } from \"../../Enums/Types/InteractorType.js\";\nexport class ParticlesInteractorBase {\n    constructor(container) {\n        this.type = InteractorType.particles;\n        this.container = container;\n    }\n}\n","export var RotateDirection;\n(function (RotateDirection) {\n    RotateDirection[\"clockwise\"] = \"clockwise\";\n    RotateDirection[\"counterClockwise\"] = \"counter-clockwise\";\n    RotateDirection[\"random\"] = \"random\";\n})(RotateDirection || (RotateDirection = {}));\n","export var GradientType;\n(function (GradientType) {\n    GradientType[\"linear\"] = \"linear\";\n    GradientType[\"radial\"] = \"radial\";\n    GradientType[\"random\"] = \"random\";\n})(GradientType || (GradientType = {}));\n","export var EasingType;\n(function (EasingType) {\n    EasingType[\"easeInBack\"] = \"ease-in-back\";\n    EasingType[\"easeInCirc\"] = \"ease-in-circ\";\n    EasingType[\"easeInCubic\"] = \"ease-in-cubic\";\n    EasingType[\"easeInLinear\"] = \"ease-in-linear\";\n    EasingType[\"easeInQuad\"] = \"ease-in-quad\";\n    EasingType[\"easeInQuart\"] = \"ease-in-quart\";\n    EasingType[\"easeInQuint\"] = \"ease-in-quint\";\n    EasingType[\"easeInExpo\"] = \"ease-in-expo\";\n    EasingType[\"easeInSine\"] = \"ease-in-sine\";\n    EasingType[\"easeOutBack\"] = \"ease-out-back\";\n    EasingType[\"easeOutCirc\"] = \"ease-out-circ\";\n    EasingType[\"easeOutCubic\"] = \"ease-out-cubic\";\n    EasingType[\"easeOutLinear\"] = \"ease-out-linear\";\n    EasingType[\"easeOutQuad\"] = \"ease-out-quad\";\n    EasingType[\"easeOutQuart\"] = \"ease-out-quart\";\n    EasingType[\"easeOutQuint\"] = \"ease-out-quint\";\n    EasingType[\"easeOutExpo\"] = \"ease-out-expo\";\n    EasingType[\"easeOutSine\"] = \"ease-out-sine\";\n    EasingType[\"easeInOutBack\"] = \"ease-in-out-back\";\n    EasingType[\"easeInOutCirc\"] = \"ease-in-out-circ\";\n    EasingType[\"easeInOutCubic\"] = \"ease-in-out-cubic\";\n    EasingType[\"easeInOutLinear\"] = \"ease-in-out-linear\";\n    EasingType[\"easeInOutQuad\"] = \"ease-in-out-quad\";\n    EasingType[\"easeInOutQuart\"] = \"ease-in-out-quart\";\n    EasingType[\"easeInOutQuint\"] = \"ease-in-out-quint\";\n    EasingType[\"easeInOutExpo\"] = \"ease-in-out-expo\";\n    EasingType[\"easeInOutSine\"] = \"ease-in-out-sine\";\n})(EasingType || (EasingType = {}));\n","import { init } from \"./init.js\";\nimport { isSsr } from \"./Utils/Utils.js\";\nconst tsParticles = init();\nif (!isSsr()) {\n    window.tsParticles = tsParticles;\n}\nexport * from \"./exports.js\";\nexport * from \"./export-types.js\";\nexport { tsParticles };\n","import { Engine } from \"./Core/Engine.js\";\nexport function init() {\n    const engine = new Engine();\n    engine.init();\n    return engine;\n}\n","import { jsx as d } from \"react/jsx-runtime\";\nimport { useEffect as m } from \"react\";\nimport { tsParticles as s } from \"@tsparticles/engine\";\nconst f = (t) => {\n  const i = t.id ?? \"tsparticles\";\n  return m(() => {\n    let e;\n    return s.load({ id: i, url: t.url, options: t.options }).then((l) => {\n      var a;\n      e = l, (a = t.particlesLoaded) == null || a.call(t, l);\n    }), () => {\n      e == null || e.destroy();\n    };\n  }, [i, t, t.url, t.options]), /* @__PURE__ */ d(\"div\", { id: i, className: t.className });\n};\nexport {\n  f as default\n};\n","import { tsParticles as i } from \"@tsparticles/engine\";\nimport o from \"./Particles.js\";\nimport \"react/jsx-runtime\";\nimport \"react\";\nasync function n(t) {\n  await t(i);\n}\nexport {\n  o as Particles,\n  o as default,\n  n as initParticlesEngine\n};\n","import { RotateDirection, clamp, getDistance, getDistances, getRandom, getRangeValue, } from \"@tsparticles/engine\";\nconst half = 0.5, minVelocity = 0, identity = 1, moveSpeedFactor = 60, minSpinRadius = 0, spinFactor = 0.01;\nexport function applyDistance(particle) {\n    const initialPosition = particle.initialPosition, { dx, dy } = getDistances(initialPosition, particle.position), dxFixed = Math.abs(dx), dyFixed = Math.abs(dy), { maxDistance } = particle.retina, hDistance = maxDistance.horizontal, vDistance = maxDistance.vertical;\n    if (!hDistance && !vDistance) {\n        return;\n    }\n    const hasHDistance = (hDistance && dxFixed >= hDistance) ?? false, hasVDistance = (vDistance && dyFixed >= vDistance) ?? false;\n    if ((hasHDistance || hasVDistance) && !particle.misplaced) {\n        particle.misplaced = (!!hDistance && dxFixed > hDistance) || (!!vDistance && dyFixed > vDistance);\n        if (hDistance) {\n            particle.velocity.x = particle.velocity.y * half - particle.velocity.x;\n        }\n        if (vDistance) {\n            particle.velocity.y = particle.velocity.x * half - particle.velocity.y;\n        }\n    }\n    else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {\n        particle.misplaced = false;\n    }\n    else if (particle.misplaced) {\n        const pos = particle.position, vel = particle.velocity;\n        if (hDistance &&\n            ((pos.x < initialPosition.x && vel.x < minVelocity) || (pos.x > initialPosition.x && vel.x > minVelocity))) {\n            vel.x *= -getRandom();\n        }\n        if (vDistance &&\n            ((pos.y < initialPosition.y && vel.y < minVelocity) || (pos.y > initialPosition.y && vel.y > minVelocity))) {\n            vel.y *= -getRandom();\n        }\n    }\n}\nexport function move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta) {\n    applyPath(particle, delta);\n    const gravityOptions = particle.gravity, gravityFactor = gravityOptions?.enable && gravityOptions.inverse ? -identity : identity;\n    if (moveDrift && moveSpeed) {\n        particle.velocity.x += (moveDrift * delta.factor) / (moveSpeedFactor * moveSpeed);\n    }\n    if (gravityOptions?.enable && moveSpeed) {\n        particle.velocity.y +=\n            (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (moveSpeedFactor * moveSpeed);\n    }\n    const decay = particle.moveDecay;\n    particle.velocity.multTo(decay);\n    const velocity = particle.velocity.mult(moveSpeed);\n    if (gravityOptions?.enable &&\n        maxSpeed > minVelocity &&\n        ((!gravityOptions.inverse && velocity.y >= minVelocity && velocity.y >= maxSpeed) ||\n            (gravityOptions.inverse && velocity.y <= minVelocity && velocity.y <= -maxSpeed))) {\n        velocity.y = gravityFactor * maxSpeed;\n        if (moveSpeed) {\n            particle.velocity.y = velocity.y / moveSpeed;\n        }\n    }\n    const zIndexOptions = particle.options.zIndex, zVelocityFactor = (identity - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n    velocity.multTo(zVelocityFactor);\n    const { position } = particle;\n    position.addTo(velocity);\n    if (moveOptions.vibrate) {\n        position.x += Math.sin(position.x * Math.cos(position.y));\n        position.y += Math.cos(position.y * Math.sin(position.x));\n    }\n}\nexport function spin(particle, moveSpeed) {\n    const container = particle.container;\n    if (!particle.spin) {\n        return;\n    }\n    const updateFunc = {\n        x: particle.spin.direction === RotateDirection.clockwise ? Math.cos : Math.sin,\n        y: particle.spin.direction === RotateDirection.clockwise ? Math.sin : Math.cos,\n    };\n    particle.position.x = particle.spin.center.x + particle.spin.radius * updateFunc.x(particle.spin.angle);\n    particle.position.y = particle.spin.center.y + particle.spin.radius * updateFunc.y(particle.spin.angle);\n    particle.spin.radius += particle.spin.acceleration;\n    const maxCanvasSize = Math.max(container.canvas.size.width, container.canvas.size.height), halfMaxSize = maxCanvasSize * half;\n    if (particle.spin.radius > halfMaxSize) {\n        particle.spin.radius = halfMaxSize;\n        particle.spin.acceleration *= -identity;\n    }\n    else if (particle.spin.radius < minSpinRadius) {\n        particle.spin.radius = minSpinRadius;\n        particle.spin.acceleration *= -identity;\n    }\n    particle.spin.angle += moveSpeed * spinFactor * (identity - particle.spin.radius / maxCanvasSize);\n}\nexport function applyPath(particle, delta) {\n    const particlesOptions = particle.options, pathOptions = particlesOptions.move.path, pathEnabled = pathOptions.enable;\n    if (!pathEnabled) {\n        return;\n    }\n    if (particle.lastPathTime <= particle.pathDelay) {\n        particle.lastPathTime += delta.value;\n        return;\n    }\n    const path = particle.pathGenerator?.generate(particle, delta);\n    if (path) {\n        particle.velocity.addTo(path);\n    }\n    if (pathOptions.clamp) {\n        particle.velocity.x = clamp(particle.velocity.x, -identity, identity);\n        particle.velocity.y = clamp(particle.velocity.y, -identity, identity);\n    }\n    particle.lastPathTime -= particle.pathDelay;\n}\nexport function getProximitySpeedFactor(particle) {\n    return particle.slow.inRange ? particle.slow.factor : identity;\n}\nexport function initSpin(particle) {\n    const container = particle.container, options = particle.options, spinOptions = options.move.spin;\n    if (!spinOptions.enable) {\n        return;\n    }\n    const spinPos = spinOptions.position ?? { x: 50, y: 50 }, spinFactor = 0.01, spinCenter = {\n        x: spinPos.x * spinFactor * container.canvas.size.width,\n        y: spinPos.y * spinFactor * container.canvas.size.height,\n    }, pos = particle.getPosition(), distance = getDistance(pos, spinCenter), spinAcceleration = getRangeValue(spinOptions.acceleration);\n    particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n    const minVelocity = 0;\n    particle.spin = {\n        center: spinCenter,\n        direction: particle.velocity.x >= minVelocity ? RotateDirection.clockwise : RotateDirection.counterClockwise,\n        angle: particle.velocity.angle,\n        radius: distance,\n        acceleration: particle.retina.spinAcceleration,\n    };\n}\n","import { getRangeMax, getRangeValue } from \"@tsparticles/engine\";\nimport { applyDistance, getProximitySpeedFactor, initSpin, move, spin } from \"./Utils.js\";\nconst diffFactor = 2, defaultSizeFactor = 1, defaultDeltaFactor = 1;\nexport class BaseMover {\n    init(particle) {\n        const options = particle.options, gravityOptions = options.move.gravity;\n        particle.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: getRangeValue(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        initSpin(particle);\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, pxRatio = container.retina.pixelRatio;\n        particle.retina.moveSpeed ??= getRangeValue(moveOptions.speed) * pxRatio;\n        particle.retina.moveDrift ??= getRangeValue(particle.options.move.drift) * pxRatio;\n        const slowFactor = getProximitySpeedFactor(particle), baseSpeed = particle.retina.moveSpeed * container.retina.reduceFactor, moveDrift = particle.retina.moveDrift, maxSize = getRangeMax(particleOptions.size.value) * pxRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : defaultSizeFactor, deltaFactor = delta.factor || defaultDeltaFactor, moveSpeed = (baseSpeed * sizeFactor * slowFactor * deltaFactor) / diffFactor, maxSpeed = particle.retina.maxSpeed ?? container.retina.maxSpeed;\n        if (moveOptions.spin.enable) {\n            spin(particle, moveSpeed);\n        }\n        else {\n            move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta);\n        }\n        applyDistance(particle);\n    }\n}\n","const double = 2, doublePI = Math.PI * double, minAngle = 0, origin = { x: 0, y: 0 };\nexport function drawCircle(data) {\n    const { context, particle, radius } = data;\n    if (!particle.circleRange) {\n        particle.circleRange = { min: minAngle, max: doublePI };\n    }\n    const circleRange = particle.circleRange;\n    context.arc(origin.x, origin.y, radius, circleRange.min, circleRange.max, false);\n}\n","import { degToRad, isObject } from \"@tsparticles/engine\";\nimport { drawCircle } from \"./Utils.js\";\nconst sides = 12, maxAngle = 360, minAngle = 0;\nexport class CircleDrawer {\n    constructor() {\n        this.validTypes = [\"circle\"];\n    }\n    draw(data) {\n        drawCircle(data);\n    }\n    getSidesCount() {\n        return sides;\n    }\n    particleInit(container, particle) {\n        const shapeData = particle.shapeData, angle = shapeData?.angle ?? {\n            max: maxAngle,\n            min: minAngle,\n        };\n        particle.circleRange = !isObject(angle)\n            ? {\n                min: minAngle,\n                max: degToRad(angle),\n            }\n            : { min: degToRad(angle.min), max: degToRad(angle.max) };\n    }\n}\n","import { getHslAnimationFromHsl, rangeColorToHsl, updateColor, } from \"@tsparticles/engine\";\nexport class ColorUpdater {\n    constructor(container, engine) {\n        this._container = container;\n        this._engine = engine;\n    }\n    init(particle) {\n        const hslColor = rangeColorToHsl(this._engine, particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this._container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            ((color?.h.value !== undefined && hAnimation.enable) ||\n                (color?.s.value !== undefined && sAnimation.enable) ||\n                (color?.l.value !== undefined && lAnimation.enable)));\n    }\n    update(particle, delta) {\n        updateColor(particle.color, delta);\n    }\n}\n","var RgbIndexes;\n(function (RgbIndexes) {\n    RgbIndexes[RgbIndexes[\"r\"] = 1] = \"r\";\n    RgbIndexes[RgbIndexes[\"g\"] = 2] = \"g\";\n    RgbIndexes[RgbIndexes[\"b\"] = 3] = \"b\";\n    RgbIndexes[RgbIndexes[\"a\"] = 4] = \"a\";\n})(RgbIndexes || (RgbIndexes = {}));\nconst shorthandHexRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexRegex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, hexRadix = 16, defaultAlpha = 1, alphaFactor = 0xff;\nexport class HexColorManager {\n    constructor() {\n        this.key = \"hex\";\n        this.stringPrefix = \"#\";\n    }\n    handleColor(color) {\n        return this._parseString(color.value);\n    }\n    handleRangeColor(color) {\n        return this._parseString(color.value);\n    }\n    parseString(input) {\n        return this._parseString(input);\n    }\n    _parseString(hexColor) {\n        if (typeof hexColor !== \"string\") {\n            return;\n        }\n        if (!hexColor?.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const hexFixed = hexColor.replace(shorthandHexRegex, (_, r, g, b, a) => {\n            return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n        }), result = hexRegex.exec(hexFixed);\n        return result\n            ? {\n                a: result[RgbIndexes.a] !== undefined\n                    ? parseInt(result[RgbIndexes.a], hexRadix) / alphaFactor\n                    : defaultAlpha,\n                b: parseInt(result[RgbIndexes.b], hexRadix),\n                g: parseInt(result[RgbIndexes.g], hexRadix),\n                r: parseInt(result[RgbIndexes.r], hexRadix),\n            }\n            : undefined;\n    }\n}\n","import { getRangeValue, hslToRgb, hslaToRgba, parseAlpha, } from \"@tsparticles/engine\";\nvar HslIndexes;\n(function (HslIndexes) {\n    HslIndexes[HslIndexes[\"h\"] = 1] = \"h\";\n    HslIndexes[HslIndexes[\"s\"] = 2] = \"s\";\n    HslIndexes[HslIndexes[\"l\"] = 3] = \"l\";\n    HslIndexes[HslIndexes[\"a\"] = 5] = \"a\";\n})(HslIndexes || (HslIndexes = {}));\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*[\\s,]\\s*(\\d+)%\\s*[\\s,]\\s*(\\d+)%\\s*([\\s,]\\s*(0|1|0?\\.\\d+|(\\d{1,3})%)\\s*)?\\)/i, result = regex.exec(input), minLength = 4, defaultAlpha = 1, radix = 10;\n        return result\n            ? hslaToRgba({\n                a: result.length > minLength ? parseAlpha(result[HslIndexes.a]) : defaultAlpha,\n                h: parseInt(result[HslIndexes.h], radix),\n                l: parseInt(result[HslIndexes.l], radix),\n                s: parseInt(result[HslIndexes.s], radix),\n            })\n            : undefined;\n    }\n}\n","import { getRandom, getRangeValue, initParticleNumericAnimationValue, percentDenominator, updateAnimation, } from \"@tsparticles/engine\";\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const opacityOptions = particle.options.opacity, pxRatio = 1;\n        particle.opacity = initParticleNumericAnimationValue(opacityOptions, pxRatio);\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.velocity =\n                (getRangeValue(opacityAnimation.speed) / percentDenominator) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        const none = 0;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!particle.opacity &&\n            particle.opacity.enable &&\n            ((particle.opacity.maxLoops ?? none) <= none ||\n                ((particle.opacity.maxLoops ?? none) > none &&\n                    (particle.opacity.loops ?? none) < (particle.opacity.maxLoops ?? none))));\n    }\n    reset(particle) {\n        if (particle.opacity) {\n            particle.opacity.time = 0;\n            particle.opacity.loops = 0;\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.opacity) {\n            return;\n        }\n        updateAnimation(particle, particle.opacity, true, particle.options.opacity.animation.destroy, delta);\n    }\n}\n","import { OutMode, calculateBounds, } from \"@tsparticles/engine\";\nimport { bounceHorizontal, bounceVertical } from \"./Utils.js\";\nexport class BounceOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\n            OutMode.bounce,\n            OutMode.split,\n        ];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        let handled = false;\n        for (const plugin of container.plugins.values()) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = calculateBounds(pos, size), canvasSize = container.canvas.size;\n        bounceHorizontal({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        bounceVertical({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n}\n","import { OutMode, OutModeDirection, getRangeValue } from \"@tsparticles/engine\";\nconst minVelocity = 0, boundsMin = 0;\nexport function bounceHorizontal(data) {\n    if ((data.outMode !== OutMode.bounce && data.outMode !== OutMode.split) ||\n        (data.direction !== OutModeDirection.left && data.direction !== OutModeDirection.right)) {\n        return;\n    }\n    if (data.bounds.right < boundsMin && data.direction === OutModeDirection.left) {\n        data.particle.position.x = data.size + data.offset.x;\n    }\n    else if (data.bounds.left > data.canvasSize.width && data.direction === OutModeDirection.right) {\n        data.particle.position.x = data.canvasSize.width - data.size - data.offset.x;\n    }\n    const velocity = data.particle.velocity.x;\n    let bounced = false;\n    if ((data.direction === OutModeDirection.right &&\n        data.bounds.right >= data.canvasSize.width &&\n        velocity > minVelocity) ||\n        (data.direction === OutModeDirection.left && data.bounds.left <= boundsMin && velocity < minVelocity)) {\n        const newVelocity = getRangeValue(data.particle.options.bounce.horizontal.value);\n        data.particle.velocity.x *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.x + data.size;\n    if (data.bounds.right >= data.canvasSize.width && data.direction === OutModeDirection.right) {\n        data.particle.position.x = data.canvasSize.width - minPos;\n    }\n    else if (data.bounds.left <= boundsMin && data.direction === OutModeDirection.left) {\n        data.particle.position.x = minPos;\n    }\n    if (data.outMode === OutMode.split) {\n        data.particle.destroy();\n    }\n}\nexport function bounceVertical(data) {\n    if ((data.outMode !== OutMode.bounce && data.outMode !== OutMode.split) ||\n        (data.direction !== OutModeDirection.bottom && data.direction !== OutModeDirection.top)) {\n        return;\n    }\n    if (data.bounds.bottom < boundsMin && data.direction === OutModeDirection.top) {\n        data.particle.position.y = data.size + data.offset.y;\n    }\n    else if (data.bounds.top > data.canvasSize.height && data.direction === OutModeDirection.bottom) {\n        data.particle.position.y = data.canvasSize.height - data.size - data.offset.y;\n    }\n    const velocity = data.particle.velocity.y;\n    let bounced = false;\n    if ((data.direction === OutModeDirection.bottom &&\n        data.bounds.bottom >= data.canvasSize.height &&\n        velocity > minVelocity) ||\n        (data.direction === OutModeDirection.top && data.bounds.top <= boundsMin && velocity < minVelocity)) {\n        const newVelocity = getRangeValue(data.particle.options.bounce.vertical.value);\n        data.particle.velocity.y *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.y + data.size;\n    if (data.bounds.bottom >= data.canvasSize.height && data.direction === OutModeDirection.bottom) {\n        data.particle.position.y = data.canvasSize.height - minPos;\n    }\n    else if (data.bounds.top <= boundsMin && data.direction === OutModeDirection.top) {\n        data.particle.position.y = minPos;\n    }\n    if (data.outMode === OutMode.split) {\n        data.particle.destroy();\n    }\n}\n","import { OutMode, ParticleOutType, Vector, getDistances, isPointInside, } from \"@tsparticles/engine\";\nconst minVelocity = 0;\nexport class DestroyOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [OutMode.destroy];\n    }\n    update(particle, direction, _delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case ParticleOutType.normal:\n            case ParticleOutType.outside:\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                break;\n            case ParticleOutType.inside: {\n                const { dx, dy } = getDistances(particle.position, particle.moveCenter), { x: vx, y: vy } = particle.velocity;\n                if ((vx < minVelocity && dx > particle.moveCenter.radius) ||\n                    (vy < minVelocity && dy > particle.moveCenter.radius) ||\n                    (vx >= minVelocity && dx < -particle.moveCenter.radius) ||\n                    (vy >= minVelocity && dy < -particle.moveCenter.radius)) {\n                    return;\n                }\n                break;\n            }\n        }\n        container.particles.remove(particle, particle.group, true);\n    }\n}\n","import { OutMode, OutModeDirection, Vector, isPointInside, } from \"@tsparticles/engine\";\nconst minVelocity = 0;\nexport class NoneOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [OutMode.none];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        if ((particle.options.move.distance.horizontal &&\n            (direction === OutModeDirection.left || direction === OutModeDirection.right)) ??\n            (particle.options.move.distance.vertical &&\n                (direction === OutModeDirection.top || direction === OutModeDirection.bottom))) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity, container = this.container, canvasSize = container.canvas.size, pRadius = particle.getRadius();\n        if (!gravityOptions.enable) {\n            if ((particle.velocity.y > minVelocity && particle.position.y <= canvasSize.height + pRadius) ||\n                (particle.velocity.y < minVelocity && particle.position.y >= -pRadius) ||\n                (particle.velocity.x > minVelocity && particle.position.x <= canvasSize.width + pRadius) ||\n                (particle.velocity.x < minVelocity && particle.position.x >= -pRadius)) {\n                return;\n            }\n            if (!isPointInside(particle.position, container.canvas.size, Vector.origin, pRadius, direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((!gravityOptions.inverse &&\n                position.y > canvasSize.height + pRadius &&\n                direction === OutModeDirection.bottom) ||\n                (gravityOptions.inverse && position.y < -pRadius && direction === OutModeDirection.top)) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\n","import { OutMode, OutModeDirection, ParticleOutType, Vector, calculateBounds, getDistances, getRandom, isPointInside, randomInRange, } from \"@tsparticles/engine\";\nconst minVelocity = 0, minDistance = 0;\nexport class OutOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [OutMode.out];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case ParticleOutType.inside: {\n                const { x: vx, y: vy } = particle.velocity;\n                const circVec = Vector.origin;\n                circVec.length = particle.moveCenter.radius;\n                circVec.angle = particle.velocity.angle + Math.PI;\n                circVec.addTo(Vector.create(particle.moveCenter));\n                const { dx, dy } = getDistances(particle.position, circVec);\n                if ((vx <= minVelocity && dx >= minDistance) ||\n                    (vy <= minVelocity && dy >= minDistance) ||\n                    (vx >= minVelocity && dx <= minDistance) ||\n                    (vy >= minVelocity && dy <= minDistance)) {\n                    return;\n                }\n                particle.position.x = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.width,\n                }));\n                particle.position.y = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.height,\n                }));\n                const { dx: newDx, dy: newDy } = getDistances(particle.position, particle.moveCenter);\n                particle.direction = Math.atan2(-newDy, -newDx);\n                particle.velocity.angle = particle.direction;\n                break;\n            }\n            default: {\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                switch (particle.outType) {\n                    case ParticleOutType.outside: {\n                        particle.position.x =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.x;\n                        particle.position.y =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.y;\n                        const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                        if (particle.moveCenter.radius) {\n                            particle.direction = Math.atan2(dy, dx);\n                            particle.velocity.angle = particle.direction;\n                        }\n                        break;\n                    }\n                    case ParticleOutType.normal: {\n                        const warp = particle.options.move.warp, canvasSize = container.canvas.size, newPos = {\n                            bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n                            left: -particle.getRadius() - particle.offset.x,\n                            right: canvasSize.width + particle.getRadius() + particle.offset.x,\n                            top: -particle.getRadius() - particle.offset.y,\n                        }, sizeValue = particle.getRadius(), nextBounds = calculateBounds(particle.position, sizeValue);\n                        if (direction === OutModeDirection.right &&\n                            nextBounds.left > canvasSize.width + particle.offset.x) {\n                            particle.position.x = newPos.left;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!warp) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        else if (direction === OutModeDirection.left && nextBounds.right < -particle.offset.x) {\n                            particle.position.x = newPos.right;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!warp) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        if (direction === OutModeDirection.bottom &&\n                            nextBounds.top > canvasSize.height + particle.offset.y) {\n                            if (!warp) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.top;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        else if (direction === OutModeDirection.top && nextBounds.bottom < -particle.offset.y) {\n                            if (!warp) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.bottom;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n    }\n}\n","import { OutMode, OutModeDirection, } from \"@tsparticles/engine\";\nimport { BounceOutMode } from \"./BounceOutMode.js\";\nimport { DestroyOutMode } from \"./DestroyOutMode.js\";\nimport { NoneOutMode } from \"./NoneOutMode.js\";\nimport { OutOutMode } from \"./OutOutMode.js\";\nconst checkOutMode = (outModes, outMode) => {\n    return (outModes.default === outMode ||\n        outModes.bottom === outMode ||\n        outModes.left === outMode ||\n        outModes.right === outMode ||\n        outModes.top === outMode);\n};\nexport class OutOfCanvasUpdater {\n    constructor(container) {\n        this._addUpdaterIfMissing = (particle, outMode, getUpdater) => {\n            const outModes = particle.options.move.outModes;\n            if (!this.updaters.has(outMode) && checkOutMode(outModes, outMode)) {\n                this.updaters.set(outMode, getUpdater(this.container));\n            }\n        };\n        this._updateOutMode = (particle, delta, outMode, direction) => {\n            for (const updater of this.updaters.values()) {\n                updater.update(particle, direction, delta, outMode);\n            }\n        };\n        this.container = container;\n        this.updaters = new Map();\n    }\n    init(particle) {\n        this._addUpdaterIfMissing(particle, OutMode.bounce, container => new BounceOutMode(container));\n        this._addUpdaterIfMissing(particle, OutMode.out, container => new OutOutMode(container));\n        this._addUpdaterIfMissing(particle, OutMode.destroy, container => new DestroyOutMode(container));\n        this._addUpdaterIfMissing(particle, OutMode.none, container => new NoneOutMode(container));\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning;\n    }\n    update(particle, delta) {\n        const outModes = particle.options.move.outModes;\n        this._updateOutMode(particle, delta, outModes.bottom ?? outModes.default, OutModeDirection.bottom);\n        this._updateOutMode(particle, delta, outModes.left ?? outModes.default, OutModeDirection.left);\n        this._updateOutMode(particle, delta, outModes.right ?? outModes.default, OutModeDirection.right);\n        this._updateOutMode(particle, delta, outModes.top ?? outModes.default, OutModeDirection.top);\n    }\n}\n","import { getRangeValue, parseAlpha, } from \"@tsparticles/engine\";\nvar RgbIndexes;\n(function (RgbIndexes) {\n    RgbIndexes[RgbIndexes[\"r\"] = 1] = \"r\";\n    RgbIndexes[RgbIndexes[\"g\"] = 2] = \"g\";\n    RgbIndexes[RgbIndexes[\"b\"] = 3] = \"b\";\n    RgbIndexes[RgbIndexes[\"a\"] = 5] = \"a\";\n})(RgbIndexes || (RgbIndexes = {}));\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d{1,3})\\s*[\\s,]\\s*(\\d{1,3})\\s*[\\s,]\\s*(\\d{1,3})\\s*([\\s,]\\s*(0|1|0?\\.\\d+|(\\d{1,3})%)\\s*)?\\)/i, result = regex.exec(input), radix = 10, minLength = 4, defaultAlpha = 1;\n        return result\n            ? {\n                a: result.length > minLength ? parseAlpha(result[RgbIndexes.a]) : defaultAlpha,\n                b: parseInt(result[RgbIndexes.b], radix),\n                g: parseInt(result[RgbIndexes.g], radix),\n                r: parseInt(result[RgbIndexes.r], radix),\n            }\n            : undefined;\n    }\n}\n","import { getRandom, percentDenominator, updateAnimation, } from \"@tsparticles/engine\";\nconst minLoops = 0;\nexport class SizeUpdater {\n    init(particle) {\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                ((particle.retina.sizeAnimationSpeed ?? container.retina.sizeAnimationSpeed) / percentDenominator) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            ((particle.size.maxLoops ?? minLoops) <= minLoops ||\n                ((particle.size.maxLoops ?? minLoops) > minLoops &&\n                    (particle.size.loops ?? minLoops) < (particle.size.maxLoops ?? minLoops))));\n    }\n    reset(particle) {\n        particle.size.loops = minLoops;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateAnimation(particle, particle.size, true, particle.options.size.animation.destroy, delta);\n    }\n}\n","import { assertValidVersion } from \"@tsparticles/engine\";\nimport { loadBaseMover } from \"@tsparticles/move-base\";\nimport { loadCircleShape } from \"@tsparticles/shape-circle\";\nimport { loadColorUpdater } from \"@tsparticles/updater-color\";\nimport { loadHexColorPlugin } from \"@tsparticles/plugin-hex-color\";\nimport { loadHslColorPlugin } from \"@tsparticles/plugin-hsl-color\";\nimport { loadOpacityUpdater } from \"@tsparticles/updater-opacity\";\nimport { loadOutModesUpdater } from \"@tsparticles/updater-out-modes\";\nimport { loadRgbColorPlugin } from \"@tsparticles/plugin-rgb-color\";\nimport { loadSizeUpdater } from \"@tsparticles/updater-size\";\nexport async function loadBasic(engine, refresh = true) {\n    assertValidVersion(engine, \"3.7.1\");\n    await loadHexColorPlugin(engine, false);\n    await loadHslColorPlugin(engine, false);\n    await loadRgbColorPlugin(engine, false);\n    await loadBaseMover(engine, false);\n    await loadCircleShape(engine, false);\n    await loadColorUpdater(engine, false);\n    await loadOpacityUpdater(engine, false);\n    await loadOutModesUpdater(engine, false);\n    await loadSizeUpdater(engine, false);\n    await engine.refresh(refresh);\n}\n","import { assertValidVersion } from \"@tsparticles/engine\";\nimport { HexColorManager } from \"./HexColorManager.js\";\nexport async function loadHexColorPlugin(engine, refresh = true) {\n    assertValidVersion(engine, \"3.7.1\");\n    await engine.addColorManager(new HexColorManager(), refresh);\n}\n","import { assertValidVersion } from \"@tsparticles/engine\";\nimport { HslColorManager } from \"./HslColorManager.js\";\nexport async function loadHslColorPlugin(engine, refresh = true) {\n    assertValidVersion(engine, \"3.7.1\");\n    await engine.addColorManager(new HslColorManager(), refresh);\n}\n","import { assertValidVersion } from \"@tsparticles/engine\";\nimport { RgbColorManager } from \"./RgbColorManager.js\";\nexport async function loadRgbColorPlugin(engine, refresh = true) {\n    assertValidVersion(engine, \"3.7.1\");\n    await engine.addColorManager(new RgbColorManager(), refresh);\n}\n","import { assertValidVersion } from \"@tsparticles/engine\";\nimport { BaseMover } from \"./BaseMover.js\";\nexport async function loadBaseMover(engine, refresh = true) {\n    assertValidVersion(engine, \"3.7.1\");\n    await engine.addMover(\"base\", () => {\n        return Promise.resolve(new BaseMover());\n    }, refresh);\n}\n","import { assertValidVersion } from \"@tsparticles/engine\";\nimport { CircleDrawer } from \"./CircleDrawer.js\";\nexport async function loadCircleShape(engine, refresh = true) {\n    assertValidVersion(engine, \"3.7.1\");\n    await engine.addShape(new CircleDrawer(), refresh);\n}\n","import { assertValidVersion } from \"@tsparticles/engine\";\nimport { ColorUpdater } from \"./ColorUpdater.js\";\nexport async function loadColorUpdater(engine, refresh = true) {\n    assertValidVersion(engine, \"3.7.1\");\n    await engine.addParticleUpdater(\"color\", container => {\n        return Promise.resolve(new ColorUpdater(container, engine));\n    }, refresh);\n}\n","import { assertValidVersion } from \"@tsparticles/engine\";\nimport { OpacityUpdater } from \"./OpacityUpdater.js\";\nexport async function loadOpacityUpdater(engine, refresh = true) {\n    assertValidVersion(engine, \"3.7.1\");\n    await engine.addParticleUpdater(\"opacity\", container => {\n        return Promise.resolve(new OpacityUpdater(container));\n    }, refresh);\n}\n","import { assertValidVersion } from \"@tsparticles/engine\";\nimport { OutOfCanvasUpdater } from \"./OutOfCanvasUpdater.js\";\nexport async function loadOutModesUpdater(engine, refresh = true) {\n    assertValidVersion(engine, \"3.7.1\");\n    await engine.addParticleUpdater(\"outModes\", container => {\n        return Promise.resolve(new OutOfCanvasUpdater(container));\n    }, refresh);\n}\n","import { assertValidVersion } from \"@tsparticles/engine\";\nimport { SizeUpdater } from \"./SizeUpdater.js\";\nexport async function loadSizeUpdater(engine, refresh = true) {\n    assertValidVersion(engine, \"3.7.1\");\n    await engine.addParticleUpdater(\"size\", () => {\n        return Promise.resolve(new SizeUpdater());\n    }, refresh);\n}\n","import { executeOnSingleOrMultiple, getRangeMax, isInArray, itemFromSingleOrMultiple, loadFont, } from \"@tsparticles/engine\";\nimport { drawEmoji } from \"./Utils.js\";\nconst defaultFont = '\"Twemoji Mozilla\", Apple Color Emoji, \"Segoe UI Emoji\", \"Noto Color Emoji\", \"EmojiOne Color\"', noPadding = 0;\nexport class EmojiDrawer {\n    constructor() {\n        this.validTypes = [\"emoji\"];\n        this._emojiShapeDict = new Map();\n    }\n    destroy() {\n        for (const [key, data] of this._emojiShapeDict) {\n            if (data instanceof ImageBitmap) {\n                data?.close();\n            }\n            this._emojiShapeDict.delete(key);\n        }\n    }\n    draw(data) {\n        const key = data.particle.emojiDataKey;\n        if (!key) {\n            return;\n        }\n        const image = this._emojiShapeDict.get(key);\n        if (!image) {\n            return;\n        }\n        drawEmoji(data, image);\n    }\n    async init(container) {\n        const options = container.actualOptions, { validTypes } = this;\n        if (!validTypes.find(t => isInArray(t, options.particles.shape.type))) {\n            return;\n        }\n        const promises = [loadFont(defaultFont)], shapeOptions = validTypes\n            .map(t => options.particles.shape.options[t])\n            .find(t => !!t);\n        if (shapeOptions) {\n            executeOnSingleOrMultiple(shapeOptions, shape => {\n                if (shape.font) {\n                    promises.push(loadFont(shape.font));\n                }\n            });\n        }\n        await Promise.all(promises);\n    }\n    particleDestroy(particle) {\n        particle.emojiDataKey = undefined;\n    }\n    particleInit(_container, particle) {\n        const double = 2, shapeData = particle.shapeData;\n        if (!shapeData?.value) {\n            return;\n        }\n        const emoji = itemFromSingleOrMultiple(shapeData.value, particle.randomIndexData);\n        if (!emoji) {\n            return;\n        }\n        const emojiOptions = typeof emoji === \"string\"\n            ? {\n                font: shapeData.font ?? defaultFont,\n                padding: shapeData.padding ?? noPadding,\n                value: emoji,\n            }\n            : {\n                font: defaultFont,\n                padding: noPadding,\n                ...shapeData,\n                ...emoji,\n            }, font = emojiOptions.font, value = emojiOptions.value;\n        const key = `${value}_${font}`;\n        if (this._emojiShapeDict.has(key)) {\n            particle.emojiDataKey = key;\n            return;\n        }\n        const padding = emojiOptions.padding * double, maxSize = getRangeMax(particle.size.value), fullSize = maxSize + padding, canvasSize = fullSize * double;\n        let image;\n        if (typeof OffscreenCanvas !== \"undefined\") {\n            const canvas = new OffscreenCanvas(canvasSize, canvasSize), context = canvas.getContext(\"2d\");\n            if (!context) {\n                return;\n            }\n            context.font = `400 ${maxSize * double}px ${font}`;\n            context.textBaseline = \"middle\";\n            context.textAlign = \"center\";\n            context.fillText(value, fullSize, fullSize);\n            image = canvas.transferToImageBitmap();\n        }\n        else {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = canvasSize;\n            canvas.height = canvasSize;\n            const context = canvas.getContext(\"2d\");\n            if (!context) {\n                return;\n            }\n            context.font = `400 ${maxSize * double}px ${font}`;\n            context.textBaseline = \"middle\";\n            context.textAlign = \"center\";\n            context.fillText(value, fullSize, fullSize);\n            image = canvas;\n        }\n        this._emojiShapeDict.set(key, image);\n        particle.emojiDataKey = key;\n    }\n}\n","export function drawEmoji(data, image) {\n    const { context, opacity } = data, half = 0.5, previousAlpha = context.globalAlpha;\n    if (!image) {\n        return;\n    }\n    const diameter = image.width, radius = diameter * half;\n    context.globalAlpha = opacity;\n    context.drawImage(image, -radius, -radius, diameter, diameter);\n    context.globalAlpha = previousAlpha;\n}\n","import { Circle, Vector, clamp, getDistances, } from \"@tsparticles/engine\";\nconst minFactor = 1, identity = 1, minRadius = 0;\nfunction processAttract(engine, container, position, attractRadius, area, queryCb) {\n    const attractOptions = container.actualOptions.interactivity.modes.attract;\n    if (!attractOptions) {\n        return;\n    }\n    const query = container.particles.quadTree.query(area, queryCb);\n    for (const particle of query) {\n        const { dx, dy, distance } = getDistances(particle.position, position), velocity = attractOptions.speed * attractOptions.factor, attractFactor = clamp(engine.getEasing(attractOptions.easing)(identity - distance / attractRadius) * velocity, minFactor, attractOptions.maxSpeed), normVec = Vector.create(!distance ? velocity : (dx / distance) * attractFactor, !distance ? velocity : (dy / distance) * attractFactor);\n        particle.position.subFrom(normVec);\n    }\n}\nexport function clickAttract(engine, container, enabledCb) {\n    if (!container.attract) {\n        container.attract = { particles: [] };\n    }\n    const { attract } = container;\n    if (!attract.finish) {\n        if (!attract.count) {\n            attract.count = 0;\n        }\n        attract.count++;\n        if (attract.count === container.particles.count) {\n            attract.finish = true;\n        }\n    }\n    if (attract.clicking) {\n        const mousePos = container.interactivity.mouse.clickPosition, attractRadius = container.retina.attractModeDistance;\n        if (!attractRadius || attractRadius < minRadius || !mousePos) {\n            return;\n        }\n        processAttract(engine, container, mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius), (p) => enabledCb(p));\n    }\n    else if (attract.clicking === false) {\n        attract.particles = [];\n    }\n}\nexport function hoverAttract(engine, container, enabledCb) {\n    const mousePos = container.interactivity.mouse.position, attractRadius = container.retina.attractModeDistance;\n    if (!attractRadius || attractRadius < minRadius || !mousePos) {\n        return;\n    }\n    processAttract(engine, container, mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius), (p) => enabledCb(p));\n}\n","import { EasingType, isNull } from \"@tsparticles/engine\";\nexport class Attract {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.easing = EasingType.easeOutQuad;\n        this.factor = 1;\n        this.maxSpeed = 50;\n        this.speed = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","import { ExternalInteractorBase, isInArray, millisecondsToSeconds, mouseMoveEvent, } from \"@tsparticles/engine\";\nimport { clickAttract, hoverAttract } from \"./Utils.js\";\nimport { Attract } from \"./Options/Classes/Attract.js\";\nconst attractMode = \"attract\";\nexport class Attractor extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._engine = engine;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, attract = options.interactivity.modes.attract;\n            if (!attract || mode !== attractMode) {\n                return;\n            }\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            container.attract.clicking = true;\n            container.attract.count = 0;\n            for (const particle of container.attract.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.attract.particles = [];\n            container.attract.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                if (!container.attract) {\n                    container.attract = { particles: [] };\n                }\n                container.attract.clicking = false;\n            }, attract.duration * millisecondsToSeconds);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, attract = container.actualOptions.interactivity.modes.attract;\n        if (!attract) {\n            return;\n        }\n        container.retina.attractModeDistance = attract.distance * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, { enable: hoverEnabled, mode: hoverMode } = events.onHover, { enable: clickEnabled, mode: clickMode } = events.onClick;\n        if (mouseMoveStatus && hoverEnabled && isInArray(attractMode, hoverMode)) {\n            hoverAttract(this._engine, this.container, p => this.isEnabled(p));\n        }\n        else if (clickEnabled && isInArray(attractMode, clickMode)) {\n            clickAttract(this._engine, this.container, p => this.isEnabled(p));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(attractMode, hoverMode) || isInArray(attractMode, clickMode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.attract) {\n            options.attract = new Attract();\n        }\n        for (const source of sources) {\n            options.attract.load(source?.attract);\n        }\n    }\n    reset() {\n    }\n}\n","import { Circle, DivType, Rectangle, Vector, calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, rectBounce, } from \"@tsparticles/engine\";\nconst squareExp = 2, half = 0.5, halfPI = Math.PI * half, double = 2, toleranceFactor = 10, minRadius = 0;\nfunction processBounce(container, position, radius, area, enabledCb) {\n    const query = container.particles.quadTree.query(area, enabledCb);\n    for (const particle of query) {\n        if (area instanceof Circle) {\n            circleBounce(circleBounceDataFromParticle(particle), {\n                position,\n                radius,\n                mass: radius ** squareExp * halfPI,\n                velocity: Vector.origin,\n                factor: Vector.origin,\n            });\n        }\n        else if (area instanceof Rectangle) {\n            rectBounce(particle, calculateBounds(position, radius));\n        }\n    }\n}\nfunction singleSelectorBounce(container, selector, div, bounceCb) {\n    const query = document.querySelectorAll(selector);\n    if (!query.length) {\n        return;\n    }\n    query.forEach(item => {\n        const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n            x: (elem.offsetLeft + elem.offsetWidth * half) * pxRatio,\n            y: (elem.offsetTop + elem.offsetHeight * half) * pxRatio,\n        }, radius = elem.offsetWidth * half * pxRatio, tolerance = toleranceFactor * pxRatio, area = div.type === DivType.circle\n            ? new Circle(pos.x, pos.y, radius + tolerance)\n            : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * double, elem.offsetHeight * pxRatio + tolerance * double);\n        bounceCb(pos, radius, area);\n    });\n}\nexport function divBounce(container, divs, bounceMode, enabledCb) {\n    divModeExecute(bounceMode, divs, (selector, div) => singleSelectorBounce(container, selector, div, (pos, radius, area) => processBounce(container, pos, radius, area, enabledCb)));\n}\nexport function mouseBounce(container, enabledCb) {\n    const pxRatio = container.retina.pixelRatio, tolerance = toleranceFactor * pxRatio, mousePos = container.interactivity.mouse.position, radius = container.retina.bounceModeDistance;\n    if (!radius || radius < minRadius || !mousePos) {\n        return;\n    }\n    processBounce(container, mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance), enabledCb);\n}\n","import { isNull } from \"@tsparticles/engine\";\nexport class Bounce {\n    constructor() {\n        this.distance = 200;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n    }\n}\n","import { ExternalInteractorBase, isDivModeEnabled, isInArray, mouseMoveEvent, } from \"@tsparticles/engine\";\nimport { divBounce, mouseBounce } from \"./Utils.js\";\nimport { Bounce } from \"./Options/Classes/Bounce.js\";\nconst bounceMode = \"bounce\";\nexport class Bouncer extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, bounce = container.actualOptions.interactivity.modes.bounce;\n        if (!bounce) {\n            return;\n        }\n        container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, events = options.interactivity.events, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(bounceMode, hoverMode)) {\n            mouseBounce(this.container, p => this.isEnabled(p));\n        }\n        else {\n            divBounce(this.container, divs, bounceMode, p => this.isEnabled(p));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv;\n        return ((!!mouse.position && events.onHover.enable && isInArray(bounceMode, events.onHover.mode)) ||\n            isDivModeEnabled(bounceMode, divs));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bounce) {\n            options.bounce = new Bounce();\n        }\n        for (const source of sources) {\n            options.bounce.load(source?.bounce);\n        }\n    }\n    reset() {\n    }\n}\n","import { OptionsColor, executeOnSingleOrMultiple, isArray, isNull, } from \"@tsparticles/engine\";\nexport class BubbleBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.mix = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.mix !== undefined) {\n            this.mix = data.mix;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.color !== undefined) {\n            const sourceColor = isArray(this.color) ? undefined : this.color;\n            this.color = executeOnSingleOrMultiple(data.color, color => {\n                return OptionsColor.create(sourceColor, color);\n            });\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nimport { BubbleBase } from \"./BubbleBase.js\";\nexport class BubbleDiv extends BubbleBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isNull, } from \"@tsparticles/engine\";\nimport { BubbleBase } from \"./BubbleBase.js\";\nimport { BubbleDiv } from \"./BubbleDiv.js\";\nexport class Bubble extends BubbleBase {\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, div => {\n            const tmp = new BubbleDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","export var ProcessBubbleType;\n(function (ProcessBubbleType) {\n    ProcessBubbleType[\"color\"] = \"color\";\n    ProcessBubbleType[\"opacity\"] = \"opacity\";\n    ProcessBubbleType[\"size\"] = \"size\";\n})(ProcessBubbleType || (ProcessBubbleType = {}));\n","import { clamp } from \"@tsparticles/engine\";\nexport function calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue >= optionsValue) {\n        const value = particleValue + (modeValue - optionsValue) * ratio;\n        return clamp(value, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const value = particleValue - (optionsValue - modeValue) * ratio;\n        return clamp(value, modeValue, particleValue);\n    }\n}\n","import { Circle, DivType, ExternalInteractorBase, Rectangle, colorMix, divMode, divModeExecute, getDistance, getRangeMax, isDivModeEnabled, isInArray, itemFromSingleOrMultiple, millisecondsToSeconds, mouseLeaveEvent, mouseMoveEvent, rangeColorToHsl, rgbToHsl, } from \"@tsparticles/engine\";\nimport { Bubble } from \"./Options/Classes/Bubble.js\";\nimport { ProcessBubbleType } from \"./Enums.js\";\nimport { calculateBubbleValue } from \"./Utils.js\";\nconst bubbleMode = \"bubble\", minDistance = 0, defaultClickTime = 0, double = 2, defaultOpacity = 1, ratioOffset = 1, defaultBubbleValue = 0, minRatio = 0, half = 0.5, defaultRatio = 1;\nexport class Bubbler extends ExternalInteractorBase {\n    constructor(container, engine) {\n        super(container);\n        this._clickBubble = () => {\n            const container = this.container, options = container.actualOptions, mouseClickPos = container.interactivity.mouse.clickPosition, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || !mouseClickPos) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            const distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < minDistance) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mouseClickPos, distance, p => this.isEnabled(p)), { bubble } = container;\n            for (const particle of query) {\n                if (!bubble.clicking) {\n                    continue;\n                }\n                particle.bubble.inRange = !bubble.durationEnd;\n                const pos = particle.getPosition(), distMouse = getDistance(pos, mouseClickPos), timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime ?? defaultClickTime)) /\n                    millisecondsToSeconds;\n                if (timeSpent > bubbleOptions.duration) {\n                    bubble.durationEnd = true;\n                }\n                if (timeSpent > bubbleOptions.duration * double) {\n                    bubble.clicking = false;\n                    bubble.durationEnd = false;\n                }\n                const sizeData = {\n                    bubbleObj: {\n                        optValue: container.retina.bubbleModeSize,\n                        value: particle.bubble.radius,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n                        value: particle.size.value,\n                    },\n                    type: ProcessBubbleType.size,\n                };\n                this._process(particle, distMouse, timeSpent, sizeData);\n                const opacityData = {\n                    bubbleObj: {\n                        optValue: bubbleOptions.opacity,\n                        value: particle.bubble.opacity,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.opacity.value),\n                        value: particle.opacity?.value ?? defaultOpacity,\n                    },\n                    type: ProcessBubbleType.opacity,\n                };\n                this._process(particle, distMouse, timeSpent, opacityData);\n                if (!bubble.durationEnd && distMouse <= distance) {\n                    this._hoverBubbleColor(particle, distMouse);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n        };\n        this._hoverBubble = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < minDistance || !mousePos) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mousePos, distance, p => this.isEnabled(p));\n            for (const particle of query) {\n                particle.bubble.inRange = true;\n                const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos), ratio = ratioOffset - pointDistance / distance;\n                if (pointDistance <= distance) {\n                    if (ratio >= minRatio && container.interactivity.status === mouseMoveEvent) {\n                        this._hoverBubbleSize(particle, ratio);\n                        this._hoverBubbleOpacity(particle, ratio);\n                        this._hoverBubbleColor(particle, ratio);\n                    }\n                }\n                else {\n                    this.reset(particle);\n                }\n                if (container.interactivity.status === mouseLeaveEvent) {\n                    this.reset(particle);\n                }\n            }\n        };\n        this._hoverBubbleColor = (particle, ratio, divBubble) => {\n            const options = this.container.actualOptions, bubbleOptions = divBubble ?? options.interactivity.modes.bubble;\n            if (!bubbleOptions) {\n                return;\n            }\n            if (!particle.bubble.finalColor) {\n                const modeColor = bubbleOptions.color;\n                if (!modeColor) {\n                    return;\n                }\n                const bubbleColor = itemFromSingleOrMultiple(modeColor);\n                particle.bubble.finalColor = rangeColorToHsl(this._engine, bubbleColor);\n            }\n            if (!particle.bubble.finalColor) {\n                return;\n            }\n            if (bubbleOptions.mix) {\n                particle.bubble.color = undefined;\n                const pColor = particle.getFillColor();\n                particle.bubble.color = pColor\n                    ? rgbToHsl(colorMix(pColor, particle.bubble.finalColor, ratioOffset - ratio, ratio))\n                    : particle.bubble.finalColor;\n            }\n            else {\n                particle.bubble.color = particle.bubble.finalColor;\n            }\n        };\n        this._hoverBubbleOpacity = (particle, ratio, divBubble) => {\n            const container = this.container, options = container.actualOptions, modeOpacity = divBubble?.opacity ?? options.interactivity.modes.bubble?.opacity;\n            if (!modeOpacity) {\n                return;\n            }\n            const optOpacity = particle.options.opacity.value, pOpacity = particle.opacity?.value ?? defaultOpacity, opacity = calculateBubbleValue(pOpacity, modeOpacity, getRangeMax(optOpacity), ratio);\n            if (opacity !== undefined) {\n                particle.bubble.opacity = opacity;\n            }\n        };\n        this._hoverBubbleSize = (particle, ratio, divBubble) => {\n            const container = this.container, modeSize = divBubble?.size ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n            if (modeSize === undefined) {\n                return;\n            }\n            const optSize = getRangeMax(particle.options.size.value) * container.retina.pixelRatio, pSize = particle.size.value, size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n            if (size !== undefined) {\n                particle.bubble.radius = size;\n            }\n        };\n        this._process = (particle, distMouse, timeSpent, data) => {\n            const container = this.container, bubbleParam = data.bubbleObj.optValue, options = container.actualOptions, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || bubbleParam === undefined) {\n                return;\n            }\n            const bubbleDuration = bubbleOptions.duration, bubbleDistance = container.retina.bubbleModeDistance, particlesParam = data.particlesObj.optValue, pObjBubble = data.bubbleObj.value, pObj = data.particlesObj.value ?? defaultBubbleValue, type = data.type;\n            if (!bubbleDistance || bubbleDistance < minDistance || bubbleParam === particlesParam) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            if (container.bubble.durationEnd) {\n                if (pObjBubble) {\n                    if (type === ProcessBubbleType.size) {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === ProcessBubbleType.opacity) {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n            else {\n                if (distMouse <= bubbleDistance) {\n                    const obj = pObjBubble ?? pObj;\n                    if (obj !== bubbleParam) {\n                        const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                        if (type === ProcessBubbleType.size) {\n                            particle.bubble.radius = value;\n                        }\n                        if (type === ProcessBubbleType.opacity) {\n                            particle.bubble.opacity = value;\n                        }\n                    }\n                }\n                else {\n                    if (type === ProcessBubbleType.size) {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === ProcessBubbleType.opacity) {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n        };\n        this._singleSelectorHover = (delta, selector, div) => {\n            const container = this.container, selectors = document.querySelectorAll(selector), bubble = container.actualOptions.interactivity.modes.bubble;\n            if (!bubble || !selectors.length) {\n                return;\n            }\n            selectors.forEach(item => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth * half) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight * half) * pxRatio,\n                }, repulseRadius = elem.offsetWidth * half * pxRatio, area = div.type === DivType.circle\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), query = container.particles.quadTree.query(area, p => this.isEnabled(p));\n                for (const particle of query) {\n                    if (!area.contains(particle.getPosition())) {\n                        continue;\n                    }\n                    particle.bubble.inRange = true;\n                    const divs = bubble.divs, divBubble = divMode(divs, elem);\n                    if (!particle.bubble.div || particle.bubble.div !== elem) {\n                        this.clear(particle, delta, true);\n                        particle.bubble.div = elem;\n                    }\n                    this._hoverBubbleSize(particle, defaultRatio, divBubble);\n                    this._hoverBubbleOpacity(particle, defaultRatio, divBubble);\n                    this._hoverBubbleColor(particle, defaultRatio, divBubble);\n                }\n            });\n        };\n        this._engine = engine;\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        this.handleClickMode = (mode) => {\n            if (mode !== bubbleMode) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            container.bubble.clicking = true;\n        };\n    }\n    clear(particle, delta, force) {\n        if (particle.bubble.inRange && !force) {\n            return;\n        }\n        delete particle.bubble.div;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n    }\n    init() {\n        const container = this.container, bubble = container.actualOptions.interactivity.modes.bubble;\n        if (!bubble) {\n            return;\n        }\n        container.retina.bubbleModeDistance = bubble.distance * container.retina.pixelRatio;\n        if (bubble.size !== undefined) {\n            container.retina.bubbleModeSize = bubble.size * container.retina.pixelRatio;\n        }\n    }\n    interact(delta) {\n        const options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n        if (hoverEnabled && isInArray(bubbleMode, hoverMode)) {\n            this._hoverBubble();\n        }\n        else if (clickEnabled && isInArray(bubbleMode, clickMode)) {\n            this._clickBubble();\n        }\n        else {\n            divModeExecute(bubbleMode, divs, (selector, div) => this._singleSelectorHover(delta, selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, { onClick, onDiv, onHover } = events, divBubble = isDivModeEnabled(bubbleMode, onDiv);\n        if (!(divBubble || (onHover.enable && !!mouse.position) || (onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        return isInArray(bubbleMode, onHover.mode) || isInArray(bubbleMode, onClick.mode) || divBubble;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bubble) {\n            options.bubble = new Bubble();\n        }\n        for (const source of sources) {\n            options.bubble.load(source?.bubble);\n        }\n    }\n    reset(particle) {\n        particle.bubble.inRange = false;\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nexport class ConnectLinks {\n    constructor() {\n        this.opacity = 0.5;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nimport { ConnectLinks } from \"./ConnectLinks.js\";\nexport class Connect {\n    constructor() {\n        this.distance = 80;\n        this.links = new ConnectLinks();\n        this.radius = 60;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links);\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { clamp, colorMix, drawLine, getStyleFromHsl, getStyleFromRgb, } from \"@tsparticles/engine\";\nconst gradientMin = 0, gradientMax = 1, defaultLinksWidth = 0;\nexport function gradient(context, p1, p2, opacity) {\n    const gradStop = Math.floor(p2.getRadius() / p1.getRadius()), color1 = p1.getFillColor(), color2 = p2.getFillColor();\n    if (!color1 || !color2) {\n        return;\n    }\n    const sourcePos = p1.getPosition(), destPos = p2.getPosition(), midRgb = colorMix(color1, color2, p1.getRadius(), p2.getRadius()), grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n    grad.addColorStop(gradientMin, getStyleFromHsl(color1, opacity));\n    grad.addColorStop(clamp(gradStop, gradientMin, gradientMax), getStyleFromRgb(midRgb, opacity));\n    grad.addColorStop(gradientMax, getStyleFromHsl(color2, opacity));\n    return grad;\n}\nexport function drawConnectLine(context, width, lineStyle, begin, end) {\n    drawLine(context, begin, end);\n    context.lineWidth = width;\n    context.strokeStyle = lineStyle;\n    context.stroke();\n}\nexport function lineStyle(container, ctx, p1, p2) {\n    const options = container.actualOptions, connectOptions = options.interactivity.modes.connect;\n    if (!connectOptions) {\n        return;\n    }\n    return gradient(ctx, p1, p2, connectOptions.links.opacity);\n}\nexport function drawConnection(container, p1, p2) {\n    container.canvas.draw(ctx => {\n        const ls = lineStyle(container, ctx, p1, p2);\n        if (!ls) {\n            return;\n        }\n        const pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        drawConnectLine(ctx, p1.retina.linksWidth ?? defaultLinksWidth, ls, pos1, pos2);\n    });\n}\n","import { ExternalInteractorBase, isInArray, } from \"@tsparticles/engine\";\nimport { Connect } from \"./Options/Classes/Connect.js\";\nimport { drawConnection } from \"./Utils.js\";\nconst connectMode = \"connect\", minDistance = 0;\nexport class Connector extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, connect = container.actualOptions.interactivity.modes.connect;\n        if (!connect) {\n            return;\n        }\n        container.retina.connectModeDistance = connect.distance * container.retina.pixelRatio;\n        container.retina.connectModeRadius = connect.radius * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"pointermove\") {\n            const mousePos = container.interactivity.mouse.position, { connectModeDistance, connectModeRadius } = container.retina;\n            if (!connectModeDistance ||\n                connectModeDistance < minDistance ||\n                !connectModeRadius ||\n                connectModeRadius < minDistance ||\n                !mousePos) {\n                return;\n            }\n            const distance = Math.abs(connectModeRadius), query = container.particles.quadTree.queryCircle(mousePos, distance, p => this.isEnabled(p));\n            query.forEach((p1, i) => {\n                const pos1 = p1.getPosition(), indexOffset = 1;\n                for (const p2 of query.slice(i + indexOffset)) {\n                    const pos2 = p2.getPosition(), distMax = Math.abs(connectModeDistance), xDiff = Math.abs(pos1.x - pos2.x), yDiff = Math.abs(pos1.y - pos2.y);\n                    if (xDiff < distMax && yDiff < distMax) {\n                        drawConnection(container, p1, p2);\n                    }\n                }\n            });\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        return isInArray(connectMode, events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.connect) {\n            options.connect = new Connect();\n        }\n        for (const source of sources) {\n            options.connect.load(source?.connect);\n        }\n    }\n    reset() {\n    }\n}\n","import { OptionsColor, isNull } from \"@tsparticles/engine\";\nexport class GrabLinks {\n    constructor() {\n        this.blink = false;\n        this.consent = false;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nimport { GrabLinks } from \"./GrabLinks.js\";\nexport class Grab {\n    constructor() {\n        this.distance = 100;\n        this.links = new GrabLinks();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links);\n    }\n}\n","import { drawLine, getStyleFromRgb } from \"@tsparticles/engine\";\nconst defaultWidth = 0;\nexport function drawGrabLine(context, width, begin, end, colorLine, opacity) {\n    drawLine(context, begin, end);\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    context.lineWidth = width;\n    context.stroke();\n}\nexport function drawGrab(container, particle, lineColor, opacity, mousePos) {\n    container.canvas.draw(ctx => {\n        const beginPos = particle.getPosition();\n        drawGrabLine(ctx, particle.retina.linksWidth ?? defaultWidth, beginPos, mousePos, lineColor, opacity);\n    });\n}\n","import { ExternalInteractorBase, getDistance, getLinkColor, getLinkRandomColor, isInArray, mouseMoveEvent, } from \"@tsparticles/engine\";\nimport { Grab } from \"./Options/Classes/Grab.js\";\nimport { drawGrab } from \"./Utils.js\";\nconst grabMode = \"grab\", minDistance = 0, minOpacity = 0;\nexport class Grabber extends ExternalInteractorBase {\n    constructor(container, engine) {\n        super(container);\n        this._engine = engine;\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, grab = container.actualOptions.interactivity.modes.grab;\n        if (!grab) {\n            return;\n        }\n        container.retina.grabModeDistance = grab.distance * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, interactivity = options.interactivity;\n        if (!interactivity.modes.grab ||\n            !interactivity.events.onHover.enable ||\n            container.interactivity.status !== mouseMoveEvent) {\n            return;\n        }\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const distance = container.retina.grabModeDistance;\n        if (!distance || distance < minDistance) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, p => this.isEnabled(p));\n        for (const particle of query) {\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos);\n            if (pointDistance > distance) {\n                continue;\n            }\n            const grabLineOptions = interactivity.modes.grab.links, lineOpacity = grabLineOptions.opacity, opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n            if (opacityLine <= minOpacity) {\n                continue;\n            }\n            const optColor = grabLineOptions.color ?? particle.options.links?.color;\n            if (!container.particles.grabLineColor && optColor) {\n                const linksOptions = interactivity.modes.grab.links;\n                container.particles.grabLineColor = getLinkRandomColor(this._engine, optColor, linksOptions.blink, linksOptions.consent);\n            }\n            const colorLine = getLinkColor(particle, undefined, container.particles.grabLineColor);\n            if (!colorLine) {\n                continue;\n            }\n            drawGrab(container, particle, colorLine, opacityLine, mousePos);\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(grabMode, events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.grab) {\n            options.grab = new Grab();\n        }\n        for (const source of sources) {\n            options.grab.load(source?.grab);\n        }\n    }\n    reset() {\n    }\n}\n","import { ExternalInteractorBase } from \"@tsparticles/engine\";\nconst pauseMode = \"pause\";\nexport class Pauser extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== pauseMode) {\n                return;\n            }\n            const container = this.container;\n            if (container.animationStatus) {\n                container.pause();\n            }\n            else {\n                container.play();\n            }\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    reset() {\n    }\n}\n","import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class Push {\n    constructor() {\n        this.default = true;\n        this.groups = [];\n        this.quantity = 4;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        if (data.groups !== undefined) {\n            this.groups = data.groups.map(t => t);\n        }\n        if (!this.groups.length) {\n            this.default = true;\n        }\n        const quantity = data.quantity;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, itemFromArray, } from \"@tsparticles/engine\";\nimport { Push } from \"./Options/Classes/Push.js\";\nconst pushMode = \"push\", minQuantity = 0;\nexport class Pusher extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== pushMode) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, pushOptions = options.interactivity.modes.push;\n            if (!pushOptions) {\n                return;\n            }\n            const quantity = getRangeValue(pushOptions.quantity);\n            if (quantity <= minQuantity) {\n                return;\n            }\n            const group = itemFromArray([undefined, ...pushOptions.groups]), groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;\n            void container.particles.push(quantity, container.interactivity.mouse, groupOptions, group);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.push) {\n            options.push = new Push();\n        }\n        for (const source of sources) {\n            options.push.load(source?.push);\n        }\n    }\n    reset() {\n    }\n}\n","import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class Remove {\n    constructor() {\n        this.quantity = 2;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        const quantity = data.quantity;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, } from \"@tsparticles/engine\";\nimport { Remove } from \"./Options/Classes/Remove.js\";\nconst removeMode = \"remove\";\nexport class Remover extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            const container = this.container, options = container.actualOptions;\n            if (!options.interactivity.modes.remove || mode !== removeMode) {\n                return;\n            }\n            const removeNb = getRangeValue(options.interactivity.modes.remove.quantity);\n            container.particles.removeQuantity(removeNb);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.remove) {\n            options.remove = new Remove();\n        }\n        for (const source of sources) {\n            options.remove.load(source?.remove);\n        }\n    }\n    reset() {\n    }\n}\n","import { EasingType, isNull } from \"@tsparticles/engine\";\nexport class RepulseBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.factor = 100;\n        this.speed = 1;\n        this.maxSpeed = 50;\n        this.easing = EasingType.easeOutQuad;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nimport { RepulseBase } from \"./RepulseBase.js\";\nexport class RepulseDiv extends RepulseBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isNull, } from \"@tsparticles/engine\";\nimport { RepulseBase } from \"./RepulseBase.js\";\nimport { RepulseDiv } from \"./RepulseDiv.js\";\nexport class Repulse extends RepulseBase {\n    load(data) {\n        super.load(data);\n        if (isNull(data)) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, div => {\n            const tmp = new RepulseDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { Circle, DivType, ExternalInteractorBase, Rectangle, Vector, clamp, divMode, divModeExecute, getDistances, isDivModeEnabled, isInArray, millisecondsToSeconds, mouseMoveEvent, } from \"@tsparticles/engine\";\nimport { Repulse } from \"./Options/Classes/Repulse.js\";\nconst repulseMode = \"repulse\", minDistance = 0, repulseRadiusFactor = 6, repulseRadiusPower = 3, squarePower = 2, minRadius = 0, minSpeed = 0, easingOffset = 1, half = 0.5;\nexport class Repulser extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._clickRepulse = () => {\n            const container = this.container, repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            const repulse = container.repulse ?? { particles: [] };\n            if (!repulse.finish) {\n                if (!repulse.count) {\n                    repulse.count = 0;\n                }\n                repulse.count++;\n                if (repulse.count === container.particles.count) {\n                    repulse.finish = true;\n                }\n            }\n            if (repulse.clicking) {\n                const repulseDistance = container.retina.repulseModeDistance;\n                if (!repulseDistance || repulseDistance < minDistance) {\n                    return;\n                }\n                const repulseRadius = Math.pow(repulseDistance / repulseRadiusFactor, repulseRadiusPower), mouseClickPos = container.interactivity.mouse.clickPosition;\n                if (mouseClickPos === undefined) {\n                    return;\n                }\n                const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range, p => this.isEnabled(p));\n                for (const particle of query) {\n                    const { dx, dy, distance } = getDistances(mouseClickPos, particle.position), d = distance ** squarePower, velocity = repulseOptions.speed, force = (-repulseRadius * velocity) / d;\n                    if (d <= repulseRadius) {\n                        repulse.particles.push(particle);\n                        const vect = Vector.create(dx, dy);\n                        vect.length = force;\n                        particle.velocity.setTo(vect);\n                    }\n                }\n            }\n            else if (repulse.clicking === false) {\n                for (const particle of repulse.particles) {\n                    particle.velocity.setTo(particle.initialVelocity);\n                }\n                repulse.particles = [];\n            }\n        };\n        this._hoverRepulse = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, repulseRadius = container.retina.repulseModeDistance;\n            if (!repulseRadius || repulseRadius < minRadius || !mousePos) {\n                return;\n            }\n            this._processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n        };\n        this._processRepulse = (position, repulseRadius, area, divRepulse) => {\n            const container = this.container, query = container.particles.quadTree.query(area, p => this.isEnabled(p)), repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            const { easing, speed, factor, maxSpeed } = repulseOptions, easingFunc = this._engine.getEasing(easing), velocity = (divRepulse?.speed ?? speed) * factor;\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(particle.position, position), repulseFactor = clamp(easingFunc(easingOffset - distance / repulseRadius) * velocity, minSpeed, maxSpeed), normVec = Vector.create(!distance ? velocity : (dx / distance) * repulseFactor, !distance ? velocity : (dy / distance) * repulseFactor);\n                particle.position.addTo(normVec);\n            }\n        };\n        this._singleSelectorRepulse = (selector, div) => {\n            const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n            if (!repulse) {\n                return;\n            }\n            const query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach(item => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth * half) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight * half) * pxRatio,\n                }, repulseRadius = elem.offsetWidth * half * pxRatio, area = div.type === DivType.circle\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = repulse.divs, divRepulse = divMode(divs, elem);\n                this._processRepulse(pos, repulseRadius, area, divRepulse);\n            });\n        };\n        this._engine = engine;\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, repulseOpts = options.interactivity.modes.repulse;\n            if (!repulseOpts || mode !== repulseMode) {\n                return;\n            }\n            if (!container.repulse) {\n                container.repulse = { particles: [] };\n            }\n            const repulse = container.repulse;\n            repulse.clicking = true;\n            repulse.count = 0;\n            for (const particle of container.repulse.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            repulse.particles = [];\n            repulse.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                repulse.clicking = false;\n            }, repulseOpts.duration * millisecondsToSeconds);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        container.retina.repulseModeDistance = repulse.distance * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hover = events.onHover, hoverEnabled = hover.enable, hoverMode = hover.mode, click = events.onClick, clickEnabled = click.enable, clickMode = click.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(repulseMode, hoverMode)) {\n            this._hoverRepulse();\n        }\n        else if (clickEnabled && isInArray(repulseMode, clickMode)) {\n            this._clickRepulse();\n        }\n        else {\n            divModeExecute(repulseMode, divs, (selector, div) => this._singleSelectorRepulse(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv, hover = events.onHover, click = events.onClick, divRepulse = isDivModeEnabled(repulseMode, divs);\n        if (!(divRepulse || (hover.enable && !!mouse.position) || (click.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = hover.mode, clickMode = click.mode;\n        return isInArray(repulseMode, hoverMode) || isInArray(repulseMode, clickMode) || divRepulse;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.repulse) {\n            options.repulse = new Repulse();\n        }\n        for (const source of sources) {\n            options.repulse.load(source?.repulse);\n        }\n    }\n    reset() {\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nexport class Slow {\n    constructor() {\n        this.factor = 3;\n        this.radius = 200;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ExternalInteractorBase, getDistance, isInArray, } from \"@tsparticles/engine\";\nimport { Slow } from \"./Options/Classes/Slow.js\";\nconst slowMode = \"slow\", minRadius = 0;\nexport class Slower extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear(particle, delta, force) {\n        if (particle.slow.inRange && !force) {\n            return;\n        }\n        particle.slow.factor = 1;\n    }\n    init() {\n        const container = this.container, slow = container.actualOptions.interactivity.modes.slow;\n        if (!slow) {\n            return;\n        }\n        container.retina.slowModeRadius = slow.radius * container.retina.pixelRatio;\n    }\n    interact() {\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(slowMode, events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.slow) {\n            options.slow = new Slow();\n        }\n        for (const source of sources) {\n            options.slow.load(source?.slow);\n        }\n    }\n    reset(particle) {\n        particle.slow.inRange = false;\n        const container = this.container, options = container.actualOptions, mousePos = container.interactivity.mouse.position, radius = container.retina.slowModeRadius, slowOptions = options.interactivity.modes.slow;\n        if (!slowOptions || !radius || radius < minRadius || !mousePos) {\n            return;\n        }\n        const particlePos = particle.getPosition(), dist = getDistance(mousePos, particlePos), proximityFactor = dist / radius, slowFactor = slowOptions.factor, { slow } = particle;\n        if (dist > radius) {\n            return;\n        }\n        slow.inRange = true;\n        slow.factor = proximityFactor / slowFactor;\n    }\n}\n","import { errorPrefix, getLogger, getStyleFromHsl } from \"@tsparticles/engine\";\nconst stringStart = 0, defaultOpacity = 1;\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = getStyleFromHsl(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(stringStart, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        image.element = img;\n        img.addEventListener(\"load\", () => {\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.element = undefined;\n            image.error = true;\n            image.loading = false;\n            getLogger().error(`${errorPrefix} loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexport async function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        getLogger().error(`${errorPrefix} Image not found`);\n        image.error = true;\n    }\n    else {\n        image.svgData = await response.text();\n    }\n    image.loading = false;\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n    const svgColoredData = replaceColorSvg(image, color, particle.opacity?.value ?? defaultOpacity), imageRes = {\n        color,\n        gif: imageData.gif,\n        data: {\n            ...image,\n            svgData: svgColoredData,\n        },\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: imageData.replaceColor,\n        source: imageData.src,\n    };\n    return new Promise(resolve => {\n        const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();\n        img.addEventListener(\"load\", () => {\n            imageRes.loaded = true;\n            imageRes.element = img;\n            resolve(imageRes);\n            domUrl.revokeObjectURL(url);\n        });\n        const errorHandler = async () => {\n            domUrl.revokeObjectURL(url);\n            const img2 = {\n                ...image,\n                error: false,\n                loading: true,\n            };\n            await loadImage(img2);\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n        };\n        img.addEventListener(\"error\", () => void errorHandler());\n        img.src = url;\n    });\n}\n","export const InterlaceOffsets = [0, 4, 2, 1];\nexport const InterlaceSteps = [8, 8, 4, 2];\n","export class ByteStream {\n    constructor(bytes) {\n        this.pos = 0;\n        this.data = new Uint8ClampedArray(bytes);\n    }\n    getString(count) {\n        const slice = this.data.slice(this.pos, this.pos + count);\n        this.pos += slice.length;\n        return slice.reduce((acc, curr) => acc + String.fromCharCode(curr), \"\");\n    }\n    nextByte() {\n        return this.data[this.pos++];\n    }\n    nextTwoBytes() {\n        const increment = 2, previous = 1, shift = 8;\n        this.pos += increment;\n        return this.data[this.pos - increment] + (this.data[this.pos - previous] << shift);\n    }\n    readSubBlocks() {\n        let blockString = \"\", size = 0;\n        const minCount = 0, emptySize = 0;\n        do {\n            size = this.data[this.pos++];\n            for (let count = size; --count >= minCount; blockString += String.fromCharCode(this.data[this.pos++])) {\n            }\n        } while (size !== emptySize);\n        return blockString;\n    }\n    readSubBlocksBin() {\n        let size = this.data[this.pos], len = 0;\n        const emptySize = 0, increment = 1;\n        for (let offset = 0; size !== emptySize; offset += size + increment, size = this.data[this.pos + offset]) {\n            len += size;\n        }\n        const blockData = new Uint8Array(len);\n        size = this.data[this.pos++];\n        for (let i = 0; size !== emptySize; size = this.data[this.pos++]) {\n            for (let count = size; --count >= emptySize; blockData[i++] = this.data[this.pos++]) {\n            }\n        }\n        return blockData;\n    }\n    skipSubBlocks() {\n        for (const increment = 1, noData = 0; this.data[this.pos] !== noData; this.pos += this.data[this.pos] + increment) {\n        }\n        this.pos++;\n    }\n}\n","export var DisposalMethod;\n(function (DisposalMethod) {\n    DisposalMethod[DisposalMethod[\"Replace\"] = 0] = \"Replace\";\n    DisposalMethod[DisposalMethod[\"Combine\"] = 1] = \"Combine\";\n    DisposalMethod[DisposalMethod[\"RestoreBackground\"] = 2] = \"RestoreBackground\";\n    DisposalMethod[DisposalMethod[\"RestorePrevious\"] = 3] = \"RestorePrevious\";\n    DisposalMethod[DisposalMethod[\"UndefinedA\"] = 4] = \"UndefinedA\";\n    DisposalMethod[DisposalMethod[\"UndefinedB\"] = 5] = \"UndefinedB\";\n    DisposalMethod[DisposalMethod[\"UndefinedC\"] = 6] = \"UndefinedC\";\n    DisposalMethod[DisposalMethod[\"UndefinedD\"] = 7] = \"UndefinedD\";\n})(DisposalMethod || (DisposalMethod = {}));\n","export var GIFDataHeaders;\n(function (GIFDataHeaders) {\n    GIFDataHeaders[GIFDataHeaders[\"Extension\"] = 33] = \"Extension\";\n    GIFDataHeaders[GIFDataHeaders[\"ApplicationExtension\"] = 255] = \"ApplicationExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"GraphicsControlExtension\"] = 249] = \"GraphicsControlExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"PlainTextExtension\"] = 1] = \"PlainTextExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"CommentExtension\"] = 254] = \"CommentExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"Image\"] = 44] = \"Image\";\n    GIFDataHeaders[GIFDataHeaders[\"EndOfFile\"] = 59] = \"EndOfFile\";\n})(GIFDataHeaders || (GIFDataHeaders = {}));\n","import { loadImage } from \"../Utils.js\";\nimport { InterlaceOffsets, InterlaceSteps } from \"./Constants.js\";\nimport { ByteStream } from \"./ByteStream.js\";\nimport { DisposalMethod } from \"./Enums/DisposalMethod.js\";\nimport { GIFDataHeaders } from \"./Types/GIFDataHeaders.js\";\nconst origin = {\n    x: 0,\n    y: 0,\n}, defaultFrame = 0, half = 0.5, initialTime = 0, firstIndex = 0, defaultLoopCount = 0;\nfunction parseColorTable(byteStream, count) {\n    const colors = [];\n    for (let i = 0; i < count; i++) {\n        colors.push({\n            r: byteStream.data[byteStream.pos],\n            g: byteStream.data[byteStream.pos + 1],\n            b: byteStream.data[byteStream.pos + 2],\n        });\n        byteStream.pos += 3;\n    }\n    return colors;\n}\nfunction parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex) {\n    switch (byteStream.nextByte()) {\n        case GIFDataHeaders.GraphicsControlExtension: {\n            const frame = gif.frames[getFrameIndex(false)];\n            byteStream.pos++;\n            const packedByte = byteStream.nextByte();\n            frame.GCreserved = (packedByte & 0xe0) >>> 5;\n            frame.disposalMethod = (packedByte & 0x1c) >>> 2;\n            frame.userInputDelayFlag = (packedByte & 2) === 2;\n            const transparencyFlag = (packedByte & 1) === 1;\n            frame.delayTime = byteStream.nextTwoBytes() * 0xa;\n            const transparencyIndex = byteStream.nextByte();\n            if (transparencyFlag) {\n                getTransparencyIndex(transparencyIndex);\n            }\n            byteStream.pos++;\n            break;\n        }\n        case GIFDataHeaders.ApplicationExtension: {\n            byteStream.pos++;\n            const applicationExtension = {\n                identifier: byteStream.getString(8),\n                authenticationCode: byteStream.getString(3),\n                data: byteStream.readSubBlocksBin(),\n            };\n            gif.applicationExtensions.push(applicationExtension);\n            break;\n        }\n        case GIFDataHeaders.CommentExtension: {\n            gif.comments.push([getFrameIndex(false), byteStream.readSubBlocks()]);\n            break;\n        }\n        case GIFDataHeaders.PlainTextExtension: {\n            if (gif.globalColorTable.length === 0) {\n                throw new EvalError(\"plain text extension without global color table\");\n            }\n            byteStream.pos++;\n            gif.frames[getFrameIndex(false)].plainTextData = {\n                left: byteStream.nextTwoBytes(),\n                top: byteStream.nextTwoBytes(),\n                width: byteStream.nextTwoBytes(),\n                height: byteStream.nextTwoBytes(),\n                charSize: {\n                    width: byteStream.nextTwoBytes(),\n                    height: byteStream.nextTwoBytes(),\n                },\n                foregroundColor: byteStream.nextByte(),\n                backgroundColor: byteStream.nextByte(),\n                text: byteStream.readSubBlocks(),\n            };\n            break;\n        }\n        default:\n            byteStream.skipSubBlocks();\n            break;\n    }\n}\nasync function parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    const frame = gif.frames[getFrameIndex(true)];\n    frame.left = byteStream.nextTwoBytes();\n    frame.top = byteStream.nextTwoBytes();\n    frame.width = byteStream.nextTwoBytes();\n    frame.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), localColorTableFlag = (packedByte & 0x80) === 0x80, interlacedFlag = (packedByte & 0x40) === 0x40;\n    frame.sortFlag = (packedByte & 0x20) === 0x20;\n    frame.reserved = (packedByte & 0x18) >>> 3;\n    const localColorCount = 1 << ((packedByte & 7) + 1);\n    if (localColorTableFlag) {\n        frame.localColorTable = parseColorTable(byteStream, localColorCount);\n    }\n    const getColor = (index) => {\n        const { r, g, b } = (localColorTableFlag ? frame.localColorTable : gif.globalColorTable)[index];\n        if (index !== getTransparencyIndex(null)) {\n            return { r, g, b, a: 255 };\n        }\n        return { r, g, b, a: avgAlpha ? ~~((r + g + b) / 3) : 0 };\n    };\n    const image = (() => {\n        try {\n            return new ImageData(frame.width, frame.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (image == null) {\n        throw new EvalError(\"GIF frame size is to large\");\n    }\n    const minCodeSize = byteStream.nextByte(), imageData = byteStream.readSubBlocksBin(), clearCode = 1 << minCodeSize;\n    const readBits = (pos, len) => {\n        const bytePos = pos >>> 3, bitPos = pos & 7;\n        return (((imageData[bytePos] + (imageData[bytePos + 1] << 8) + (imageData[bytePos + 2] << 16)) &\n            (((1 << len) - 1) << bitPos)) >>>\n            bitPos);\n    };\n    if (interlacedFlag) {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pass = 0; pass < 4; pass++) {\n            if (InterlaceOffsets[pass] < frame.height) {\n                let pixelPos = 0, lineIndex = 0, exit = false;\n                while (!exit) {\n                    const last = code;\n                    code = readBits(pos, size);\n                    pos += size + 1;\n                    if (code === clearCode) {\n                        size = minCodeSize + 1;\n                        dic.length = clearCode + 2;\n                        for (let i = 0; i < dic.length; i++) {\n                            dic[i] = i < clearCode ? [i] : [];\n                        }\n                    }\n                    else {\n                        if (code >= dic.length) {\n                            dic.push(dic[last].concat(dic[last][0]));\n                        }\n                        else if (last !== clearCode) {\n                            dic.push(dic[last].concat(dic[code][0]));\n                        }\n                        for (const item of dic[code]) {\n                            const { r, g, b, a } = getColor(item);\n                            image.data.set([r, g, b, a], InterlaceOffsets[pass] * frame.width +\n                                InterlaceSteps[pass] * lineIndex +\n                                (pixelPos % (frame.width * 4)));\n                            pixelPos += 4;\n                        }\n                        if (dic.length === 1 << size && size < 0xc) {\n                            size++;\n                        }\n                    }\n                    if (pixelPos === frame.width * 4 * (lineIndex + 1)) {\n                        lineIndex++;\n                        if (InterlaceOffsets[pass] + InterlaceSteps[pass] * lineIndex >= frame.height) {\n                            exit = true;\n                        }\n                    }\n                }\n            }\n            progressCallback?.(byteStream.pos / (byteStream.data.length - 1), getFrameIndex(false) + 1, image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n    }\n    else {\n        let code = 0, size = minCodeSize + 1, pos = 0, pixelPos = -4, exit = false;\n        const dic = [[0]];\n        while (!exit) {\n            const last = code;\n            code = readBits(pos, size);\n            pos += size;\n            if (code === clearCode) {\n                size = minCodeSize + 1;\n                dic.length = clearCode + 2;\n                for (let i = 0; i < dic.length; i++) {\n                    dic[i] = i < clearCode ? [i] : [];\n                }\n            }\n            else {\n                if (code === clearCode + 1) {\n                    exit = true;\n                    break;\n                }\n                if (code >= dic.length) {\n                    dic.push(dic[last].concat(dic[last][0]));\n                }\n                else if (last !== clearCode) {\n                    dic.push(dic[last].concat(dic[code][0]));\n                }\n                for (const item of dic[code]) {\n                    const { r, g, b, a } = getColor(item);\n                    image.data.set([r, g, b, a], (pixelPos += 4));\n                }\n                if (dic.length >= 1 << size && size < 0xc) {\n                    size++;\n                }\n            }\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n        progressCallback?.((byteStream.pos + 1) / byteStream.data.length, getFrameIndex(false) + 1, frame.image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n    }\n}\nasync function parseBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    switch (byteStream.nextByte()) {\n        case GIFDataHeaders.EndOfFile:\n            return true;\n        case GIFDataHeaders.Image:\n            await parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback);\n            break;\n        case GIFDataHeaders.Extension:\n            parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex);\n            break;\n        default:\n            throw new EvalError(\"undefined block found\");\n    }\n    return false;\n}\nexport function getGIFLoopAmount(gif) {\n    for (const extension of gif.applicationExtensions) {\n        if (extension.identifier + extension.authenticationCode !== \"NETSCAPE2.0\") {\n            continue;\n        }\n        return extension.data[1] + (extension.data[2] << 8);\n    }\n    return NaN;\n}\nexport async function decodeGIF(gifURL, progressCallback, avgAlpha) {\n    if (!avgAlpha)\n        avgAlpha = false;\n    const res = await fetch(gifURL);\n    if (!res.ok && res.status === 404) {\n        throw new EvalError(\"file not found\");\n    }\n    const buffer = await res.arrayBuffer();\n    const gif = {\n        width: 0,\n        height: 0,\n        totalTime: 0,\n        colorRes: 0,\n        pixelAspectRatio: 0,\n        frames: [],\n        sortFlag: false,\n        globalColorTable: [],\n        backgroundImage: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n        comments: [],\n        applicationExtensions: [],\n    }, byteStream = new ByteStream(new Uint8ClampedArray(buffer));\n    if (byteStream.getString(6) !== \"GIF89a\") {\n        throw new Error(\"not a supported GIF file\");\n    }\n    gif.width = byteStream.nextTwoBytes();\n    gif.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), globalColorTableFlag = (packedByte & 0x80) === 0x80;\n    gif.colorRes = (packedByte & 0x70) >>> 4;\n    gif.sortFlag = (packedByte & 8) === 8;\n    const globalColorCount = 1 << ((packedByte & 7) + 1), backgroundColorIndex = byteStream.nextByte();\n    gif.pixelAspectRatio = byteStream.nextByte();\n    if (gif.pixelAspectRatio !== 0) {\n        gif.pixelAspectRatio = (gif.pixelAspectRatio + 0xf) / 0x40;\n    }\n    if (globalColorTableFlag) {\n        gif.globalColorTable = parseColorTable(byteStream, globalColorCount);\n    }\n    const backgroundImage = (() => {\n        try {\n            return new ImageData(gif.width, gif.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (backgroundImage == null) {\n        throw new Error(\"GIF frame size is to large\");\n    }\n    const { r, g, b } = gif.globalColorTable[backgroundColorIndex];\n    backgroundImage.data.set(globalColorTableFlag ? [r, g, b, 255] : [0, 0, 0, 0]);\n    for (let i = 4; i < backgroundImage.data.length; i *= 2) {\n        backgroundImage.data.copyWithin(i, 0, i);\n    }\n    gif.backgroundImage = backgroundImage;\n    let frameIndex = -1, incrementFrameIndex = true, transparencyIndex = -1;\n    const getframeIndex = (increment) => {\n        if (increment) {\n            incrementFrameIndex = true;\n        }\n        return frameIndex;\n    };\n    const getTransparencyIndex = (newValue) => {\n        if (newValue != null) {\n            transparencyIndex = newValue;\n        }\n        return transparencyIndex;\n    };\n    try {\n        do {\n            if (incrementFrameIndex) {\n                gif.frames.push({\n                    left: 0,\n                    top: 0,\n                    width: 0,\n                    height: 0,\n                    disposalMethod: DisposalMethod.Replace,\n                    image: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n                    plainTextData: null,\n                    userInputDelayFlag: false,\n                    delayTime: 0,\n                    sortFlag: false,\n                    localColorTable: [],\n                    reserved: 0,\n                    GCreserved: 0,\n                });\n                frameIndex++;\n                transparencyIndex = -1;\n                incrementFrameIndex = false;\n            }\n        } while (!(await parseBlock(byteStream, gif, avgAlpha, getframeIndex, getTransparencyIndex, progressCallback)));\n        gif.frames.length--;\n        for (const frame of gif.frames) {\n            if (frame.userInputDelayFlag && frame.delayTime === 0) {\n                gif.totalTime = Infinity;\n                break;\n            }\n            gif.totalTime += frame.delayTime;\n        }\n        return gif;\n    }\n    catch (error) {\n        if (error instanceof EvalError) {\n            throw new Error(`error while parsing frame ${frameIndex} \"${error.message}\"`);\n        }\n        throw error;\n    }\n}\nexport function drawGif(data) {\n    const { context, radius, particle, delta } = data, image = particle.image;\n    if (!image?.gifData || !image.gif) {\n        return;\n    }\n    const offscreenCanvas = new OffscreenCanvas(image.gifData.width, image.gifData.height), offscreenContext = offscreenCanvas.getContext(\"2d\");\n    if (!offscreenContext) {\n        throw new Error(\"could not create offscreen canvas context\");\n    }\n    offscreenContext.imageSmoothingQuality = \"low\";\n    offscreenContext.imageSmoothingEnabled = false;\n    offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n    if (particle.gifLoopCount === undefined) {\n        particle.gifLoopCount = image.gifLoopCount ?? defaultLoopCount;\n    }\n    let frameIndex = particle.gifFrame ?? defaultFrame;\n    const pos = { x: -image.gifData.width * half, y: -image.gifData.height * half }, frame = image.gifData.frames[frameIndex];\n    if (particle.gifTime === undefined) {\n        particle.gifTime = initialTime;\n    }\n    if (!frame.bitmap) {\n        return;\n    }\n    context.scale(radius / image.gifData.width, radius / image.gifData.height);\n    switch (frame.disposalMethod) {\n        case DisposalMethod.UndefinedA:\n        case DisposalMethod.UndefinedB:\n        case DisposalMethod.UndefinedC:\n        case DisposalMethod.UndefinedD:\n        case DisposalMethod.Replace:\n            offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n            context.drawImage(offscreenCanvas, pos.x, pos.y);\n            offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n            break;\n        case DisposalMethod.Combine:\n            offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n            context.drawImage(offscreenCanvas, pos.x, pos.y);\n            break;\n        case DisposalMethod.RestoreBackground:\n            offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n            context.drawImage(offscreenCanvas, pos.x, pos.y);\n            offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n            if (!image.gifData.globalColorTable.length) {\n                offscreenContext.putImageData(image.gifData.frames[firstIndex].image, pos.x + frame.left, pos.y + frame.top);\n            }\n            else {\n                offscreenContext.putImageData(image.gifData.backgroundImage, pos.x, pos.y);\n            }\n            break;\n        case DisposalMethod.RestorePrevious:\n            {\n                const previousImageData = offscreenContext.getImageData(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n                offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                context.drawImage(offscreenCanvas, pos.x, pos.y);\n                offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n                offscreenContext.putImageData(previousImageData, origin.x, origin.y);\n            }\n            break;\n    }\n    particle.gifTime += delta.value;\n    if (particle.gifTime > frame.delayTime) {\n        particle.gifTime -= frame.delayTime;\n        if (++frameIndex >= image.gifData.frames.length) {\n            if (--particle.gifLoopCount <= defaultLoopCount) {\n                return;\n            }\n            frameIndex = firstIndex;\n            offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n        }\n        particle.gifFrame = frameIndex;\n    }\n    context.scale(image.gifData.width / radius, image.gifData.height / radius);\n}\nexport async function loadGifImage(image) {\n    if (image.type !== \"gif\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    try {\n        image.gifData = await decodeGIF(image.source);\n        image.gifLoopCount = getGIFLoopAmount(image.gifData) ?? defaultLoopCount;\n        if (!image.gifLoopCount) {\n            image.gifLoopCount = Infinity;\n        }\n    }\n    catch {\n        image.error = true;\n    }\n    image.loading = false;\n}\n","import { errorPrefix } from \"@tsparticles/engine\";\nimport { replaceImageColor } from \"./Utils.js\";\nimport { drawGif } from \"./GifUtils/Utils.js\";\nconst double = 2, defaultAlpha = 1, sides = 12, defaultRatio = 1;\nexport class ImageDrawer {\n    constructor(engine) {\n        this.validTypes = [\"image\", \"images\"];\n        this.loadImageShape = async (imageShape) => {\n            if (!this._engine.loadImage) {\n                throw new Error(`${errorPrefix} image shape not initialized`);\n            }\n            await this._engine.loadImage({\n                gif: imageShape.gif,\n                name: imageShape.name,\n                replaceColor: imageShape.replaceColor ?? false,\n                src: imageShape.src,\n            });\n        };\n        this._engine = engine;\n    }\n    addImage(image) {\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        this._engine.images.push(image);\n    }\n    draw(data) {\n        const { context, radius, particle, opacity } = data, image = particle.image, element = image?.element;\n        if (!image) {\n            return;\n        }\n        context.globalAlpha = opacity;\n        if (image.gif && image.gifData) {\n            drawGif(data);\n        }\n        else if (element) {\n            const ratio = image.ratio, pos = {\n                x: -radius,\n                y: -radius,\n            }, diameter = radius * double;\n            context.drawImage(element, pos.x, pos.y, diameter, diameter / ratio);\n        }\n        context.globalAlpha = defaultAlpha;\n    }\n    getSidesCount() {\n        return sides;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (!options.preload || !this._engine.loadImage) {\n            return;\n        }\n        for (const imageData of options.preload) {\n            await this._engine.loadImage(imageData);\n        }\n    }\n    loadShape(particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const imageData = particle.shapeData;\n        if (!imageData) {\n            return;\n        }\n        const image = this._engine.images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            void this.loadImageShape(imageData).then(() => {\n                this.loadShape(particle);\n            });\n        }\n    }\n    particleInit(container, particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const images = this._engine.images, imageData = particle.shapeData;\n        if (!imageData) {\n            return;\n        }\n        const color = particle.getFillColor(), image = images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            return;\n        }\n        const replaceColor = imageData.replaceColor ?? image.replaceColor;\n        if (image.loading) {\n            setTimeout(() => {\n                this.particleInit(container, particle);\n            });\n            return;\n        }\n        void (async () => {\n            let imageRes;\n            if (image.svgData && color) {\n                imageRes = await replaceImageColor(image, imageData, color, particle);\n            }\n            else {\n                imageRes = {\n                    color,\n                    data: image,\n                    element: image.element,\n                    gif: image.gif,\n                    gifData: image.gifData,\n                    gifLoopCount: image.gifLoopCount,\n                    loaded: true,\n                    ratio: imageData.width && imageData.height\n                        ? imageData.width / imageData.height\n                        : (image.ratio ?? defaultRatio),\n                    replaceColor: replaceColor,\n                    source: imageData.src,\n                };\n            }\n            if (!imageRes.ratio) {\n                imageRes.ratio = 1;\n            }\n            const fill = imageData.fill ?? particle.shapeFill, close = imageData.close ?? particle.shapeClose, imageShape = {\n                image: imageRes,\n                fill,\n                close,\n            };\n            particle.image = imageShape.image;\n            particle.shapeFill = imageShape.fill;\n            particle.shapeClose = imageShape.close;\n        })();\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nexport class Preload {\n    constructor() {\n        this.src = \"\";\n        this.gif = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.gif !== undefined) {\n            this.gif = data.gif;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.replaceColor !== undefined) {\n            this.replaceColor = data.replaceColor;\n        }\n        if (data.src !== undefined) {\n            this.src = data.src;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n","import { Preload } from \"./Options/Classes/Preload.js\";\nexport class ImagePreloaderPlugin {\n    constructor(engine) {\n        this.id = \"imagePreloader\";\n        this._engine = engine;\n    }\n    async getPlugin() {\n        await Promise.resolve();\n        return {};\n    }\n    loadOptions(options, source) {\n        if (!source?.preload) {\n            return;\n        }\n        if (!options.preload) {\n            options.preload = [];\n        }\n        const preloadOptions = options.preload;\n        for (const item of source.preload) {\n            const existing = preloadOptions.find(t => t.name === item.name || t.src === item.src);\n            if (existing) {\n                existing.load(item);\n            }\n            else {\n                const preload = new Preload();\n                preload.load(item);\n                preloadOptions.push(preload);\n            }\n        }\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n","import { downloadSvgImage, loadImage } from \"./Utils.js\";\nimport { assertValidVersion, errorPrefix } from \"@tsparticles/engine\";\nimport { ImageDrawer } from \"./ImageDrawer.js\";\nimport { ImagePreloaderPlugin } from \"./ImagePreloader.js\";\nimport { loadGifImage } from \"./GifUtils/Utils.js\";\nconst extLength = 3;\nfunction addLoadImageToEngine(engine) {\n    if (engine.loadImage) {\n        return;\n    }\n    engine.loadImage = async (data) => {\n        if (!data.name && !data.src) {\n            throw new Error(`${errorPrefix} no image source provided`);\n        }\n        if (!engine.images) {\n            engine.images = [];\n        }\n        if (engine.images.find((t) => t.name === data.name || t.source === data.src)) {\n            return;\n        }\n        try {\n            const image = {\n                gif: data.gif ?? false,\n                name: data.name ?? data.src,\n                source: data.src,\n                type: data.src.substring(data.src.length - extLength),\n                error: false,\n                loading: true,\n                replaceColor: data.replaceColor,\n                ratio: data.width && data.height ? data.width / data.height : undefined,\n            };\n            engine.images.push(image);\n            let imageFunc;\n            if (data.gif) {\n                imageFunc = loadGifImage;\n            }\n            else {\n                imageFunc = data.replaceColor ? downloadSvgImage : loadImage;\n            }\n            await imageFunc(image);\n        }\n        catch {\n            throw new Error(`${errorPrefix} ${data.name ?? data.src} not found`);\n        }\n    };\n}\nexport async function loadImageShape(engine, refresh = true) {\n    assertValidVersion(engine, \"3.7.1\");\n    addLoadImageToEngine(engine);\n    const preloader = new ImagePreloaderPlugin(engine);\n    await engine.addPlugin(preloader, refresh);\n    await engine.addShape(new ImageDrawer(engine), refresh);\n}\n","import { ValueWithRandom, isNull } from \"@tsparticles/engine\";\nexport class LifeDelay extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom, isNull } from \"@tsparticles/engine\";\nexport class LifeDuration extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { isNull } from \"@tsparticles/engine\";\nimport { LifeDelay } from \"./LifeDelay.js\";\nimport { LifeDuration } from \"./LifeDuration.js\";\nexport class Life {\n    constructor() {\n        this.count = 0;\n        this.delay = new LifeDelay();\n        this.duration = new LifeDuration();\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.delay.load(data.delay);\n        this.duration.load(data.duration);\n    }\n}\n","import { getRandom, getRangeValue, millisecondsToSeconds, } from \"@tsparticles/engine\";\nimport { Life } from \"./Options/Classes/Life.js\";\nimport { updateLife } from \"./Utils.js\";\nconst noTime = 0, identity = 1, infiniteValue = -1;\nexport class LifeUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, lifeOptions = particlesOptions.life;\n        if (!lifeOptions) {\n            return;\n        }\n        particle.life = {\n            delay: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.delay.value) * (lifeOptions.delay.sync ? identity : getRandom())) /\n                    container.retina.reduceFactor) *\n                    millisecondsToSeconds\n                : noTime,\n            delayTime: noTime,\n            duration: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.duration.value) * (lifeOptions.duration.sync ? identity : getRandom())) /\n                    container.retina.reduceFactor) *\n                    millisecondsToSeconds\n                : noTime,\n            time: noTime,\n            count: lifeOptions.count,\n        };\n        if (particle.life.duration <= noTime) {\n            particle.life.duration = infiniteValue;\n        }\n        if (particle.life.count <= noTime) {\n            particle.life.count = infiniteValue;\n        }\n        if (particle.life) {\n            particle.spawning = particle.life.delay > noTime;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.life) {\n            options.life = new Life();\n        }\n        for (const source of sources) {\n            options.life.load(source?.life);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.life) {\n            return;\n        }\n        updateLife(particle, delta, this.container.canvas.size);\n    }\n}\n","import { getRangeValue, millisecondsToSeconds, randomInRange, setRangeValue, } from \"@tsparticles/engine\";\nconst noTime = 0, infiniteValue = -1, noLife = 0, minCanvasSize = 0;\nexport function updateLife(particle, delta, canvasSize) {\n    if (!particle.life) {\n        return;\n    }\n    const life = particle.life;\n    let justSpawned = false;\n    if (particle.spawning) {\n        life.delayTime += delta.value;\n        if (life.delayTime >= particle.life.delay) {\n            justSpawned = true;\n            particle.spawning = false;\n            life.delayTime = noTime;\n            life.time = noTime;\n        }\n        else {\n            return;\n        }\n    }\n    if (life.duration === infiniteValue) {\n        return;\n    }\n    if (particle.spawning) {\n        return;\n    }\n    if (justSpawned) {\n        life.time = noTime;\n    }\n    else {\n        life.time += delta.value;\n    }\n    if (life.time < life.duration) {\n        return;\n    }\n    life.time = noTime;\n    if (particle.life.count > noLife) {\n        particle.life.count--;\n    }\n    if (particle.life.count === noLife) {\n        particle.destroy();\n        return;\n    }\n    const widthRange = setRangeValue(minCanvasSize, canvasSize.width), heightRange = setRangeValue(minCanvasSize, canvasSize.width);\n    particle.position.x = randomInRange(widthRange);\n    particle.position.y = randomInRange(heightRange);\n    particle.spawning = true;\n    life.delayTime = noTime;\n    life.time = noTime;\n    particle.reset();\n    const lifeOptions = particle.options.life;\n    if (lifeOptions) {\n        life.delay = getRangeValue(lifeOptions.delay.value) * millisecondsToSeconds;\n        life.duration = getRangeValue(lifeOptions.duration.value) * millisecondsToSeconds;\n    }\n}\n","import { drawLine } from \"./Utils.js\";\nconst sides = 1;\nexport class LineDrawer {\n    constructor() {\n        this.validTypes = [\"line\"];\n    }\n    draw(data) {\n        drawLine(data);\n    }\n    getSidesCount() {\n        return sides;\n    }\n}\n","export function drawLine(data) {\n    const { context, particle, radius } = data, shapeData = particle.shapeData, centerY = 0;\n    context.moveTo(-radius, centerY);\n    context.lineTo(radius, centerY);\n    context.lineCap = shapeData?.cap ?? \"butt\";\n}\n","import { isSsr } from \"@tsparticles/engine\";\nconst half = 0.5;\nexport class ParallaxMover {\n    init() {\n    }\n    isEnabled(particle) {\n        return (!isSsr() &&\n            !particle.destroyed &&\n            particle.container.actualOptions.interactivity.events.onHover.parallax.enable);\n    }\n    move(particle) {\n        const container = particle.container, options = container.actualOptions, parallaxOptions = options.interactivity.events.onHover.parallax;\n        if (isSsr() || !parallaxOptions.enable) {\n            return;\n        }\n        const parallaxForce = parallaxOptions.force, mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const canvasSize = container.canvas.size, canvasCenter = {\n            x: canvasSize.width * half,\n            y: canvasSize.height * half,\n        }, parallaxSmooth = parallaxOptions.smooth, factor = particle.getRadius() / parallaxForce, centerDistance = {\n            x: (mousePos.x - canvasCenter.x) * factor,\n            y: (mousePos.y - canvasCenter.y) * factor,\n        }, { offset } = particle;\n        offset.x += (centerDistance.x - offset.x) / parallaxSmooth;\n        offset.y += (centerDistance.y - offset.y) / parallaxSmooth;\n    }\n}\n","import { ParticlesInteractorBase, getDistances, getRangeValue, } from \"@tsparticles/engine\";\nconst attractFactor = 1000, identity = 1;\nexport class Attractor extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact(p1) {\n        const container = this.container;\n        if (p1.attractDistance === undefined) {\n            p1.attractDistance = getRangeValue(p1.options.move.attract.distance) * container.retina.pixelRatio;\n        }\n        const distance = p1.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), { dx, dy } = getDistances(pos1, pos2), rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * attractFactor), ay = dy / (rotate.y * attractFactor), p1Factor = p2.size.value / p1.size.value, p2Factor = identity / p1Factor;\n            p1.velocity.x -= ax * p1Factor;\n            p1.velocity.y -= ay * p1Factor;\n            p2.velocity.x += ax * p2Factor;\n            p2.velocity.y += ay * p2Factor;\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.move.attract.enable;\n    }\n    reset() {\n    }\n}\n","import { clamp } from \"@tsparticles/engine\";\nconst half = 0.5, absorbFactor = 10, minAbsorbFactor = 0;\nfunction updateAbsorb(p1, r1, p2, r2, delta, pixelRatio) {\n    const factor = clamp((p1.options.collisions.absorb.speed * delta.factor) / absorbFactor, minAbsorbFactor, r2);\n    p1.size.value += factor * half;\n    p2.size.value -= factor;\n    if (r2 <= pixelRatio) {\n        p2.size.value = 0;\n        p2.destroy();\n    }\n}\nexport function absorb(p1, p2, delta, pixelRatio) {\n    const r1 = p1.getRadius(), r2 = p2.getRadius();\n    if (r1 === undefined && r2 !== undefined) {\n        p1.destroy();\n    }\n    else if (r1 !== undefined && r2 === undefined) {\n        p2.destroy();\n    }\n    else if (r1 !== undefined && r2 !== undefined) {\n        if (r1 >= r2) {\n            updateAbsorb(p1, r1, p2, r2, delta, pixelRatio);\n        }\n        else {\n            updateAbsorb(p2, r2, p1, r1, delta, pixelRatio);\n        }\n    }\n}\n","import { circleBounce, circleBounceDataFromParticle, getRangeValue } from \"@tsparticles/engine\";\nconst fixBounceSpeed = (p) => {\n    if (p.collisionMaxSpeed === undefined) {\n        p.collisionMaxSpeed = getRangeValue(p.options.collisions.maxSpeed);\n    }\n    if (p.velocity.length > p.collisionMaxSpeed) {\n        p.velocity.length = p.collisionMaxSpeed;\n    }\n};\nexport function bounce(p1, p2) {\n    circleBounce(circleBounceDataFromParticle(p1), circleBounceDataFromParticle(p2));\n    fixBounceSpeed(p1);\n    fixBounceSpeed(p2);\n}\n","import { CollisionMode } from \"@tsparticles/engine\";\nimport { absorb } from \"./Absorb.js\";\nimport { bounce } from \"./Bounce.js\";\nimport { destroy } from \"./Destroy.js\";\nexport function resolveCollision(p1, p2, delta, pixelRatio) {\n    switch (p1.options.collisions.mode) {\n        case CollisionMode.absorb: {\n            absorb(p1, p2, delta, pixelRatio);\n            break;\n        }\n        case CollisionMode.bounce: {\n            bounce(p1, p2);\n            break;\n        }\n        case CollisionMode.destroy: {\n            destroy(p1, p2);\n            break;\n        }\n    }\n}\n","import { bounce } from \"./Bounce.js\";\nexport function destroy(p1, p2) {\n    if (!p1.unbreakable && !p2.unbreakable) {\n        bounce(p1, p2);\n    }\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        const deleteP = p1.getRadius() >= p2.getRadius() ? p2 : p1;\n        deleteP.destroy();\n    }\n}\n","import { ParticlesInteractorBase, getDistance } from \"@tsparticles/engine\";\nimport { resolveCollision } from \"./ResolveCollision.js\";\nconst double = 2;\nexport class Collider extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact(p1, delta) {\n        if (p1.destroyed || p1.spawning) {\n            return;\n        }\n        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * double);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), radius2 = p2.getRadius();\n            if (Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2) {\n                continue;\n            }\n            const dist = getDistance(pos1, pos2), distP = radius1 + radius2;\n            if (dist > distP) {\n                continue;\n            }\n            resolveCollision(p1, p2, delta, container.retina.pixelRatio);\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n}\n","import { Circle, Rectangle } from \"@tsparticles/engine\";\nconst double = 2;\nexport class CircleWarp extends Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = { ...canvasSize };\n    }\n    contains(point) {\n        const { width, height } = this.canvasSize, { x, y } = point;\n        return (super.contains(point) ||\n            super.contains({ x: x - width, y }) ||\n            super.contains({ x: x - width, y: y - height }) ||\n            super.contains({ x, y: y - height }));\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range, circle = range, newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * double);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * double, rect.size.height * double);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\n","import { OptionsColor, isNull } from \"@tsparticles/engine\";\nexport class LinksShadow {\n    constructor() {\n        this.blur = 5;\n        this.color = new OptionsColor();\n        this.color.value = \"#000\";\n        this.enable = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { OptionsColor, isNull } from \"@tsparticles/engine\";\nexport class LinksTriangle {\n    constructor() {\n        this.enable = false;\n        this.frequency = 1;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor, isNull } from \"@tsparticles/engine\";\nimport { LinksShadow } from \"./LinksShadow.js\";\nimport { LinksTriangle } from \"./LinksTriangle.js\";\nexport class Links {\n    constructor() {\n        this.blink = false;\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.consent = false;\n        this.distance = 100;\n        this.enable = false;\n        this.frequency = 1;\n        this.opacity = 1;\n        this.shadow = new LinksShadow();\n        this.triangles = new LinksTriangle();\n        this.width = 1;\n        this.warp = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.id !== undefined) {\n            this.id = data.id;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        this.shadow.load(data.shadow);\n        this.triangles.load(data.triangles);\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { Circle, ParticlesInteractorBase, getDistances, getLinkRandomColor, } from \"@tsparticles/engine\";\nimport { CircleWarp } from \"./CircleWarp.js\";\nimport { Links } from \"./Options/Classes/Links.js\";\nconst squarePower = 2, opacityOffset = 1, origin = {\n    x: 0,\n    y: 0,\n}, minDistance = 0;\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n    const { dx, dy, distance } = getDistances(pos1, pos2);\n    if (!warp || distance <= optDistance) {\n        return distance;\n    }\n    const absDiffs = {\n        x: Math.abs(dx),\n        y: Math.abs(dy),\n    }, warpDistances = {\n        x: Math.min(absDiffs.x, canvasSize.width - absDiffs.x),\n        y: Math.min(absDiffs.y, canvasSize.height - absDiffs.y),\n    };\n    return Math.sqrt(warpDistances.x ** squarePower + warpDistances.y ** squarePower);\n}\nexport class Linker extends ParticlesInteractorBase {\n    constructor(container, engine) {\n        super(container);\n        this._setColor = p1 => {\n            if (!p1.options.links) {\n                return;\n            }\n            const container = this._linkContainer, linksOptions = p1.options.links;\n            let linkColor = linksOptions.id === undefined\n                ? container.particles.linksColor\n                : container.particles.linksColors.get(linksOptions.id);\n            if (linkColor) {\n                return;\n            }\n            const optColor = linksOptions.color;\n            linkColor = getLinkRandomColor(this._engine, optColor, linksOptions.blink, linksOptions.consent);\n            if (linksOptions.id === undefined) {\n                container.particles.linksColor = linkColor;\n            }\n            else {\n                container.particles.linksColors.set(linksOptions.id, linkColor);\n            }\n        };\n        this._linkContainer = container;\n        this._engine = engine;\n    }\n    clear() {\n    }\n    init() {\n        this._linkContainer.particles.linksColor = undefined;\n        this._linkContainer.particles.linksColors = new Map();\n    }\n    interact(p1) {\n        if (!p1.options.links) {\n            return;\n        }\n        p1.links = [];\n        const pos1 = p1.getPosition(), container = this.container, canvasSize = container.canvas.size;\n        if (pos1.x < origin.x || pos1.y < origin.y || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {\n            return;\n        }\n        const linkOpt1 = p1.options.links, optOpacity = linkOpt1.opacity, optDistance = p1.retina.linksDistance ?? minDistance, warp = linkOpt1.warp;\n        let range;\n        if (warp) {\n            range = new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize);\n        }\n        else {\n            range = new Circle(pos1.x, pos1.y, optDistance);\n        }\n        const query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 ||\n                !linkOpt2?.enable ||\n                linkOpt1.id !== linkOpt2.id ||\n                p2.spawning ||\n                p2.destroyed ||\n                !p2.links ||\n                p1.links.some(t => t.destination === p2) ||\n                p2.links.some(t => t.destination === p1)) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (pos2.x < origin.x || pos2.y < origin.y || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {\n                continue;\n            }\n            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n            if (distance > optDistance) {\n                continue;\n            }\n            const opacityLine = (opacityOffset - distance / optDistance) * optOpacity;\n            this._setColor(p1);\n            p1.links.push({\n                destination: p2,\n                opacity: opacityLine,\n            });\n        }\n    }\n    isEnabled(particle) {\n        return !!particle.options.links?.enable;\n    }\n    loadParticlesOptions(options, ...sources) {\n        if (!options.links) {\n            options.links = new Links();\n        }\n        for (const source of sources) {\n            options.links.load(source?.links);\n        }\n    }\n    reset() {\n    }\n}\n","import { drawLine, getDistance, getDistances, getRandom, getStyleFromRgb, rangeColorToRgb, } from \"@tsparticles/engine\";\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function drawLinkLine(params) {\n    let drawn = false;\n    const { begin, end, engine, maxDistance, context, canvasSize, width, backgroundMask, colorLine, opacity, links } = params;\n    if (getDistance(begin, end) <= maxDistance) {\n        drawLine(context, begin, end);\n        drawn = true;\n    }\n    else if (links.warp) {\n        let pi1;\n        let pi2;\n        const endNE = {\n            x: end.x - canvasSize.width,\n            y: end.y,\n        };\n        const d1 = getDistances(begin, endNE);\n        if (d1.distance <= maxDistance) {\n            const yi = begin.y - (d1.dy / d1.dx) * begin.x;\n            pi1 = { x: 0, y: yi };\n            pi2 = { x: canvasSize.width, y: yi };\n        }\n        else {\n            const endSW = {\n                x: end.x,\n                y: end.y - canvasSize.height,\n            };\n            const d2 = getDistances(begin, endSW);\n            if (d2.distance <= maxDistance) {\n                const yi = begin.y - (d2.dy / d2.dx) * begin.x;\n                const xi = -yi / (d2.dy / d2.dx);\n                pi1 = { x: xi, y: 0 };\n                pi2 = { x: xi, y: canvasSize.height };\n            }\n            else {\n                const endSE = {\n                    x: end.x - canvasSize.width,\n                    y: end.y - canvasSize.height,\n                };\n                const d3 = getDistances(begin, endSE);\n                if (d3.distance <= maxDistance) {\n                    const yi = begin.y - (d3.dy / d3.dx) * begin.x;\n                    const xi = -yi / (d3.dy / d3.dx);\n                    pi1 = { x: xi, y: yi };\n                    pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                }\n            }\n        }\n        if (pi1 && pi2) {\n            drawLine(context, begin, pi1);\n            drawLine(context, end, pi2);\n            drawn = true;\n        }\n    }\n    if (!drawn) {\n        return;\n    }\n    context.lineWidth = width;\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    const { shadow } = links;\n    if (shadow.enable) {\n        const shadowColor = rangeColorToRgb(engine, shadow.color);\n        if (shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = getStyleFromRgb(shadowColor);\n        }\n    }\n    context.stroke();\n}\nexport function drawLinkTriangle(params) {\n    const { context, pos1, pos2, pos3, backgroundMask, colorTriangle, opacityTriangle } = params;\n    drawTriangle(context, pos1, pos2, pos3);\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.fillStyle = getStyleFromRgb(colorTriangle, opacityTriangle);\n    context.fill();\n}\nexport function getLinkKey(ids) {\n    ids.sort((a, b) => a - b);\n    return ids.join(\"_\");\n}\nexport function setLinkFrequency(particles, dictionary) {\n    const key = getLinkKey(particles.map(t => t.id));\n    let res = dictionary.get(key);\n    if (res === undefined) {\n        res = getRandom();\n        dictionary.set(key, res);\n    }\n    return res;\n}\n","import { getDistance, getLinkColor, getRandom, getRangeValue, rangeColorToRgb, } from \"@tsparticles/engine\";\nimport { drawLinkLine, drawLinkTriangle, setLinkFrequency } from \"./Utils.js\";\nconst minOpacity = 0, minWidth = 0, minDistance = 0, half = 0.5, maxFrequency = 1;\nexport class LinkInstance {\n    constructor(container, engine) {\n        this._drawLinkLine = (p1, link) => {\n            const p1LinksOptions = p1.options.links;\n            if (!p1LinksOptions?.enable) {\n                return;\n            }\n            const container = this._container, options = container.actualOptions, p2 = link.destination, pos1 = p1.getPosition(), pos2 = p2.getPosition();\n            let opacity = link.opacity;\n            container.canvas.draw(ctx => {\n                let colorLine;\n                const twinkle = p1.options.twinkle?.lines;\n                if (twinkle?.enable) {\n                    const twinkleFreq = twinkle.frequency, twinkleRgb = rangeColorToRgb(this._engine, twinkle.color), twinkling = getRandom() < twinkleFreq;\n                    if (twinkling && twinkleRgb) {\n                        colorLine = twinkleRgb;\n                        opacity = getRangeValue(twinkle.opacity);\n                    }\n                }\n                if (!colorLine) {\n                    const linkColor = p1LinksOptions.id !== undefined\n                        ? container.particles.linksColors.get(p1LinksOptions.id)\n                        : container.particles.linksColor;\n                    colorLine = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorLine) {\n                    return;\n                }\n                const width = p1.retina.linksWidth ?? minWidth, maxDistance = p1.retina.linksDistance ?? minDistance, { backgroundMask } = options;\n                drawLinkLine({\n                    context: ctx,\n                    width,\n                    begin: pos1,\n                    end: pos2,\n                    engine: this._engine,\n                    maxDistance,\n                    canvasSize: container.canvas.size,\n                    links: p1LinksOptions,\n                    backgroundMask: backgroundMask,\n                    colorLine,\n                    opacity,\n                });\n            });\n        };\n        this._drawLinkTriangle = (p1, link1, link2) => {\n            const linksOptions = p1.options.links;\n            if (!linksOptions?.enable) {\n                return;\n            }\n            const triangleOptions = linksOptions.triangles;\n            if (!triangleOptions.enable) {\n                return;\n            }\n            const container = this._container, options = container.actualOptions, p2 = link1.destination, p3 = link2.destination, opacityTriangle = triangleOptions.opacity ?? (link1.opacity + link2.opacity) * half;\n            if (opacityTriangle <= minOpacity) {\n                return;\n            }\n            container.canvas.draw(ctx => {\n                const pos1 = p1.getPosition(), pos2 = p2.getPosition(), pos3 = p3.getPosition(), linksDistance = p1.retina.linksDistance ?? minDistance;\n                if (getDistance(pos1, pos2) > linksDistance ||\n                    getDistance(pos3, pos2) > linksDistance ||\n                    getDistance(pos3, pos1) > linksDistance) {\n                    return;\n                }\n                let colorTriangle = rangeColorToRgb(this._engine, triangleOptions.color);\n                if (!colorTriangle) {\n                    const linkColor = linksOptions.id !== undefined\n                        ? container.particles.linksColors.get(linksOptions.id)\n                        : container.particles.linksColor;\n                    colorTriangle = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorTriangle) {\n                    return;\n                }\n                drawLinkTriangle({\n                    context: ctx,\n                    pos1,\n                    pos2,\n                    pos3,\n                    backgroundMask: options.backgroundMask,\n                    colorTriangle,\n                    opacityTriangle,\n                });\n            });\n        };\n        this._drawTriangles = (options, p1, link, p1Links) => {\n            const p2 = link.destination;\n            if (!(options.links?.triangles.enable && p2.options.links?.triangles.enable)) {\n                return;\n            }\n            const vertices = p2.links?.filter(t => {\n                const linkFreq = this._getLinkFrequency(p2, t.destination), minCount = 0;\n                return (p2.options.links &&\n                    linkFreq <= p2.options.links.frequency &&\n                    p1Links.findIndex(l => l.destination === t.destination) >= minCount);\n            });\n            if (!vertices?.length) {\n                return;\n            }\n            for (const vertex of vertices) {\n                const p3 = vertex.destination, triangleFreq = this._getTriangleFrequency(p1, p2, p3);\n                if (triangleFreq > options.links.triangles.frequency) {\n                    continue;\n                }\n                this._drawLinkTriangle(p1, link, vertex);\n            }\n        };\n        this._getLinkFrequency = (p1, p2) => {\n            return setLinkFrequency([p1, p2], this._freqs.links);\n        };\n        this._getTriangleFrequency = (p1, p2, p3) => {\n            return setLinkFrequency([p1, p2, p3], this._freqs.triangles);\n        };\n        this._container = container;\n        this._engine = engine;\n        this._freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n    }\n    drawParticle(context, particle) {\n        const { links, options } = particle;\n        if (!links?.length) {\n            return;\n        }\n        const p1Links = links.filter(l => options.links &&\n            (options.links.frequency >= maxFrequency ||\n                this._getLinkFrequency(particle, l.destination) <= options.links.frequency));\n        for (const link of p1Links) {\n            this._drawTriangles(options, particle, link, p1Links);\n            if (link.opacity > minOpacity && (particle.retina.linksWidth ?? minWidth) > minWidth) {\n                this._drawLinkLine(particle, link);\n            }\n        }\n    }\n    async init() {\n        this._freqs.links = new Map();\n        this._freqs.triangles = new Map();\n        await Promise.resolve();\n    }\n    particleCreated(particle) {\n        particle.links = [];\n        if (!particle.options.links) {\n            return;\n        }\n        const ratio = this._container.retina.pixelRatio, { retina } = particle, { distance, width } = particle.options.links;\n        retina.linksDistance = distance * ratio;\n        retina.linksWidth = width * ratio;\n    }\n    particleDestroyed(particle) {\n        particle.links = [];\n    }\n}\n","import { LinkInstance } from \"./LinkInstance.js\";\nexport class LinksPlugin {\n    constructor(engine) {\n        this.id = \"links\";\n        this._engine = engine;\n    }\n    getPlugin(container) {\n        return Promise.resolve(new LinkInstance(container, this._engine));\n    }\n    loadOptions() {\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n","import { assertValidVersion } from \"@tsparticles/engine\";\nimport { loadLinksInteraction } from \"./interaction.js\";\nimport { loadLinksPlugin } from \"./plugin.js\";\nexport async function loadParticlesLinksInteraction(engine, refresh = true) {\n    assertValidVersion(engine, \"3.7.1\");\n    await loadLinksInteraction(engine, refresh);\n    await loadLinksPlugin(engine, refresh);\n}\nexport * from \"./Options/Classes/Links.js\";\nexport * from \"./Options/Classes/LinksShadow.js\";\nexport * from \"./Options/Classes/LinksTriangle.js\";\nexport * from \"./Options/Interfaces/ILinks.js\";\nexport * from \"./Options/Interfaces/ILinksShadow.js\";\nexport * from \"./Options/Interfaces/ILinksTriangle.js\";\n","import { Linker } from \"./Linker.js\";\nexport async function loadLinksInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesLinks\", async (container) => {\n        return Promise.resolve(new Linker(container, engine));\n    }, refresh);\n}\n","import { LinksPlugin } from \"./LinksPlugin.js\";\nexport async function loadLinksPlugin(engine, refresh = true) {\n    const plugin = new LinksPlugin(engine);\n    await engine.addPlugin(plugin, refresh);\n}\n","import { degToRad } from \"@tsparticles/engine\";\nconst piDeg = 180, origin = { x: 0, y: 0 }, sidesOffset = 2;\nexport function drawPolygon(data, start, side) {\n    const { context } = data, sideCount = side.count.numerator * side.count.denominator, decimalSides = side.count.numerator / side.count.denominator, interiorAngleDegrees = (piDeg * (decimalSides - sidesOffset)) / decimalSides, interiorAngle = Math.PI - degToRad(interiorAngleDegrees);\n    if (!context) {\n        return;\n    }\n    context.beginPath();\n    context.translate(start.x, start.y);\n    context.moveTo(origin.x, origin.y);\n    for (let i = 0; i < sideCount; i++) {\n        context.lineTo(side.length, origin.y);\n        context.translate(side.length, origin.y);\n        context.rotate(interiorAngle);\n    }\n}\n","import { getRangeValue, } from \"@tsparticles/engine\";\nimport { drawPolygon } from \"./Utils.js\";\nconst defaultSides = 5;\nexport class PolygonDrawerBase {\n    draw(data) {\n        const { particle, radius } = data, start = this.getCenter(particle, radius), side = this.getSidesData(particle, radius);\n        drawPolygon(data, start, side);\n    }\n    getSidesCount(particle) {\n        const polygon = particle.shapeData;\n        return Math.round(getRangeValue(polygon?.sides ?? defaultSides));\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase.js\";\nconst sidesCenterFactor = 3.5, yFactor = 2.66, sidesFactor = 3;\nexport class PolygonDrawer extends PolygonDrawerBase {\n    constructor() {\n        super(...arguments);\n        this.validTypes = [\"polygon\"];\n    }\n    getCenter(particle, radius) {\n        return {\n            x: -radius / (particle.sides / sidesCenterFactor),\n            y: -radius / (yFactor / sidesCenterFactor),\n        };\n    }\n    getSidesData(particle, radius) {\n        const sides = particle.sides;\n        return {\n            count: {\n                denominator: 1,\n                numerator: sides,\n            },\n            length: (radius * yFactor) / (sides / sidesFactor),\n        };\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase.js\";\nconst yFactor = 1.66, sides = 3, double = 2;\nexport class TriangleDrawer extends PolygonDrawerBase {\n    constructor() {\n        super(...arguments);\n        this.validTypes = [\"triangle\"];\n    }\n    getCenter(particle, radius) {\n        return {\n            x: -radius,\n            y: radius / yFactor,\n        };\n    }\n    getSidesCount() {\n        return sides;\n    }\n    getSidesData(particle, radius) {\n        const diameter = radius * double;\n        return {\n            count: {\n                denominator: 2,\n                numerator: 3,\n            },\n            length: diameter,\n        };\n    }\n}\n","import { assertValidVersion } from \"@tsparticles/engine\";\nimport { PolygonDrawer } from \"./PolygonDrawer.js\";\nimport { TriangleDrawer } from \"./TriangleDrawer.js\";\nexport async function loadGenericPolygonShape(engine, refresh = true) {\n    assertValidVersion(engine, \"3.7.1\");\n    await engine.addShape(new PolygonDrawer(), refresh);\n}\nexport async function loadTriangleShape(engine, refresh = true) {\n    assertValidVersion(engine, \"3.7.1\");\n    await engine.addShape(new TriangleDrawer(), refresh);\n}\nexport async function loadPolygonShape(engine, refresh = true) {\n    assertValidVersion(engine, \"3.7.1\");\n    await loadGenericPolygonShape(engine, refresh);\n    await loadTriangleShape(engine, refresh);\n}\n","import { isNull, setRangeValue } from \"@tsparticles/engine\";\nexport class RotateAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { RotateDirection, ValueWithRandom, isNull, } from \"@tsparticles/engine\";\nimport { RotateAnimation } from \"./RotateAnimation.js\";\nexport class Rotate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RotateAnimation();\n        this.direction = RotateDirection.clockwise;\n        this.path = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (isNull(data)) {\n            return;\n        }\n        super.load(data);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.animation.load(data.animation);\n        if (data.path !== undefined) {\n            this.path = data.path;\n        }\n    }\n}\n","import { AnimationStatus, DestroyType, RotateDirection, degToRad, getRandom, getRangeValue, updateAnimation, } from \"@tsparticles/engine\";\nimport { Rotate } from \"./Options/Classes/Rotate.js\";\nconst double = 2, doublePI = Math.PI * double, identity = 1, doublePIDeg = 360;\nexport class RotateUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const rotateOptions = particle.options.rotate;\n        if (!rotateOptions) {\n            return;\n        }\n        particle.rotate = {\n            enable: rotateOptions.animation.enable,\n            value: degToRad(getRangeValue(rotateOptions.value)),\n            min: 0,\n            max: doublePI,\n        };\n        particle.pathRotation = rotateOptions.path;\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === RotateDirection.random) {\n            const index = Math.floor(getRandom() * double), minIndex = 0;\n            rotateDirection = index > minIndex ? RotateDirection.counterClockwise : RotateDirection.clockwise;\n        }\n        switch (rotateDirection) {\n            case RotateDirection.counterClockwise:\n            case \"counterClockwise\":\n                particle.rotate.status = AnimationStatus.decreasing;\n                break;\n            case RotateDirection.clockwise:\n                particle.rotate.status = AnimationStatus.increasing;\n                break;\n        }\n        const rotateAnimation = rotateOptions.animation;\n        if (rotateAnimation.enable) {\n            particle.rotate.decay = identity - getRangeValue(rotateAnimation.decay);\n            particle.rotate.velocity =\n                (getRangeValue(rotateAnimation.speed) / doublePIDeg) * this.container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                particle.rotate.velocity *= getRandom();\n            }\n        }\n        particle.rotation = particle.rotate.value;\n    }\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        if (!rotate) {\n            return false;\n        }\n        return !particle.destroyed && !particle.spawning && (!!rotate.value || rotate.animation.enable || rotate.path);\n    }\n    loadOptions(options, ...sources) {\n        if (!options.rotate) {\n            options.rotate = new Rotate();\n        }\n        for (const source of sources) {\n            options.rotate.load(source?.rotate);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        particle.isRotating = !!particle.rotate;\n        if (!particle.rotate) {\n            return;\n        }\n        updateAnimation(particle, particle.rotate, false, DestroyType.none, delta);\n        particle.rotation = particle.rotate.value;\n    }\n}\n","const fixFactorSquared = 2, fixFactor = Math.sqrt(fixFactorSquared), double = 2;\nexport function drawSquare(data) {\n    const { context, radius } = data, fixedRadius = radius / fixFactor, fixedDiameter = fixedRadius * double;\n    context.rect(-fixedRadius, -fixedRadius, fixedDiameter, fixedDiameter);\n}\n","import { drawSquare } from \"./Utils.js\";\nconst sides = 4;\nexport class SquareDrawer {\n    constructor() {\n        this.validTypes = [\"edge\", \"square\"];\n    }\n    draw(data) {\n        drawSquare(data);\n    }\n    getSidesCount() {\n        return sides;\n    }\n}\n","const defaultInset = 2, origin = { x: 0, y: 0 };\nexport function drawStar(data) {\n    const { context, particle, radius } = data, sides = particle.sides, inset = particle.starInset ?? defaultInset;\n    context.moveTo(origin.x, origin.y - radius);\n    for (let i = 0; i < sides; i++) {\n        context.rotate(Math.PI / sides);\n        context.lineTo(origin.x, origin.y - radius * inset);\n        context.rotate(Math.PI / sides);\n        context.lineTo(origin.x, origin.y - radius);\n    }\n}\n","import { getRangeValue, } from \"@tsparticles/engine\";\nimport { drawStar } from \"./Utils.js\";\nconst defaultInset = 2, defaultSides = 5;\nexport class StarDrawer {\n    constructor() {\n        this.validTypes = [\"star\"];\n    }\n    draw(data) {\n        drawStar(data);\n    }\n    getSidesCount(particle) {\n        const star = particle.shapeData;\n        return Math.round(getRangeValue(star?.sides ?? defaultSides));\n    }\n    particleInit(container, particle) {\n        const star = particle.shapeData;\n        particle.starInset = getRangeValue(star?.inset ?? defaultInset);\n    }\n}\n","import { getHslAnimationFromHsl, getRangeValue, itemFromSingleOrMultiple, rangeColorToHsl, updateColor, } from \"@tsparticles/engine\";\nconst defaultOpacity = 1;\nexport class StrokeColorUpdater {\n    constructor(container, engine) {\n        this._container = container;\n        this._engine = engine;\n    }\n    init(particle) {\n        const container = this._container, options = particle.options;\n        const stroke = itemFromSingleOrMultiple(options.stroke, particle.id, options.reduceDuplicates);\n        particle.strokeWidth = getRangeValue(stroke.width) * container.retina.pixelRatio;\n        particle.strokeOpacity = getRangeValue(stroke.opacity ?? defaultOpacity);\n        particle.strokeAnimation = stroke.color?.animation;\n        const strokeHslColor = rangeColorToHsl(this._engine, stroke.color) ?? particle.getFillColor();\n        if (strokeHslColor) {\n            particle.strokeColor = getHslAnimationFromHsl(strokeHslColor, particle.strokeAnimation, container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const color = particle.strokeAnimation, { strokeColor } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!color &&\n            ((strokeColor?.h.value !== undefined && strokeColor.h.enable) ||\n                (strokeColor?.s.value !== undefined && strokeColor.s.enable) ||\n                (strokeColor?.l.value !== undefined && strokeColor.l.enable)));\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateColor(particle.strokeColor, delta);\n    }\n}\n","import { assertValidVersion } from \"@tsparticles/engine\";\nimport { loadBasic } from \"@tsparticles/basic\";\nimport { loadEasingQuadPlugin } from \"@tsparticles/plugin-easing-quad\";\nimport { loadEmojiShape } from \"@tsparticles/shape-emoji\";\nimport { loadExternalAttractInteraction } from \"@tsparticles/interaction-external-attract\";\nimport { loadExternalBounceInteraction } from \"@tsparticles/interaction-external-bounce\";\nimport { loadExternalBubbleInteraction } from \"@tsparticles/interaction-external-bubble\";\nimport { loadExternalConnectInteraction } from \"@tsparticles/interaction-external-connect\";\nimport { loadExternalGrabInteraction } from \"@tsparticles/interaction-external-grab\";\nimport { loadExternalPauseInteraction } from \"@tsparticles/interaction-external-pause\";\nimport { loadExternalPushInteraction } from \"@tsparticles/interaction-external-push\";\nimport { loadExternalRemoveInteraction } from \"@tsparticles/interaction-external-remove\";\nimport { loadExternalRepulseInteraction } from \"@tsparticles/interaction-external-repulse\";\nimport { loadExternalSlowInteraction } from \"@tsparticles/interaction-external-slow\";\nimport { loadImageShape } from \"@tsparticles/shape-image\";\nimport { loadLifeUpdater } from \"@tsparticles/updater-life\";\nimport { loadLineShape } from \"@tsparticles/shape-line\";\nimport { loadParallaxMover } from \"@tsparticles/move-parallax\";\nimport { loadParticlesAttractInteraction } from \"@tsparticles/interaction-particles-attract\";\nimport { loadParticlesCollisionsInteraction } from \"@tsparticles/interaction-particles-collisions\";\nimport { loadParticlesLinksInteraction } from \"@tsparticles/interaction-particles-links\";\nimport { loadPolygonShape } from \"@tsparticles/shape-polygon\";\nimport { loadRotateUpdater } from \"@tsparticles/updater-rotate\";\nimport { loadSquareShape } from \"@tsparticles/shape-square\";\nimport { loadStarShape } from \"@tsparticles/shape-star\";\nimport { loadStrokeColorUpdater } from \"@tsparticles/updater-stroke-color\";\nexport async function loadSlim(engine, refresh = true) {\n    assertValidVersion(engine, \"3.7.1\");\n    await loadParallaxMover(engine, false);\n    await loadExternalAttractInteraction(engine, false);\n    await loadExternalBounceInteraction(engine, false);\n    await loadExternalBubbleInteraction(engine, false);\n    await loadExternalConnectInteraction(engine, false);\n    await loadExternalGrabInteraction(engine, false);\n    await loadExternalPauseInteraction(engine, false);\n    await loadExternalPushInteraction(engine, false);\n    await loadExternalRemoveInteraction(engine, false);\n    await loadExternalRepulseInteraction(engine, false);\n    await loadExternalSlowInteraction(engine, false);\n    await loadParticlesAttractInteraction(engine, false);\n    await loadParticlesCollisionsInteraction(engine, false);\n    await loadParticlesLinksInteraction(engine, false);\n    await loadEasingQuadPlugin(engine, false);\n    await loadEmojiShape(engine, false);\n    await loadImageShape(engine, false);\n    await loadLineShape(engine, false);\n    await loadPolygonShape(engine, false);\n    await loadSquareShape(engine, false);\n    await loadStarShape(engine, false);\n    await loadLifeUpdater(engine, false);\n    await loadRotateUpdater(engine, false);\n    await loadStrokeColorUpdater(engine, false);\n    await loadBasic(engine, refresh);\n}\n","import { assertValidVersion } from \"@tsparticles/engine\";\nimport { ParallaxMover } from \"./ParallaxMover.js\";\nexport async function loadParallaxMover(engine, refresh = true) {\n    assertValidVersion(engine, \"3.7.1\");\n    await engine.addMover(\"parallax\", () => {\n        return Promise.resolve(new ParallaxMover());\n    }, refresh);\n}\n","import { assertValidVersion } from \"@tsparticles/engine\";\nimport { Attractor } from \"./Attractor.js\";\nexport async function loadExternalAttractInteraction(engine, refresh = true) {\n    assertValidVersion(engine, \"3.7.1\");\n    await engine.addInteractor(\"externalAttract\", container => {\n        return Promise.resolve(new Attractor(engine, container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Attract.js\";\nexport * from \"./Options/Interfaces/IAttract.js\";\n","import { assertValidVersion } from \"@tsparticles/engine\";\nimport { Bouncer } from \"./Bouncer.js\";\nexport async function loadExternalBounceInteraction(engine, refresh = true) {\n    assertValidVersion(engine, \"3.7.1\");\n    await engine.addInteractor(\"externalBounce\", container => {\n        return Promise.resolve(new Bouncer(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Bounce.js\";\nexport * from \"./Options/Interfaces/IBounce.js\";\n","import { assertValidVersion } from \"@tsparticles/engine\";\nimport { Bubbler } from \"./Bubbler.js\";\nexport async function loadExternalBubbleInteraction(engine, refresh = true) {\n    assertValidVersion(engine, \"3.7.1\");\n    await engine.addInteractor(\"externalBubble\", container => {\n        return Promise.resolve(new Bubbler(container, engine));\n    }, refresh);\n}\nexport * from \"./Options/Classes/BubbleBase.js\";\nexport * from \"./Options/Classes/BubbleDiv.js\";\nexport * from \"./Options/Classes/Bubble.js\";\nexport * from \"./Options/Interfaces/IBubbleBase.js\";\nexport * from \"./Options/Interfaces/IBubbleDiv.js\";\nexport * from \"./Options/Interfaces/IBubble.js\";\n","import { assertValidVersion } from \"@tsparticles/engine\";\nimport { Connector } from \"./Connector.js\";\nexport async function loadExternalConnectInteraction(engine, refresh = true) {\n    assertValidVersion(engine, \"3.7.1\");\n    await engine.addInteractor(\"externalConnect\", container => {\n        return Promise.resolve(new Connector(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Connect.js\";\nexport * from \"./Options/Classes/ConnectLinks.js\";\nexport * from \"./Options/Interfaces/IConnect.js\";\nexport * from \"./Options/Interfaces/IConnectLinks.js\";\n","import { assertValidVersion } from \"@tsparticles/engine\";\nimport { Grabber } from \"./Grabber.js\";\nexport async function loadExternalGrabInteraction(engine, refresh = true) {\n    assertValidVersion(engine, \"3.7.1\");\n    await engine.addInteractor(\"externalGrab\", container => {\n        return Promise.resolve(new Grabber(container, engine));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Grab.js\";\nexport * from \"./Options/Classes/GrabLinks.js\";\nexport * from \"./Options/Interfaces/IGrab.js\";\nexport * from \"./Options/Interfaces/IGrabLinks.js\";\n","import { assertValidVersion } from \"@tsparticles/engine\";\nimport { Pauser } from \"./Pauser.js\";\nexport async function loadExternalPauseInteraction(engine, refresh = true) {\n    assertValidVersion(engine, \"3.7.1\");\n    await engine.addInteractor(\"externalPause\", container => {\n        return Promise.resolve(new Pauser(container));\n    }, refresh);\n}\n","import { assertValidVersion } from \"@tsparticles/engine\";\nimport { Pusher } from \"./Pusher.js\";\nexport async function loadExternalPushInteraction(engine, refresh = true) {\n    assertValidVersion(engine, \"3.7.1\");\n    await engine.addInteractor(\"externalPush\", container => {\n        return Promise.resolve(new Pusher(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Push.js\";\nexport * from \"./Options/Interfaces/IPush.js\";\n","import { assertValidVersion } from \"@tsparticles/engine\";\nimport { Remover } from \"./Remover.js\";\nexport async function loadExternalRemoveInteraction(engine, refresh = true) {\n    assertValidVersion(engine, \"3.7.1\");\n    await engine.addInteractor(\"externalRemove\", container => {\n        return Promise.resolve(new Remover(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Remove.js\";\nexport * from \"./Options/Interfaces/IRemove.js\";\n","import { assertValidVersion } from \"@tsparticles/engine\";\nimport { Repulser } from \"./Repulser.js\";\nexport async function loadExternalRepulseInteraction(engine, refresh = true) {\n    assertValidVersion(engine, \"3.7.1\");\n    await engine.addInteractor(\"externalRepulse\", container => {\n        return Promise.resolve(new Repulser(engine, container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/RepulseBase.js\";\nexport * from \"./Options/Classes/RepulseDiv.js\";\nexport * from \"./Options/Classes/Repulse.js\";\nexport * from \"./Options/Interfaces/IRepulseBase.js\";\nexport * from \"./Options/Interfaces/IRepulseDiv.js\";\nexport * from \"./Options/Interfaces/IRepulse.js\";\n","import { assertValidVersion } from \"@tsparticles/engine\";\nimport { Slower } from \"./Slower.js\";\nexport async function loadExternalSlowInteraction(engine, refresh = true) {\n    assertValidVersion(engine, \"3.7.1\");\n    await engine.addInteractor(\"externalSlow\", container => {\n        return Promise.resolve(new Slower(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Slow.js\";\nexport * from \"./Options/Interfaces/ISlow.js\";\n","import { assertValidVersion } from \"@tsparticles/engine\";\nimport { Attractor } from \"./Attractor.js\";\nexport async function loadParticlesAttractInteraction(engine, refresh = true) {\n    assertValidVersion(engine, \"3.7.1\");\n    await engine.addInteractor(\"particlesAttract\", container => {\n        return Promise.resolve(new Attractor(container));\n    }, refresh);\n}\n","import { assertValidVersion } from \"@tsparticles/engine\";\nimport { Collider } from \"./Collider.js\";\nexport async function loadParticlesCollisionsInteraction(engine, refresh = true) {\n    assertValidVersion(engine, \"3.7.1\");\n    await engine.addInteractor(\"particlesCollisions\", container => {\n        return Promise.resolve(new Collider(container));\n    }, refresh);\n}\n","import { EasingType, assertValidVersion } from \"@tsparticles/engine\";\nexport async function loadEasingQuadPlugin(engine, refresh = true) {\n    assertValidVersion(engine, \"3.7.1\");\n    await engine.addEasing(EasingType.easeInQuad, value => value ** 2, false);\n    await engine.addEasing(EasingType.easeOutQuad, value => 1 - (1 - value) ** 2, false);\n    await engine.addEasing(EasingType.easeInOutQuad, value => (value < 0.5 ? 2 * value ** 2 : 1 - (-2 * value + 2) ** 2 / 2), false);\n    await engine.refresh(refresh);\n}\n","import { assertValidVersion } from \"@tsparticles/engine\";\nimport { EmojiDrawer } from \"./EmojiDrawer.js\";\nexport async function loadEmojiShape(engine, refresh = true) {\n    assertValidVersion(engine, \"3.7.1\");\n    await engine.addShape(new EmojiDrawer(), refresh);\n}\n","import { assertValidVersion } from \"@tsparticles/engine\";\nimport { LineDrawer } from \"./LineDrawer.js\";\nexport async function loadLineShape(engine, refresh = true) {\n    assertValidVersion(engine, \"3.7.1\");\n    await engine.addShape(new LineDrawer(), refresh);\n}\n","import { assertValidVersion } from \"@tsparticles/engine\";\nimport { SquareDrawer } from \"./SquareDrawer.js\";\nexport async function loadSquareShape(engine, refresh = true) {\n    assertValidVersion(engine, \"3.7.1\");\n    await engine.addShape(new SquareDrawer(), refresh);\n}\n","import { assertValidVersion } from \"@tsparticles/engine\";\nimport { StarDrawer } from \"./StarDrawer.js\";\nexport async function loadStarShape(engine, refresh = true) {\n    assertValidVersion(engine, \"3.7.1\");\n    await engine.addShape(new StarDrawer(), refresh);\n}\n","import { assertValidVersion } from \"@tsparticles/engine\";\nimport { LifeUpdater } from \"./LifeUpdater.js\";\nexport async function loadLifeUpdater(engine, refresh = true) {\n    assertValidVersion(engine, \"3.7.1\");\n    await engine.addParticleUpdater(\"life\", async (container) => {\n        return Promise.resolve(new LifeUpdater(container));\n    }, refresh);\n}\n","import { assertValidVersion } from \"@tsparticles/engine\";\nimport { RotateUpdater } from \"./RotateUpdater.js\";\nexport async function loadRotateUpdater(engine, refresh = true) {\n    assertValidVersion(engine, \"3.7.1\");\n    await engine.addParticleUpdater(\"rotate\", container => {\n        return Promise.resolve(new RotateUpdater(container));\n    }, refresh);\n}\n","import { assertValidVersion } from \"@tsparticles/engine\";\nimport { StrokeColorUpdater } from \"./StrokeColorUpdater.js\";\nexport async function loadStrokeColorUpdater(engine, refresh = true) {\n    assertValidVersion(engine, \"3.7.1\");\n    await engine.addParticleUpdater(\"strokeColor\", container => {\n        return Promise.resolve(new StrokeColorUpdater(container, engine));\n    }, refresh);\n}\n"],"names":["generatedAttribute","mouseLeaveEvent","mouseMoveEvent","touchEndEvent","errorPrefix","percentDenominator","halfRandom","millisecondsToSeconds","MoveDirection","isBoolean","arg","isString","isNumber","isObject","isArray","Array","isNull","undefined","origin","Vector3d","constructor","xOrCoords","y","z","this","_updateFromAngle","angle","length","x","Math","cos","sin","coords3d","Error","concat","create","atan2","sqrt","getLengthSq","clone","source","add","v","addTo","copy","distanceTo","sub","distanceToSq","div","n","divTo","mult","multTo","normalize","rotate","setTo","c","v3d","subFrom","Vector","super","_random","random","_animationLoop","nextFrame","cb","requestAnimationFrame","cancel","idx","cancelAnimationFrame","doublePI","PI","getRandom","clamp","Number","EPSILON","num","min","max","mix","comp1","comp2","weight1","weight2","floor","randomInRange","r","getRangeMax","getRangeMin","getRangeValue","value","setRangeValue","getDistances","pointA","pointB","dx","dy","distance","getDistance","degToRad","degrees","collisionVelocity","v1","v2","m1","m2","calcExactPositionOrRandomFromSize","data","_data$position$x2","_data$position6","_data$position$y2","_data$position7","position","size","width","height","parseAlpha","input","endsWith","parseFloat","AnimationMode","AnimationStatus","DestroyType","OutModeDirection","PixelMode","StartValueType","_logger","debug","console","error","info","log","verbose","warning","warn","getLogger","rectSideBounce","res","bounced","pSide","pOtherSide","rectSide","rectOtherSide","velocity","factor","isSsr","window","document","safeMatchMedia","query","matchMedia","isInArray","array","indexOf","async","loadFont","font","weight","fonts","load","_unused","itemFromArray","index","arguments","arrayRandomIndex","isPointInside","point","offset","radius","direction","bounds","inside","bottom","top","left","right","areBoundsInside","calculateBounds","deepExtend","destination","_len","sources","_key","sourceIsArray","key","destDict","map","isDivModeEnabled","mode","divs","findItemFromSingleOrMultiple","t","enable","divModeExecute","callback","executeOnSingleOrMultiple","divMode","selectors","selector","singleDivModeExecute","element","matches","some","checkSelector","circleBounceDataFromParticle","p","getPosition","getRadius","mass","getMass","options","bounce","horizontal","vertical","circleBounce","p1","p2","xVelocityDiff","yVelocityDiff","pos1","pos2","xDist","yDist","u1","u2","vFinal1","vFinal2","rectBounce","particle","divBounds","bounceOptions","resH","resV","obj","item","itemFromSingleOrMultiple","useIndex","find","initParticleNumericAnimationValue","pxRatio","valueRange","animationOptions","animation","delayTime","delay","loops","maxLoops","count","time","decay","increase","status","increasing","decrease","decreasing","autoStatus","auto","startValue","initialValue","getPositionOrSize","positionOrSize","canvasSize","percent","_","_objectWithoutProperties","_excluded","updateAnimation","changeDirection","destroyType","delta","_data$maxLoops","_data$loops","_data$maxLoops2","_data$velocity","_data$decay","_data$delayTime","_data$delayTime2","_data$delayTime3","_data$delayTime4","destroyed","minValue","maxValue","destroy","checkDestroy","assertValidVersion","engine","pluginVersion","version","AlterType","randomColorValue","midColorValue","stringToRgba","manager","colorManagers","values","startsWith","stringPrefix","parseString","rangeColorToRgb","color","colorToRgb","handleRangeColor","getRandomRgbColor","stringToRgb","handleColor","rangeColorToHsl","rgb","rgbToHsl","r1","g1","g","b1","b","h","l","s","double","hslToRgb","hsl","hMax","hNormalized","sNormalized","lNormalized","rgbFactor","grayscaleValue","round","channel","temp1","temp2","temp3","temp3Max","phaseThird","red","green","blue","hslaToRgba","hsla","rgbResult","a","fixedMin","getStyleFromRgb","opacity","getStyleFromHsl","colorMix","color1","color2","size1","size2","rgb1","rgb2","getLinkColor","linkColor","_p1$getFillColor","_p2$getFillColor","sourceColor","getFillColor","getStrokeColor","destColor","hslColor","getLinkRandomColor","optColor","blink","consent","getHslFromAnimation","getHslAnimationFromHsl","reduceFactor","resColor","setColorAnimation","colorValue","colorAnimation","speed","sync","updateColorValue","range","updateColor","ranges","defaultTransform","drawLine","context","begin","end","beginPath","moveTo","lineTo","closePath","clear","dimension","clearRect","drawParticle","_transform$a","_transform$b","_transform$b2","_transform$c","_transform$c2","_transform$d","_particle$strokeWidth","container","colorStyles","backgroundMask","composite","shadow","transform","pos","rotation","pathRotation","rotateData","rotating","transformData","d","setTransform","globalCompositeOperation","shadowColor","shadowBlur","blur","shadowOffsetX","shadowOffsetY","fill","fillStyle","strokeWidth","lineWidth","stroke","strokeStyle","drawData","minStrokeWidth","shape","drawer","shapeDrawers","get","draw","pixelRatio","retina","_objectSpread","shapeClose","shapeFill","drawShape","afterDraw","drawShapeAfterDraw","effect","effectDrawers","drawEffect","resetTransform","setTransformValue","newFactor","newValue","_factor$key","setStyle","canvas","style","important","elementStyle","setProperty","Canvas","_applyPostDrawUpdaters","updater","_postDrawUpdaters","_updater$afterDraw","call","_applyPreDrawUpdaters","ctx","zOpacity","_preDrawUpdaters","_updater$beforeDraw","getColorStyles","getTransformValues","updaterTransform","beforeDraw","_applyResizePlugins","plugin","_resizePlugins","_plugin$resize","resize","_getPluginParticleColors","fColor","sColor","_colorPlugins","particleFillColor","_engine","particleStrokeColor","_initCover","cover","actualOptions","coverRgb","coverColor","_coverColorStyle","Promise","resolve","reject","image","img","createElement","addEventListener","_coverImage","evt","src","_initStyle","_fullScreen","_originalStyle","_setFullScreenStyle","_resetOriginalStyle","_initTrail","trail","particles","move","trailFill","fillColor","_trailFill","_paintBase","baseColor","fillRect","paintBase","_paintImage","globalAlpha","drawImage","paintImage","_repairStyle","_safeMutationObserver","observer","disconnect","initBackground","Node","observe","attributes","originalStyle","_mutationObserver","zIndex","fullScreen","toString","_standardSize","stdSize","_context","_generated","paint","stop","remove","drawAsync","_particle$getStrokeCo","spawning","pfColor","psColor","_ref","_particle$bubble$opac","_particle$opacity","_particle$strokeOpaci","zIndexOptions","zIndexFactor","zOpacityFactor","opacityRate","bubble","zStrokeOpacity","strokeOpacity","sizeRate","drawParticlePlugin","drawPlugin","init","obs","MutationObserver","safeMutationObserver","records","record","type","attributeName","e","initUpdaters","initPlugins","background","backgroundColor","backgroundImage","backgroundPosition","backgroundRepeat","repeat","backgroundSize","plugins","_plugin$particleFillC","push","updaters","_ref2","_updater$getColorStyl","loadCanvas","dataset","ariaHidden","standardSize","offsetHeight","offsetWidth","retinaSize","getContext","currentSize","newSize","oldSize","started","setResizeFactor","windowResize","needsRefresh","updateActualOptions","setDensity","refresh","InteractivityDetect","manageListener","event","handler","addOptions","passive","capture","removeOptions","removeEventListener","EventListeners","_doMouseTouchClick","_canPush","mouseInteractivity","interactivity","mouse","mousePos","clickPosition","clickTime","Date","getTime","events","onClick","handleClickMode","setTimeout","_mouseTouchFinish","_handleThemeChange","mediaEvent","defaultThemes","themeName","dark","light","theme","themes","name","default","loadTheme","_handleVisibilityChange","_document","pauseOnBlur","hidden","pageHidden","pause","animationStatus","play","_handleWindowResize","_resizeTimeout","clearTimeout","handleResize","_manageInteractivityListeners","mouseLeaveTmpEvent","handlers","_handlers","interactivityEl","html","canvasEl","pointerEvents","onHover","mouseMove","touchStart","touchMove","touchEndClick","mouseUp","mouseDown","touchEnd","mouseLeave","touchCancel","_manageListeners","detectType","detectsOn","parent","_canvasEl$parentEleme","parentElement","parentNode","_manageMediaMatch","_manageResize","visibilityChange","mediaMatch","addListener","oldThemeChange","removeListener","themeChange","ResizeObserver","_resizeObserver","unobserve","entries","target","_mouseDown","clicking","downPosition","_mouseTouchClick","handled","mousePosition","clickPositionValid","_mouseTouchMove","mouseEvent","clientRect","getBoundingClientRect","clientX","clientY","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","_mouseEvent$offsetX","_mouseEvent$offsetY","_mouseEvent$offsetX2","_mouseEvent$offsetY2","_canvasRect$left","_canvasRect$top","touchEvent","lengthOffset","lastTouch","touches","defaultCoordinate","_touchEnd","from","changedTouches","touch","_touches","delete","identifier","_touchEndClick","_touchStart","set","performance","now","Map","addListeners","removeListeners","EventType","DivType","OptionsColor","Background","BackgroundMaskCover","BackgroundMask","FullScreen","ClickEvent","DivEvent","circle","Parallax","force","smooth","HoverEvent","parallax","ResizeEvent","Events","onDiv","tmp","Modes","_container","interactors","interactor","loadModeOptions","Interactivity","modes","ManualParticle","_data$position$x","_data$position$y","_data$position$mode","ResponsiveMode","ThemeMode","CollisionMode","OutMode","LimitMode","InteractorType","ParticleOutType","Responsive","maxWidth","Infinity","screen","ThemeDefault","any","Theme","AnimationOptions","RangedAnimationOptions","ColorAnimation","HslAnimation","AnimatableColor","CollisionsAbsorb","CollisionsOverlap","retries","ValueWithRandom","AnimationValueWithRandom","RangedAnimationValueWithRandom","ParticlesBounceFactor","ParticlesBounce","Collisions","absorb","maxSpeed","overlap","Effect","close","_this$options$effect","MoveAngle","MoveAttract","rotateX","rotateY","MoveCenter","MoveGravity","acceleration","inverse","MovePath","generator","MoveTrailFill","MoveTrail","OutModes","out","_data$bottom","_data$left","_data$right","_data$top","Spin","Move","attract","center","none","drift","gravity","path","outModes","spin","straight","vibrate","warp","OpacityAnimation","Opacity","ParticlesDensity","ParticlesNumberLimit","ParticlesNumber","density","limit","Shadow","Shape","_this$options$shape","SizeAnimation","Size","Stroke","ZIndex","velocityRate","ParticlesOptions","collisions","groups","number","reduceDuplicates","group","Object","keys","hasOwn","_this$groups$group","strokeToLoad","loadOptions","loadParticlesOptions","sourceOptionsArr","sourceOptions","_len2","_key2","Options","_findDefaultTheme","_this$themes$find","_importPreset","preset","getPreset","autoPlay","detectRetina","duration","fpsLimit","manualParticles","pauseOnOutsideViewport","responsive","zLayers","_this$_findDefaultThe","_this$_findDefaultThe2","optResponsive","sort","existingTheme","optTheme","setResponsive","defaultOptions","responsiveOptions","availWidth","setTheme","chosenTheme","clientDarkMode","defaultTheme","InteractionManager","_interactors","_externalInteractors","_particleInteractors","externalInteract","isEnabled","interact","_interactor$handleCli","getInteractors","external","particlesInteract","reset","half","randomString","fixOutMode","outMode","checkModes","diameter","coord","maxCoord","setCb","Particle","_this","_calcPosition","_outModes$left","_outModes$right","_outModes$top","_outModes$bottom","tryCount","pluginPos","particlePosition","exactPosition","fixHorizontal","fixVertical","_checkOverlap","increment","_calculateVelocity","baseVelocity","getParticleBaseVelocity","moveOptions","outside","rad","radOffset","collisionsOptions","overlapOptions","_getRollColor","_this$roll$angle","roll","backColor","alter","backFactor","backSum","darken","alterHsl","_initPosition","_this$options$move$ce","_this$options$move$ce2","zIndexValue","initialPosition","moveCenter","quarter","topRight","bottomRight","bottomLeft","topLeft","getParticleDirectionAngle","outType","override","_shapeDrawer$particle","unbreakable","inRange","slow","pathGenerator","shapeDrawer","particleDestroy","_plugin$particleDestr","particleDestroyed","_updater$particleDest","dispatchEvent","_this$bubble$color","_this$bubble$radius","_this$bubble$color2","strokeColor","id","overrideOptions","_effectData$fill","_effectData$close","_shapeData$fill","_shapeData$close","_effectDrawer","_shapeDrawer","_shapeDrawer2","_effectDrawer2","_effectDrawer2$partic","_shapeDrawer3","_shapeDrawer3$particl","effectClose","effectFill","lastPathTime","isRotating","misplaced","maxDistance","normal","ignoresResizeRatio","mainOptions","particlesOptions","effectType","shapeType","effectOptions","shapeOptions","_overrideOptions$effe","_overrideOptions$shap","availableEffects","availableShapes","effectData","loadEffectData","shapeData","loadShapeData","pathOptions","pathDelay","getPathGenerator","addPath","initParticle","initialVelocity","moveDecay","setLastZIndex","sides","effectDrawer","getEffectDrawer","loadEffect","getShapeDrawer","loadShape","sideCountFunc","getSidesCount","mover","movers","_mover$init","particleInit","_plugin$particleCreat","particleCreated","isInsideCanvas","isVisible","_updater$reset","Point","RangeType","BaseRange","Circle","contains","intersects","distPos","abs","Rectangle","rectangle","rectRange","pow","w","w2","h2","QuadTree","capacity","_subdivide","i","fixedIndex","_subs","_divided","_points","insert","check","queryCircle","queryRectangle","qTreeRectangle","Particles","_addToPool","_pool","_applyDensity","manualCount","_options$number$densi","numberOptions","_limit","_groupLimits","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","particlesCount","filter","removeQuantity","densityOptions","_pushParticle","initializer","pop","_nextId","canAdd","_array","_zArray","particleAdded","_removeParticle","zIdx","splice","particleRemoved","_needsSort","_lastZIndex","_interactionManager","_pluginsInitialized","quadTree","addManualParticles","forEach","addParticle","_this$_groupLimits$ge","limitMode","currentCount","countToRemove","wait","update","condition","_plugin$particlesInit","_plugin$particlesInit2","particlesInitialization","groupOptions","j","_groupOptions$number","getMovers","getUpdaters","pathGenerators","nb","redraw","removeAt","quantity","deleted","_resizeFactor","particlesToDelete","Set","_plugin$update","resizeFactor","_plugin$particleUpdat","particleUpdate","checkDelete","has","zArray","Retina","devicePixelRatio","ratio","sizeAnimationSpeed","moveDistance","props","moveDrift","moveSpeed","guardCheck","loadContainerOptions","Container","_intersectionManager","entry","isIntersecting","_nextFrame","timestamp","_this$_lastFrameTime","_smooth","_lastFrameTime","initDelta","addLifeTime","alive","Symbol","_delay","_duration","_lifeTime","_firstStart","_paused","_clickHandlers","_sourceOptions","_initialSourceOptions","_options","_eventListeners","_intersectionObserver","IntersectionObserver","safeIntersectionObserver","containerBuilt","addClickHandler","el","clickOrTouchHandler","posRetina","touched","touchMoved","touchStartHandler","touchMoveHandler","minCoordinate","radiusX","radiusY","touchCancelHandler","clearClickHandlers","_this$interactivity$e","_effectDrawer$destroy","_shapeDrawer$destroy","clearPlugins","mainArr","items","findIndex","deleteCount","containerDestroyed","refreshTime","frame","fn","_drawAnimationFrame","export","supported","blob","_plugin$handleClickMo","effects","getSupportedEffects","shapes","getSupportedShapes","availablePlugins","getAvailablePlugins","_drawer$init","_drawer$init2","_plugin$init","containerInit","_plugin$particlesSetu","particlesSetup","_currentTheme","handle","_plugin$pause","containerPaused","needsUpdate","containerPlay","start","HTMLElement","_plugin$start","containerStarted","_delayTimeout","_plugin$stop","containerStopped","newMaxWidth","_responsiveMaxWidth","EventDispatcher","_listeners","listener","arr","args","listeners","hasEventListener","removeAllEventListeners","getItemsFromInitializer","initializers","all","generatedTrue","generatedFalse","canvasTag","Engine","_configs","_domArray","_eventDispatcher","_initialized","easingFunctions","_initializers","presets","configs","config","addColorManager","addConfig","_config$key","configAdded","addEasing","easing","getEasing","addEffect","addInteractor","interactorInitializer","addMover","moverInitializer","addParticleUpdater","updaterInitializer","addPathGenerator","addPlugin","getPlugin","addPreset","addShape","validType","validTypes","dom","domItem","needsPlugin","_this$easingFunctions","params","_params$id","_params$element","url","fallback","response","fetch","ok","json","getDataFromUrl","currentOptions","oldIndex","description","newItem","old","domContainer","getDomContainer","getElementById","body","append","HTMLCanvasElement","tagName","toLowerCase","existingCanvases","getElementsByTagName","appendChild","fullPercent","getCanvasFromContainer","_plugin$loadOptions","_updater$loadOptions","setOnClickHandler","ExternalInteractorBase","ParticlesInteractorBase","RotateDirection","GradientType","EasingType","tsParticles","f","_t$id","m","then","particlesLoaded","className","_particle$pathGenerat","generate","applyPath","gravityOptions","gravityFactor","zVelocityFactor","BaseMover","_spinOptions$position","spinOptions","spinPos","spinCenter","spinAcceleration","clockwise","counterClockwise","initSpin","_particle$retina","_particle$retina$move","_particle$retina2","_particle$retina2$mov","_particle$retina$maxS","particleOptions","slowFactor","getProximitySpeedFactor","baseSpeed","maxSize","updateFunc","maxCanvasSize","halfMaxSize","dxFixed","dyFixed","hDistance","vDistance","hasVDistance","vel","applyDistance","CircleDrawer","circleRange","arc","drawCircle","_shapeData$angle","ColorUpdater","hAnimation","sAnimation","lAnimation","RgbIndexes","shorthandHexRegex","hexRegex","HexColorManager","_parseString","hexColor","hexFixed","replace","result","exec","parseInt","HslIndexes","HslColorManager","_colorValue$hsl","_colorValue$hsl2","OpacityUpdater","opacityOptions","opacityAnimation","_particle$opacity$max","_particle$opacity$max2","_particle$opacity$loo","_particle$opacity$max3","BounceOutMode","split","includes","particleBounce","newVelocity","minPos","bounceHorizontal","bounceVertical","DestroyOutMode","_delta","vx","vy","NoneOutMode","pRadius","OutOutMode","circVec","newDx","newDy","newPos","sizeValue","nextBounds","OutOfCanvasUpdater","_addUpdaterIfMissing","getUpdater","checkOutMode","_updateOutMode","RgbColorManager","_colorValue$rgb","rgbColor","_colorValue$rgb2","SizeUpdater","sizeAnimation","_particle$retina$size","_particle$size$maxLoo","_particle$size$maxLoo2","_particle$size$loops","_particle$size$maxLoo3","loadBasic","loadHexColorPlugin","loadHslColorPlugin","loadRgbColorPlugin","loadBaseMover","loadCircleShape","loadColorUpdater","loadOpacityUpdater","loadOutModesUpdater","loadSizeUpdater","defaultFont","EmojiDrawer","_emojiShapeDict","ImageBitmap","emojiDataKey","previousAlpha","drawEmoji","promises","_shapeData$font","_shapeData$padding","emoji","randomIndexData","emojiOptions","padding","fullSize","OffscreenCanvas","textBaseline","textAlign","fillText","transferToImageBitmap","processAttract","attractRadius","area","queryCb","attractOptions","attractFactor","normVec","Attract","easeOutQuad","attractMode","Attractor","finish","attractModeDistance","mouseMoveStatus","hoverEnabled","hoverMode","clickEnabled","clickMode","enabledCb","hoverAttract","clickAttract","_particle$interactivi","halfPI","processBounce","divBounce","bounceMode","bounceCb","querySelectorAll","elem","offsetLeft","offsetTop","tolerance","singleSelectorBounce","Bounce","Bouncer","bounceModeDistance","mouseBounce","BubbleBase","BubbleDiv","Bubble","ProcessBubbleType","calculateBubbleValue","particleValue","modeValue","optionsValue","bubbleMode","Bubbler","_clickBubble","mouseClickPos","bubbleOptions","bubbleModeDistance","_container$interactiv","_particle$opacity$val","durationEnd","distMouse","timeSpent","sizeData","bubbleObj","optValue","bubbleModeSize","particlesObj","_process","opacityData","_hoverBubbleColor","_hoverBubble","pointDistance","_hoverBubbleSize","_hoverBubbleOpacity","divBubble","finalColor","modeColor","bubbleColor","pColor","_divBubble$opacity","_options$interactivit","_particle$opacity$val2","_particle$opacity2","modeOpacity","optOpacity","modeSize","optSize","_data$particlesObj$va","bubbleParam","bubbleDuration","bubbleDistance","particlesParam","pObjBubble","pObj","_singleSelectorHover","repulseRadius","ConnectLinks","Connect","links","lineStyle","connectOptions","connect","gradStop","sourcePos","destPos","midRgb","grad","createLinearGradient","addColorStop","gradient","drawConnection","_p1$retina$linksWidth","ls","drawConnectLine","linksWidth","Connector","connectModeDistance","connectModeRadius","slice","distMax","xDiff","yDiff","GrabLinks","Grab","drawGrab","lineColor","_particle$retina$link","beginPos","colorLine","drawGrabLine","Grabber","grab","grabModeDistance","_grabLineOptions$colo","_particle$options$lin","grabLineOptions","lineOpacity","opacityLine","grabLineColor","linksOptions","Pauser","Push","Pusher","pushOptions","Remove","Remover","removeNb","RepulseBase","RepulseDiv","Repulse","repulseMode","Repulser","_clickRepulse","_container$repulse","repulseOptions","repulse","repulseDistance","repulseModeDistance","vect","_hoverRepulse","_processRepulse","divRepulse","_divRepulse$speed","easingFunc","repulseFactor","_singleSelectorRepulse","repulseOpts","hover","click","Slow","Slower","slowModeRadius","slowOptions","particlePos","dist","proximityFactor","currentColorRegex","loadImage","loading","Image","downloadSvgImage","svgData","text","replaceImageColor","imageData","svgColoredData","imageShape","colorStyle","preFillIndex","substring","replaceColorSvg","imageRes","gif","loaded","replaceColor","svg","Blob","domUrl","URL","webkitURL","createObjectURL","revokeObjectURL","img2","errorHandler","InterlaceOffsets","InterlaceSteps","ByteStream","bytes","Uint8ClampedArray","getString","reduce","acc","curr","String","fromCharCode","nextByte","nextTwoBytes","readSubBlocks","blockString","readSubBlocksBin","len","blockData","Uint8Array","skipSubBlocks","noData","DisposalMethod","GIFDataHeaders","defaultLoopCount","parseColorTable","byteStream","colors","parseBlock","avgAlpha","getFrameIndex","getTransparencyIndex","progressCallback","EndOfFile","frames","packedByte","localColorTableFlag","interlacedFlag","sortFlag","reserved","localColorCount","localColorTable","getColor","globalColorTable","ImageData","colorSpace","DOMException","EvalError","minCodeSize","clearCode","readBits","bytePos","bitPos","code","dic","pass","pixelPos","lineIndex","exit","last","bitmap","createImageBitmap","parseImageBlock","Extension","GraphicsControlExtension","GCreserved","disposalMethod","userInputDelayFlag","transparencyFlag","transparencyIndex","ApplicationExtension","applicationExtension","authenticationCode","applicationExtensions","CommentExtension","comments","PlainTextExtension","plainTextData","charSize","foregroundColor","parseExtensionBlock","loadGifImage","_getGIFLoopAmount","gifData","gifURL","buffer","arrayBuffer","totalTime","colorRes","pixelAspectRatio","globalColorTableFlag","globalColorCount","backgroundColorIndex","copyWithin","frameIndex","incrementFrameIndex","getframeIndex","Replace","message","decodeGIF","gifLoopCount","extension","NaN","getGIFLoopAmount","ImageDrawer","loadImageShape","_imageShape$replaceCo","addImage","images","_particle$gifFrame","offscreenCanvas","offscreenContext","_image$gifLoopCount","imageSmoothingQuality","imageSmoothingEnabled","gifFrame","gifTime","scale","UndefinedA","UndefinedB","UndefinedC","UndefinedD","Combine","RestoreBackground","putImageData","RestorePrevious","previousImageData","getImageData","drawGif","preload","_imageData$replaceCol","_imageData$fill","_imageData$close","_image$ratio","Preload","ImagePreloaderPlugin","preloadOptions","existing","extLength","_data$gif","_data$name","imageFunc","_data$name2","addLoadImageToEngine","preloader","LifeDelay","LifeDuration","Life","LifeUpdater","lifeOptions","life","justSpawned","widthRange","heightRange","updateLife","LineDrawer","_shapeData$cap","lineCap","cap","ParallaxMover","parallaxOptions","parallaxForce","canvasCenter","parallaxSmooth","centerDistance","attractDistance","ax","ay","p1Factor","p2Factor","updateAbsorb","r2","fixBounceSpeed","collisionMaxSpeed","resolveCollision","Collider","radius1","radius2","CircleWarp","rect","biggerCircle","rectSW","LinksShadow","LinksTriangle","frequency","Links","triangles","getLinkDistance","optDistance","absDiffs","warpDistances","Linker","_setColor","_linkContainer","linksColor","linksColors","_p1$retina$linksDista","linkOpt1","linksDistance","linkOpt2","setLinkFrequency","dictionary","ids","join","LinkInstance","_drawLinkLine","link","p1LinksOptions","_p1$options$twinkle","twinkle","lines","twinkleFreq","twinkleRgb","drawn","pi1","pi2","endNE","d1","yi","endSW","d2","xi","endSE","d3","drawLinkLine","_drawLinkTriangle","link1","link2","_triangleOptions$opac","triangleOptions","p3","opacityTriangle","_p1$retina$linksDista2","pos3","colorTriangle","drawTriangle","drawLinkTriangle","_drawTriangles","p1Links","_options$links","_p2$options$links","_p2$links","vertices","linkFreq","_getLinkFrequency","vertex","_getTriangleFrequency","_freqs","LinksPlugin","loadParticlesLinksInteraction","loadLinksInteraction","loadLinksPlugin","PolygonDrawerBase","side","sideCount","numerator","denominator","decimalSides","interiorAngleDegrees","interiorAngle","translate","drawPolygon","getCenter","getSidesData","_polygon$sides","polygon","PolygonDrawer","TriangleDrawer","loadPolygonShape","loadGenericPolygonShape","loadTriangleShape","RotateAnimation","Rotate","RotateUpdater","rotateOptions","rotateDirection","rotateAnimation","fixFactor","SquareDrawer","fixedRadius","fixedDiameter","drawSquare","StarDrawer","_particle$starInset","inset","starInset","drawStar","_star$sides","star","_star$inset","StrokeColorUpdater","_stroke$opacity","_stroke$color","_rangeColorToHsl","strokeAnimation","strokeHslColor","loadSlim","loadParallaxMover","loadExternalAttractInteraction","loadExternalBounceInteraction","loadExternalBubbleInteraction","loadExternalConnectInteraction","loadExternalGrabInteraction","loadExternalPauseInteraction","loadExternalPushInteraction","loadExternalRemoveInteraction","loadExternalRepulseInteraction","loadExternalSlowInteraction","loadParticlesAttractInteraction","loadParticlesCollisionsInteraction","easeInQuad","easeInOutQuad","loadEasingQuadPlugin","loadEmojiShape","loadLineShape","loadSquareShape","loadStarShape","loadLifeUpdater","loadRotateUpdater","loadStrokeColorUpdater"],"sourceRoot":""}